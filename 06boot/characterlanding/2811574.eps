%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: File searching & Meditation concept-3 up-01.eps
%%Creator: Adobe Illustrator(R) 23.0
%%For: Ayib
%%CreationDate: 26/08/19
%%BoundingBox: 0 0 500 500
%%HiResBoundingBox: 0 0 500 500
%%CropBox: 0 0 500 500
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 23.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 23.0.2 x567 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c145 79.163499, 2018/08/13-16:40:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">File searching &amp; Meditation concept-3 up-01</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2019-08-26T15:31:08+07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2019-08-26T15:31:08+07:00</xmp:ModifyDate>
         <xmp:CreateDate>2019-08-26T15:31:08+07:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 23.0 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBKwErAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABK/++AAEA&#xA;AQEr/74AAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9R4UOxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;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&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FX//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:85defa70-b0e2-42b1-b0ec-2bb4cbfd92ba</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:85defa70-b0e2-42b1-b0ec-2bb4cbfd92ba</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:b61d6e84-c226-a241-b189-b490a55b91ab</stRef:instanceID>
            <stRef:documentID>xmp.did:f1656b14-8022-4cfc-b358-1be298ce7bab</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9055feea-6df3-418a-84b0-35eb367eec15</stEvt:instanceID>
                  <stEvt:when>2016-04-18T22:41:34+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:85defa70-b0e2-42b1-b0ec-2bb4cbfd92ba</stEvt:instanceID>
                  <stEvt:when>2019-08-26T15:31:08+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>500.000000</stDim:w>
            <stDim:h>500.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 1</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=37 G=188 B=175 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>37</xmpG:red>
                           <xmpG:green>188</xmpG:green>
                           <xmpG:blue>175</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>65</xmpG:red>
                           <xmpG:green>64</xmpG:green>
                           <xmpG:blue>66</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=80</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>88</xmpG:red>
                           <xmpG:green>89</xmpG:green>
                           <xmpG:blue>91</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=70</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>109</xmpG:red>
                           <xmpG:green>110</xmpG:green>
                           <xmpG:blue>113</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=60</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>130</xmpG:green>
                           <xmpG:blue>133</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=50</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>149</xmpG:green>
                           <xmpG:blue>152</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=40</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>167</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>172</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>188</xmpG:red>
                           <xmpG:green>190</xmpG:green>
                           <xmpG:blue>192</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=20</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>209</xmpG:red>
                           <xmpG:green>211</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=10</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>231</xmpG:green>
                           <xmpG:blue>232</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=5</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Freepik logo</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=165 G=183 B=198</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>165</xmpG:red>
                           <xmpG:green>183</xmpG:green>
                           <xmpG:blue>198</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=29 G=38 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>29</xmpG:red>
                           <xmpG:green>38</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=249 G=251 B=252</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>249</xmpG:red>
                           <xmpG:green>251</xmpG:green>
                           <xmpG:blue>252</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 5</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=209 B=91 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>209</xmpG:green>
                           <xmpG:blue>91</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=236 G=130 B=125</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>236</xmpG:red>
                           <xmpG:green>130</xmpG:green>
                           <xmpG:blue>125</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=190 G=225 B=244</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>190</xmpG:red>
                           <xmpG:green>225</xmpG:green>
                           <xmpG:blue>244</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=107 B=241</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>107</xmpG:green>
                           <xmpG:blue>241</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=135 G=140 B=240</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>135</xmpG:red>
                           <xmpG:green>140</xmpG:green>
                           <xmpG:blue>240</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=177 G=178 B=243</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>177</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>243</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=86 G=84 B=140</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>86</xmpG:red>
                           <xmpG:green>84</xmpG:green>
                           <xmpG:blue>140</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>kulit orang II</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>133</xmpG:green>
                           <xmpG:blue>120</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Kulit orang</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>175</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -500 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 500 li
500 500 li
500 0 li
cp
clp
500 500 mo
0 500 li
0 0 li
500 0 li
500 500 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.0154421 .00189212 .00241093 0 cmyk
f
112.749 143.811 mo
141.43 119.799 108.523 98.2724 124.751 76.2822 cv
140.156 55.4086 182.838 58.8613 205.018 59.6406 cv
231.634 60.5762 357.316 58.4766 372.379 73.0879 cv
385.888 86.1919 387.948 108.235 384.851 122.914 cv
380.373 144.143 401.422 144.14 412.603 158.279 cv
436.913 189.021 404.364 224.178 411.889 250.369 cv
421.754 284.704 453.631 305.544 425.717 338.364 cv
410.762 355.947 394.243 361.44 370.823 364.611 cv
337.87 369.073 301.801 368.953 267.466 368.833 cv
260.479 368.809 253.564 368.785 246.762 368.799 cv
208.503 368.88 166.606 364.19 129.456 355.598 cv
104.308 349.781 55.6382 345.656 61.2183 308.724 cv
64.5624 286.591 96.7114 238.489 79.4575 204.925 cv
69.0883 184.754 88.9038 163.773 112.749 143.811 cv
.0807507 .00375372 .00900282 0 cmyk
f
215.636 368.872 mo
186.495 368.872 156.683 368.351 129.064 364.611 cv
105.858 361.469 89.4283 356.047 74.5812 338.844 cv
74.4441 338.685 74.3073 338.525 74.1703 338.364 cv
65.6328 328.326 61.8424 319.3 60.976 310.621 cv
59.0095 290.923 72.1054 273.02 78.9531 249.186 cv
85.8378 225.222 62.4294 207.221 77.4349 187.13 cv
78.8293 185.263 80.5556 183.378 82.6685 181.469 cv
101.108 164.805 147.431 151.647 141.387 121.614 cv
138.427 106.907 131.459 97.294 144.968 84.1899 cv
160.032 69.5781 194.553 68.001 214.152 65.0581 cv
232.132 62.3587 250.791 61.2559 269.297 60.5298 cv
277.882 60.1929 286.435 59.9371 294.87 59.6406 cv
301.429 59.4102 309.775 58.9461 318.684 58.9461 cv
338.387 58.9461 360.821 61.2189 372.611 73.3145 cv
373.518 74.2447 374.361 75.2324 375.136 76.2822 cv
389.281 95.4498 368.26 121.385 385.993 135.944 cv
388.604 138.087 392.057 139.986 396.585 141.578 cv
404.045 144.27 409.409 150.49 412.631 158.315 cv
417.606 170.396 417.472 186.303 412.056 198.958 cv
404.107 217.535 392.363 238.497 404.646 258.359 cv
411.471 269.394 422.38 278.009 430.101 288.761 cv
434.263 294.556 437.498 300.972 438.669 308.724 cv
440.827 323.004 434.873 332.38 425.305 338.844 cv
410.128 349.099 385.856 352.03 370.432 355.598 cv
333.982 364.028 292.967 368.702 255.298 368.798 cv
254.9 368.799 254.499 368.8 254.102 368.8 cv
253.777 368.8 253.451 368.799 253.126 368.799 cv
252.068 368.797 251.007 368.795 249.944 368.795 cv
249.602 368.795 249.259 368.795 248.916 368.795 cv
247.478 368.795 246.036 368.796 244.589 368.798 cv
240.563 368.805 236.504 368.819 232.421 368.833 cv
226.863 368.853 221.264 368.872 215.636 368.872 cv
134.207 156.155 mo
131.141 156.155 128.633 158.663 128.633 161.728 cv
128.633 164.794 131.141 167.303 134.207 167.303 cv
174.374 167.303 li
177.439 167.303 179.948 164.794 179.948 161.728 cv
179.948 158.663 177.439 156.155 174.374 156.155 cv
173.313 156.155 li
173.322 156.024 173.328 155.893 173.328 155.76 cv
173.328 152.478 170.642 149.792 167.359 149.792 cv
162.687 149.792 li
162.693 149.529 li
162.693 146.102 159.889 143.297 156.462 143.297 cv
155.245 143.297 li
151.818 143.297 149.014 146.102 149.014 149.529 cv
149.02 149.792 li
143.159 149.792 li
139.876 149.792 137.19 152.478 137.19 155.76 cv
137.19 155.893 137.196 156.024 137.205 156.155 cv
134.207 156.155 li
339.953 120.821 mo
339.37 122.331 li
337.861 122.914 li
339.37 123.497 li
339.953 125.007 li
340.536 123.497 li
342.046 122.914 li
340.536 122.331 li
339.953 120.821 li
184.226 114.87 mo
183.314 117.23 li
180.953 118.143 li
183.314 119.055 li
184.226 121.416 li
185.138 119.055 li
187.499 118.143 li
185.138 117.23 li
184.226 114.87 li
141.283 108.226 mo
140.7 109.735 li
139.19 110.318 li
140.7 110.901 li
141.283 112.411 li
141.866 110.901 li
143.375 110.318 li
141.866 109.735 li
141.283 108.226 li
269.37 92.0483 mo
266.155 92.0483 263.525 94.6787 263.525 97.894 cv
263.525 101.109 266.155 103.739 269.37 103.739 cv
353.56 103.739 li
356.775 103.739 359.406 101.109 359.406 97.894 cv
359.406 94.6787 356.775 92.0483 353.56 92.0483 cv
343.668 92.0483 li
343.423 89.1299 340.962 86.8164 337.983 86.8164 cv
325.622 86.8164 li
325.335 83.334 322.397 80.5728 318.844 80.5728 cv
294 80.5728 li
290.448 80.5728 287.51 83.334 287.223 86.8164 cv
281.835 86.8164 li
278.855 86.8164 276.395 89.1299 276.149 92.0483 cv
269.37 92.0483 li
366.477 87.9707 mo
365.893 89.4805 li
364.384 90.0635 li
365.893 90.6464 li
366.477 92.1557 li
367.06 90.6464 li
368.569 90.0635 li
367.06 89.4805 li
366.477 87.9707 li
201.953 75.3716 mo
201.37 76.8809 li
199.861 77.4643 li
201.37 78.0474 li
201.953 79.5566 li
202.536 78.0474 li
204.046 77.4643 li
202.536 76.8809 li
201.953 75.3716 li
278.891 66.5415 mo
277.979 68.9028 li
275.618 69.8149 li
277.979 70.7265 li
278.891 73.0879 li
279.803 70.7265 li
282.164 69.8149 li
279.803 68.9028 li
278.891 66.5415 li
level3{
gsave
clp
[1.89775e-14 309.926 -309.926 1.89775e-14 249.944 58.946 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~"=h7g">%@h">7Fh">IOi"#@Oi"#RXj"#dak"#mdk!]dgl!^!sn!^+!n!^=-p!^O6q!^aBs!CX?r!CjHs
!D'Qt!D9Zu!DK`u!)9]u!)Kg!!)Tm"!)g!#!*$*$!*60$!*H<&!*Q?&!*cE&!*uN'!+)Q'!+;W'!+M]'
!+V`'!+qo)!,%o(!,8#)!,A&)!,S/*!,e5*!-">+!-4G,!-FM,!-OP,!-aY-!-jY,!.'b-!.9h-!.Kq.
!.^".!.p+/!/$(-!/6.-!/?1-!/Q7-!/c@.!/lC.!0)I.!0;R/!0DU/!0V[/!0ha/!0qa.!1.g.!1@p/
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!1@p/!1Rp-!1ds,!1mm)!2*m'"/0*&#,5?&$DUZ&%AZl%&Z&5&'W4M&(oTk'*2u1'+0%C&,HE^&-EJp%
.]k3$0!?Q$0sDf$26e)#33j>#4L>_$5d_%$7(*=#8%/U$9=Y$&:V$N+;n;r/=M"P5>eL+;@_DaABYFHH
DSH/OFM@eUH,'C[J&)*bKY[WgM89/lNktbrP/72!Q,3M$RDT")T#1O.Tu-j1Ur*04W58N7X2=o;Y/:5>
Z,-J@[)2kD[_i(F\\eCI]#+LJ]u'gM^;BpN_8?6Q_nuHS`PMTT`kqcVaMIoWahe#Xb/+,Ybea>[c,'G\
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.37076 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.89775e-14 309.926 -309.926 1.89775e-14 249.944 58.946 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~!s8W-!s8W,!WiE)!W`<&!<E3%!<E0#zzzzzzzzzzzzzzzzzzzz!!!$$!sAc4#RUqJ%1a$`',22u)&jP9
*ZuUN,UFfd.P!)'0/54=2)[BR4$5\k5sdt.7S$*D9MSA\;cQn$>$G<@@V'1dCi435Fa&+XIXm$'L51VD
NK93bPE_B"R@Bb=T:r!SUo()iWiN5'YHY:;Za@-K\%&uZ]">Vg]tV7s_8=(,`5T^7`lH0AaN;QHb0/#Q
~>
<~.4Zr$0/,+:1c70M3'',_4[)(r6:4127nH<G9MJ8X:f1.j<EE:)>$G6;?=.,M@Us(_BPD0rCi+'/EH6/C
Fa&%SH@($gIt3-&K8##6Ll%"IN/`mZOHPflQ'Rc)R@9V8S=Q4BT:_dLTqS0SU8+KYUnji`VPg>iW2Q\p
WN)u!X/i>'Xf\b0YHY78Z*CR>Za@*H[C*HO[^WcW\[f8]]"5Jb]Y(ni]tM+n^:q=q^V@S"^qdb$^qde&
_83t(_84"*_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX.*_83t(_83t(
~>
<~_83q%^:h4m]=YYb\[f8]\@B&X\$i]O['R'CYct@8YHP+2XK/D&WMlbnVPU&^U7n6PSt2FBS!ob4R$X)'
P`q8mOH5E]N/NRLLP:G8JqAQ(IsufoI!U'_G'.nJEc>r7D/3j!An>I\?X6o?=B8C!;,9nZ8Ou<>6U<q"
4#o5W1GLO6.OZSg+s7pH)Aj8*'+k`a$O?q?"9JT(zzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
gsave
396.585 141.578 mo
361.309 129.171 391.364 98.2724 375.136 76.2822 cv
359.731 55.4086 317.05 58.8613 294.87 59.6406 cv
268.253 60.5762 240.472 61.1065 214.152 65.0581 cv
194.553 68.001 160.032 69.5781 144.968 84.1899 cv
131.459 97.294 138.427 106.907 141.387 121.614 cv
147.431 151.647 101.108 164.805 82.6685 181.469 cv
57.8179 203.926 86.4775 222.996 78.9531 249.186 cv
69.0883 283.522 46.2559 305.544 74.1703 338.364 cv
89.1255 355.947 105.644 361.44 129.064 364.611 cv
162.017 369.073 198.086 368.953 232.421 368.833 cv
239.408 368.809 246.323 368.785 253.126 368.799 cv
291.384 368.88 333.281 364.19 370.432 355.598 cv
395.579 349.781 444.25 345.656 438.669 308.724 cv
435.325 286.591 415.149 275.341 404.646 258.359 cv
392.363 238.497 404.107 217.535 412.056 198.958 cv
420.979 178.107 415.563 148.427 396.585 141.578 cv
clp
65.1079 235.202 mo
75.0298 233.312 82.1899 240.763 82.6631 241.235 cv
83.0991 239.709 87.4243 225.643 101.454 220.664 cv
110.322 217.501 118.136 219.755 120.826 220.664 cv
119.045 215.866 119.99 210.523 123.261 206.707 cv
126.786 202.6 132.493 200.928 137.799 202.491 cv
143.796 193.223 154.809 188.425 165.64 190.352 cv
176.326 192.278 184.903 200.383 187.447 210.959 cv
190.682 206.125 196.498 203.69 201.985 204.89 cv
206.892 205.944 210.817 209.687 212.308 214.594 cv
218.995 207.616 229.136 204.999 238.331 207.943 cv
246.522 210.519 252.779 217.124 255.083 225.317 cv
261.665 220.117 270.524 218.153 278.762 220.746 cv
291.085 224.625 298.846 237.704 296.162 250.94 cv
282.664 250.94 269.166 250.94 255.668 250.94 cv
238.841 275.42 li
49.9521 275.42 li
51.4419 242.908 57.5483 236.62 65.1079 235.202 cv
cp
level3{
gsave
clp
[8.76458e-15 -143.137 143.137 8.76458e-15 173.322 328.403 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.76458e-15 -143.137 143.137 8.76458e-15 173.322 328.403 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
204.432 238.588 mo
214.354 236.698 221.514 244.149 221.986 244.621 cv
222.422 243.094 226.748 229.029 240.777 224.05 cv
249.645 220.887 257.46 223.141 260.149 224.05 cv
258.368 219.252 259.313 213.909 262.584 210.093 cv
266.11 205.986 271.816 204.313 277.123 205.876 cv
283.12 196.608 294.133 191.811 304.963 193.737 cv
315.649 195.664 324.227 203.769 326.771 214.345 cv
330.006 209.511 335.821 207.076 341.309 208.275 cv
346.215 209.33 350.141 213.073 351.631 217.979 cv
358.319 211.001 368.459 208.384 377.655 211.329 cv
385.846 213.905 392.103 220.509 394.406 228.703 cv
400.988 223.503 409.848 221.538 418.085 224.131 cv
430.409 228.01 438.17 241.089 435.485 254.325 cv
421.987 254.325 408.489 254.325 394.992 254.325 cv
378.165 254.325 li
189.275 254.325 li
190.765 246.293 196.872 240.005 204.432 238.588 cv
cp
level3{
gsave
clp
[6.25481e-15 -102.149 102.149 6.25481e-15 312.646 288.751 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.25481e-15 -102.149 102.149 6.25481e-15 312.646 288.751 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
407.25 213.301 mo
407.25 213.301 425.322 194.073 419.9 189.253 cv
416.147 185.916 408.12 196.973 408.082 196.958 cv
408.082 196.958 413.404 175.699 403.595 176.441 cv
396.143 177.416 396.558 195.54 396.496 195.549 cv
396.496 195.549 391.687 185.089 386.985 188.104 cv
380.178 192.468 390.977 209.537 390.977 209.537 cv
390.977 209.537 383.298 200.06 379.297 204.994 cv
374.044 211.472 384.171 226.392 384.171 226.392 cv
384.171 226.392 369.653 220.128 371.255 230.207 cv
372.436 237.636 376.581 244.983 382.433 249.875 cv
390.125 253.75 412.015 246.508 411.036 237.06 cv
410.433 231.25 400.188 233.408 400.188 233.408 cv
407.455 230.593 422.928 222.669 420.647 213.298 cv
419.008 206.56 407.253 213.305 407.25 213.301 cv
cp
level3{
gsave
clp
[-13.5867 -69.2963 69.2963 -13.5867 403.456 248.419 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-13.5867 -69.2963 69.2963 -13.5867 403.456 248.419 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
396.27 242.085 mo
394.6 242.502 392.924 242.762 391.279 242.9 cv
390.008 243.007 388.747 242.988 387.513 242.889 cv
390.455 237.279 393.016 231.47 395.174 225.515 cv
396.881 225.356 398.609 225.088 400.294 224.631 cv
402.147 224.13 404.046 223.426 405.872 222.549 cv
407.696 221.672 409.492 220.595 411.215 219.338 cv
412.937 218.082 414.605 216.658 416.135 214.995 cv
414.568 216.593 412.875 217.941 411.137 219.119 cv
409.399 220.296 407.598 221.292 405.779 222.086 cv
403.959 222.881 402.077 223.5 400.251 223.923 cv
398.683 224.287 397.082 224.487 395.507 224.586 cv
397.167 219.982 398.587 215.185 399.7 210.42 cv
401.399 209.599 403.078 208.685 404.652 207.503 cv
405.493 206.932 406.277 206.235 407.08 205.58 cv
407.851 204.863 408.634 204.15 409.362 203.375 cv
410.809 201.835 412.225 200.134 413.483 198.293 cv
414.74 196.454 415.896 194.483 416.859 192.365 cv
415.84 194.44 414.637 196.353 413.34 198.129 cv
412.042 199.907 410.594 201.534 409.127 202.998 cv
408.389 203.734 407.598 204.407 406.822 205.083 cv
406.015 205.697 405.228 206.352 404.389 206.88 cv
402.965 207.875 401.466 208.648 399.956 209.335 cv
401.939 199.946 403.102 190.698 403.503 181.105 cv
402.842 190.669 401.431 199.867 399.193 209.183 cv
398.156 207.97 397.151 206.717 396.227 205.386 cv
395.162 203.854 394.127 202.288 393.167 200.683 cv
392.208 199.081 391.263 197.454 390.37 195.816 cv
389.477 194.178 388.608 192.53 387.803 190.858 cv
388.549 192.562 389.36 194.249 390.196 195.929 cv
391.033 197.608 391.922 199.282 392.829 200.938 cv
393.736 202.597 394.722 204.225 395.742 205.83 cv
396.716 207.362 397.793 208.815 398.915 210.232 cv
397.672 214.966 396.118 219.724 394.328 224.279 cv
393.094 223.402 391.915 222.386 390.871 221.254 cv
389.662 219.944 388.523 218.487 387.489 216.993 cv
386.454 215.497 385.478 213.932 384.563 212.351 cv
383.649 210.771 382.773 209.165 381.985 207.526 cv
382.713 209.196 383.532 210.84 384.391 212.465 cv
385.249 214.091 386.171 215.708 387.158 217.266 cv
388.145 218.822 389.239 220.354 390.419 221.754 cv
391.476 223.007 392.688 224.153 393.985 225.158 cv
391.693 230.971 389.009 236.628 385.957 242.081 cv
385.05 241 384.174 239.885 383.361 238.713 cv
382.344 237.247 381.354 235.742 380.433 234.205 cv
379.512 232.669 378.606 231.109 377.748 229.537 cv
376.889 227.965 376.053 226.382 375.274 224.78 cv
375.993 226.414 376.77 228.035 377.57 229.648 cv
378.369 231.261 379.216 232.869 380.08 234.458 cv
380.945 236.049 381.879 237.615 382.845 239.151 cv
383.662 240.452 384.556 241.698 385.486 242.914 cv
381.893 249.306 377.69 255.367 373.134 261.105 cv
373.888 261.687 374.265 261.977 375.02 262.558 cv
379.489 256.606 383.589 250.336 387.06 243.746 cv
388.433 243.812 389.825 243.784 391.22 243.606 cv
392.901 243.393 394.601 243.053 396.285 242.557 cv
397.966 242.062 399.654 241.455 401.314 240.723 cv
402.975 239.99 404.625 239.149 406.236 238.161 cv
404.607 239.074 402.947 239.836 401.283 240.489 cv
399.62 241.143 397.938 241.669 396.27 242.085 cv
cp
.714504 .765866 0 0 cmyk
f
85.5698 241.631 mo
85.5698 241.631 76.54 227.211 80.5708 224.839 cv
83.3623 223.197 87.0586 231.194 87.0845 231.189 cv
87.0845 231.189 86.3726 217.078 92.4849 218.772 cv
97.0767 220.319 94.5508 231.731 94.5894 231.745 cv
94.5894 231.745 98.9375 225.729 101.535 228.223 cv
105.296 231.834 96.3335 241.282 96.3335 241.282 cv
96.3335 241.282 102.374 236.246 104.289 239.867 cv
106.803 244.621 98.5332 252.794 98.5332 252.794 cv
98.5332 252.794 108.499 250.645 106.227 256.819 cv
104.552 261.371 101.013 265.501 96.7007 267.864 cv
91.3506 269.355 78.4092 262.041 80.2085 256.187 cv
81.3149 252.586 87.5259 255.231 87.5259 255.231 cv
83.2813 252.543 74.4829 245.599 77.0957 239.956 cv
78.9746 235.898 85.5679 241.633 85.5698 241.631 cv
cp
level3{
gsave
clp
[17.2465 -42.1373 -42.1373 -17.2465 83.5848 264.319 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[17.2465 -42.1373 -42.1373 -17.2465 83.5848 264.319 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
88.9209 261.209 mo
89.9248 261.682 90.9526 262.055 91.9756 262.348 cv
92.7666 262.574 93.5669 262.72 94.3594 262.811 cv
93.1992 258.896 92.3047 254.901 91.6831 250.864 cv
90.6235 250.551 89.564 250.166 88.5547 249.667 cv
87.4453 249.118 86.332 248.435 85.2866 247.652 cv
84.2422 246.87 83.2412 245.964 82.3081 244.955 cv
81.3755 243.945 80.498 242.836 79.7383 241.592 cv
80.5298 242.799 81.4326 243.863 82.3848 244.825 cv
83.3369 245.788 84.3516 246.642 85.4028 247.371 cv
86.4551 248.102 87.5684 248.729 88.6704 249.224 cv
89.6172 249.65 90.605 249.976 91.5889 250.235 cv
91.1133 247.116 90.814 243.904 90.7051 240.751 cv
89.7334 240.02 88.7856 239.231 87.9375 238.288 cv
87.4766 237.822 87.0679 237.283 86.6421 236.768 cv
86.2437 236.218 85.8374 235.67 85.4736 235.088 cv
84.751 233.934 84.0674 232.681 83.5015 231.359 cv
82.936 230.039 82.4512 228.648 82.1064 227.188 cv
82.4917 228.628 83.0137 229.988 83.6123 231.273 cv
84.2114 232.56 84.9238 233.771 85.6694 234.879 cv
86.0444 235.437 86.4609 235.961 86.8672 236.486 cv
87.3008 236.975 87.7168 237.488 88.1816 237.926 cv
88.9575 238.734 89.8091 239.41 90.6792 240.033 cv
90.5972 233.847 91.0166 227.852 91.9604 221.733 cv
91.1846 227.866 90.9282 233.86 91.1807 240.032 cv
91.9878 239.395 92.7798 238.728 93.5313 238.001 cv
94.3955 237.165 95.2461 236.303 96.0542 235.408 cv
96.8608 234.514 97.6616 233.603 98.4307 232.679 cv
99.2002 231.754 99.9556 230.82 100.673 229.863 cv
99.9893 230.848 99.2656 231.813 98.5264 232.771 cv
97.7876 233.729 97.0161 234.677 96.2358 235.612 cv
95.4546 236.547 94.6279 237.455 93.7822 238.342 cv
92.9746 239.189 92.1118 239.974 91.2251 240.73 cv
91.4204 243.88 91.8091 247.084 92.3726 250.189 cv
93.2632 249.788 94.1357 249.292 94.9375 248.707 cv
95.8657 248.029 96.7676 247.25 97.6084 246.434 cv
98.4502 245.617 99.2627 244.749 100.039 243.863 cv
100.814 242.978 101.569 242.071 102.272 241.133 cv
101.603 242.099 100.88 243.036 100.134 243.957 cv
99.3877 244.878 98.603 245.786 97.7837 246.648 cv
96.9653 247.509 96.082 248.342 95.1602 249.08 cv
94.3359 249.74 93.4258 250.313 92.48 250.787 cv
93.2036 254.751 94.1948 258.664 95.4453 262.494 cv
96.1533 261.924 96.8467 261.328 97.5073 260.688 cv
98.3335 259.888 99.1479 259.06 99.9229 258.202 cv
100.697 257.346 101.464 256.473 102.204 255.585 cv
102.943 254.698 103.669 253.801 104.363 252.885 cv
103.704 253.828 103.01 254.757 102.303 255.678 cv
101.595 256.598 100.859 257.51 100.114 258.406 cv
99.3682 259.305 98.5815 260.179 97.7788 261.03 cv
97.0996 261.751 96.3784 262.427 95.6387 263.08 cv
97.1128 267.572 99.0146 271.931 101.18 276.13 cv
100.63 276.403 100.356 276.54 99.8062 276.813 cv
97.7222 272.49 95.9111 268.012 94.5396 263.41 cv
93.6626 263.28 92.7852 263.088 91.9253 262.802 cv
90.8882 262.457 89.8555 262.03 88.8525 261.506 cv
87.8506 260.982 86.8589 260.388 85.9004 259.718 cv
84.9409 259.047 84.0024 258.309 83.1069 257.482 cv
84.0234 258.264 84.978 258.953 85.9487 259.574 cv
86.9194 260.194 87.918 260.737 88.9209 261.209 cv
cp
.714504 .765866 0 0 cmyk
f
104.202 212.61 mo
104.202 212.61 90.1968 190.246 96.4487 186.567 cv
100.778 184.02 106.511 196.423 106.551 196.415 cv
106.551 196.415 105.447 174.528 114.927 177.156 cv
122.049 179.556 118.131 197.256 118.19 197.277 cv
118.19 197.277 124.935 187.946 128.963 191.814 cv
134.797 197.416 120.896 212.069 120.896 212.069 cv
120.896 212.069 130.265 204.258 133.234 209.874 cv
137.133 217.247 124.308 229.923 124.308 229.923 cv
124.308 229.923 139.765 226.59 136.241 236.167 cv
133.644 243.227 128.154 249.632 121.466 253.298 cv
113.168 255.61 93.0957 244.266 95.8867 235.186 cv
97.6025 229.602 107.235 233.705 107.235 233.705 cv
100.652 229.535 87.0063 218.764 91.0591 210.012 cv
93.9722 203.72 104.199 212.613 104.202 212.61 cv
cp
level3{
gsave
clp
[26.749 -65.3543 -65.3543 -26.749 101.123 247.799 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[26.749 -65.3543 -65.3543 -26.749 101.123 247.799 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
109.399 242.976 mo
110.957 243.708 112.55 244.288 114.137 244.742 cv
115.364 245.093 116.604 245.318 117.834 245.46 cv
116.035 239.387 114.647 233.192 113.684 226.932 cv
112.04 226.445 110.396 225.847 108.832 225.073 cv
107.111 224.222 105.384 223.164 103.763 221.95 cv
102.143 220.736 100.59 219.332 99.1431 217.765 cv
97.6968 216.199 96.3359 214.479 95.1572 212.55 cv
96.3848 214.422 97.7847 216.073 99.2617 217.565 cv
100.739 219.057 102.313 220.382 103.943 221.514 cv
105.575 222.646 107.302 223.618 109.01 224.387 cv
110.479 225.047 112.011 225.554 113.537 225.956 cv
112.8 221.118 112.335 216.136 112.167 211.246 cv
110.659 210.111 109.189 208.889 107.874 207.425 cv
107.159 206.702 106.525 205.867 105.864 205.068 cv
105.247 204.215 104.617 203.364 104.053 202.463 cv
102.932 200.672 101.872 198.729 100.994 196.679 cv
100.117 194.631 99.3647 192.474 98.8301 190.209 cv
99.4277 192.442 100.237 194.552 101.166 196.546 cv
102.095 198.541 103.2 200.418 104.356 202.139 cv
104.938 203.004 105.583 203.817 106.214 204.63 cv
106.887 205.389 107.532 206.184 108.253 206.865 cv
109.456 208.117 110.777 209.166 112.126 210.132 cv
111.999 200.537 112.649 191.239 114.114 181.75 cv
112.91 191.261 112.513 200.558 112.904 210.131 cv
114.156 209.142 115.385 208.107 116.55 206.98 cv
117.891 205.684 119.21 204.347 120.462 202.958 cv
121.714 201.572 122.956 200.159 124.149 198.726 cv
125.342 197.292 126.514 195.843 127.627 194.358 cv
126.566 195.886 125.443 197.384 124.297 198.87 cv
123.151 200.355 121.955 201.826 120.745 203.274 cv
119.533 204.726 118.25 206.133 116.939 207.509 cv
115.687 208.823 114.348 210.041 112.973 211.214 cv
113.276 216.099 113.879 221.068 114.753 225.883 cv
116.134 225.262 117.487 224.494 118.731 223.585 cv
120.17 222.534 121.569 221.325 122.874 220.06 cv
124.179 218.792 125.439 217.446 126.643 216.072 cv
127.846 214.698 129.016 213.293 130.107 211.838 cv
129.069 213.335 127.948 214.79 126.791 216.218 cv
125.633 217.646 124.416 219.054 123.146 220.392 cv
121.876 221.728 120.506 223.019 119.077 224.163 cv
117.798 225.187 116.386 226.077 114.919 226.812 cv
116.042 232.958 117.579 239.029 119.518 244.969 cv
120.616 244.085 121.692 243.16 122.717 242.168 cv
123.999 240.926 125.261 239.642 126.463 238.313 cv
127.664 236.984 128.854 235.629 130 234.253 cv
131.147 232.877 132.274 231.486 133.349 230.065 cv
132.327 231.529 131.251 232.968 130.154 234.396 cv
129.057 235.824 127.915 237.237 126.759 238.629 cv
125.603 240.022 124.383 241.377 123.138 242.698 cv
122.084 243.815 120.966 244.865 119.818 245.877 cv
122.105 252.845 125.054 259.605 128.413 266.117 cv
127.561 266.541 127.134 266.753 126.282 267.177 cv
123.05 260.473 120.241 253.526 118.113 246.389 cv
116.753 246.188 115.393 245.89 114.059 245.446 cv
112.451 244.911 110.849 244.249 109.293 243.436 cv
107.739 242.624 106.201 241.702 104.714 240.662 cv
103.227 239.622 101.771 238.477 100.382 237.195 cv
101.803 238.407 103.284 239.476 104.79 240.439 cv
106.295 241.402 107.844 242.245 109.399 242.976 cv
cp
.714504 .765866 0 0 cmyk
f
66.8613 256.813 mo
81.5469 254.017 92.145 265.045 92.8447 265.744 cv
93.4902 263.484 99.8921 242.665 120.658 235.295 cv
133.784 230.615 145.351 233.95 149.332 235.295 cv
146.695 228.194 148.094 220.286 152.935 214.637 cv
158.154 208.558 166.6 206.083 174.454 208.396 cv
183.331 194.678 199.631 187.577 215.662 190.429 cv
231.479 193.28 244.175 205.276 247.94 220.931 cv
252.729 213.776 261.336 210.172 269.459 211.947 cv
276.721 213.508 282.531 219.048 284.737 226.311 cv
294.636 215.982 309.645 212.108 323.255 216.466 cv
335.38 220.279 344.64 230.055 348.05 242.182 cv
357.792 234.486 370.905 231.578 383.098 235.416 cv
401.339 241.158 412.826 260.517 408.852 280.107 cv
388.874 280.107 368.895 280.107 348.917 280.107 cv
324.011 280.107 li
44.4282 280.107 li
46.6333 268.219 55.6719 258.912 66.8613 256.813 cv
cp
level3{
gsave
clp
[9.25798e-15 -151.194 151.194 9.25798e-15 227.033 353.01 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.25798e-15 -151.194 151.194 9.25798e-15 227.033 353.01 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
grestore
436.526 235.278 mo
436.526 235.278 461.583 208.962 454.162 202.277 cv
449.023 197.648 437.871 212.803 437.818 212.781 cv
437.818 212.781 445.338 183.556 431.824 184.49 cv
421.554 185.765 421.963 210.726 421.877 210.737 cv
421.877 210.737 415.348 196.291 408.847 200.4 cv
399.434 206.35 414.152 229.95 414.152 229.95 cv
414.152 229.95 403.664 216.831 398.11 223.589 cv
390.818 232.462 404.63 253.099 404.63 253.099 cv
404.63 253.099 384.694 244.343 386.81 258.234 cv
388.37 268.476 394.012 278.63 402.026 285.418 cv
412.584 290.823 442.791 281.047 441.527 268.027 cv
440.75 260.021 426.623 262.903 426.623 262.903 cv
436.653 259.091 458.031 248.319 454.975 235.394 cv
452.777 226.101 436.53 235.283 436.526 235.278 cv
cp
level3{
gsave
clp
[-18.0889 -95.5425 95.5425 -18.0889 430.989 283.602 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzz!<<*"!WW3#!rr<$"98E%"TSN&"TSN&"onW'#64`(#QOi)#ljr*$31&+$31&+$NL/,%0-A.%KHJ/%K
HJ/%fcS0&HDe2&ci"5&ci"5'*/+6'EJ47'`e=8('+F9(BFO:(]aX;)?Kp>)Zg$?*!--@*<H6A*Wc?B*s
)KD+9MZF+ThcG+p.lH,6IuI,Qe)J,m+2K-3F;L-j'MN.0BVO.KfeQ.KfeQ.g,nR/Hc+T/d)4U/d)4U0*
D=V0EhLX0a.UY1'I^Z1Bdg[1^*s]2$F'^2?a0_2['9`3!BBa3!BBa3X#Tc3s>]d49Yfe~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-18.0889 -95.5425 95.5425 -18.0889 430.989 283.602 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzz!!**$!<N<(!WrN,!sA`0"9\i1"9er4"U5/8"pYA<#7(S@#RLeD#mgnE#mq"H$4@4M$k*RS%1NaU%1
NdW%Ls![&.fEc&J5Te&J5Wg&eYik',)&o'GM8s'bqK"()@]&(Ddo*)&X>2)B'P6)]Kb:*#oq=*??.A*Z
c@E+!2RI+<VdM+X&!Q+sJ3U,9nEY,U=W],paia-7:/h-n$Jm.4H\p.4H\q.Olnu.kE5'/M/P+/M/P+/h
Sb/0/"t30JG170ekC;1,:U?1G^gC1c.$G2)R6K2E!HO2`EZS2`EZS3&ioY3]];_4$,Mc~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!$#!<E3%!<E3%!<E3%!<E3%!<E3%!<E3&!WiE)!WiE)!WiE)!W
iE)!WiE)!WiE)!WiE)!WiE)!WiE*!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-"9\i1"9\i1"9\i1"9
\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!"!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<
E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!WiE)!WiE)!WiE)!W
iE)!WiE)!WiE)!WiE)!WiE)!WiE)~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
421.15 274.815 mo
418.847 275.375 416.537 275.718 414.271 275.893 cv
412.518 276.028 410.782 275.991 409.084 275.844 cv
413.185 268.146 416.764 260.17 419.789 251.988 cv
422.141 251.785 424.522 251.432 426.848 250.818 cv
429.403 250.144 432.025 249.191 434.546 248 cv
437.066 246.809 439.548 245.342 441.932 243.627 cv
444.315 241.913 446.625 239.967 448.747 237.689 cv
446.574 239.877 444.231 241.718 441.827 243.324 cv
439.423 244.931 436.935 246.284 434.423 247.362 cv
431.91 248.44 429.312 249.276 426.795 249.843 cv
424.632 250.33 422.424 250.59 420.255 250.712 cv
422.583 244.389 424.582 237.795 426.157 231.243 cv
428.503 230.128 430.823 228.884 433.001 227.271 cv
434.164 226.493 435.25 225.541 436.361 224.645 cv
437.429 223.665 438.514 222.69 439.524 221.629 cv
441.529 219.521 443.495 217.192 445.244 214.668 cv
446.991 212.146 448.6 209.443 449.946 206.535 cv
448.524 209.383 446.85 212.007 445.048 214.441 cv
443.246 216.877 441.237 219.105 439.204 221.108 cv
438.181 222.115 437.085 223.034 436.01 223.958 cv
434.894 224.796 433.805 225.691 432.645 226.411 cv
430.675 227.769 428.604 228.82 426.518 229.752 cv
429.333 216.841 431.017 204.117 431.655 190.911 cv
430.659 204.075 428.634 216.728 425.469 229.536 cv
424.052 227.856 422.68 226.123 421.418 224.281 cv
419.966 222.162 418.555 219.995 417.247 217.777 cv
415.941 215.562 414.654 213.313 413.439 211.05 cv
412.224 208.787 411.043 206.509 409.949 204.2 cv
410.96 206.554 412.063 208.883 413.199 211.204 cv
414.336 213.524 415.546 215.837 416.779 218.125 cv
418.015 220.417 419.357 222.669 420.747 224.887 cv
422.075 227.005 423.545 229.016 425.077 230.978 cv
423.323 237.485 421.141 244.023 418.635 250.28 cv
416.943 249.061 415.329 247.651 413.901 246.083 cv
412.248 244.269 410.694 242.252 409.283 240.185 cv
407.871 238.116 406.541 235.952 405.296 233.767 cv
404.051 231.583 402.859 229.364 401.788 227.1 cv
402.776 229.407 403.889 231.677 405.057 233.923 cv
406.224 236.168 407.479 238.404 408.824 240.558 cv
410.169 242.71 411.662 244.83 413.275 246.768 cv
414.719 248.502 416.378 250.091 418.155 251.486 cv
414.947 259.471 411.2 267.237 406.948 274.718 cv
405.709 273.222 404.513 271.678 403.404 270.057 cv
402.017 268.029 400.667 265.948 399.412 263.823 cv
398.158 261.7 396.925 259.544 395.757 257.372 cv
394.589 255.199 393.452 253.012 392.393 250.799 cv
393.369 253.055 394.424 255.294 395.51 257.522 cv
396.597 259.751 397.749 261.973 398.924 264.169 cv
400.101 266.367 401.374 268.531 402.689 270.656 cv
403.803 272.454 405.023 274.178 406.293 275.86 cv
401.288 284.631 395.447 292.939 389.121 300.8 cv
390.154 301.606 390.671 302.01 391.705 302.816 cv
397.912 294.661 403.615 286.064 408.452 277.02 cv
410.342 277.123 412.26 277.097 414.182 276.865 cv
416.499 276.586 418.843 276.134 421.166 275.466 cv
423.485 274.799 425.815 273.979 428.108 272.985 cv
430.401 271.991 432.681 270.848 434.908 269.501 cv
432.657 270.744 430.364 271.778 428.067 272.663 cv
425.771 273.548 423.449 274.258 421.15 274.815 cv
cp
0 0 0 0 cmyk
f
89.6768 275.556 mo
90.0884 273.745 88.9004 272.034 88.7744 271.854 cv
90.3672 272.123 91.7236 271.229 92.124 269.762 cv
92.5356 268.253 91.8765 266.489 90.5151 265.445 cv
92.0728 264.829 93.0703 263.374 93.1465 261.712 cv
93.2422 259.614 91.8882 257.487 89.7578 256.544 cv
92.498 254.093 93.4077 250.214 92.2842 246.874 cv
90.854 242.621 86.6421 241.143 86.3862 241.053 cv
87.6572 238.645 87.2832 235.737 85.5259 233.831 cv
84.0044 232.18 81.6299 231.488 79.46 232.195 cv
81.1084 229.557 81.0361 226.242 79.3818 223.894 cv
77.417 221.105 74.0801 221.075 73.8584 221.079 cv
75.0283 217.408 74.4736 213.441 72.3433 210.508 cv
69.9189 207.171 66.3906 206.726 65.8354 206.677 cv
65.8701 206.279 66.1465 203.02 64.2002 200.495 cv
62.521 198.318 58.3457 196.956 56.2432 199.204 cv
54.8198 198.164 51.3926 197.592 49.2808 199.375 cv
47.4575 200.914 46.436 203.895 46.7148 207.004 cv
43.123 206.254 39.7173 209.317 39.062 214.247 cv
38.4556 218.808 40.4375 223.786 43.6538 225.893 cv
43.3159 226.069 40.5586 227.554 40.1577 231.954 cv
39.8398 235.451 41.2305 239.374 43.6387 241.821 cv
43.3667 242.115 40.9946 244.764 41.8208 249.667 cv
42.4771 253.559 44.9604 257.212 47.9824 258.838 cv
47.1294 262.124 48.0884 266.424 50.5034 269.733 cv
53.1489 273.358 57.0093 275.108 60.0103 274.268 cv
59.9282 277.419 62.2446 280.873 64.855 281.917 cv
67.001 282.775 68.9961 281.921 69.7388 279.879 cv
70.7344 282.379 73.0601 284.252 75.1069 284.357 cv
76.7959 284.444 78.0522 283.349 78.3848 281.635 cv
79.313 282.882 80.6611 283.677 81.8379 283.659 cv
83.3965 283.636 85.8599 281.442 85.6509 278.773 cv
87.4414 278.964 89.3267 277.095 89.6768 275.556 cv
cp
level3{
gsave
clp
[29.9477 -68.9124 68.9124 29.9477 50.7352 275.784 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[29.9477 -68.9124 68.9124 29.9477 50.7352 275.784 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
82.5786 258.368 mo
81.7852 260.01 80.9536 261.673 80.0415 263.258 cv
79.6152 264.072 79.1235 264.85 78.668 265.63 cv
78.3784 266.126 78.0557 266.615 77.7451 267.104 cv
74.2778 262.088 72.7021 259.47 69.8945 254.066 cv
70.3374 253.461 70.8027 252.86 71.2236 252.253 cv
71.7476 251.496 72.3032 250.723 72.8096 249.955 cv
73.8159 248.43 74.8618 246.821 75.813 245.24 cv
76.7676 243.654 77.687 242.01 78.5435 240.363 cv
79.3999 238.716 80.228 237.049 80.9048 235.324 cv
80.1704 237.019 79.2871 238.645 78.377 240.246 cv
77.4663 241.847 76.4927 243.439 75.4873 244.967 cv
74.4834 246.492 73.3853 248.033 72.3286 249.492 cv
71.7979 250.225 71.2148 250.962 70.6665 251.681 cv
70.2793 252.189 69.853 252.69 69.4448 253.193 cv
66.9189 248.236 65.7959 245.68 63.8486 240.456 cv
64.6924 239.271 65.5283 238.069 66.3223 236.857 cv
67.1719 235.56 68.0054 234.207 68.8081 232.865 cv
69.6113 231.522 70.3774 230.145 71.1143 228.767 cv
71.8511 227.39 72.5669 225.996 73.2007 224.565 cv
72.5107 225.959 71.7412 227.31 70.9517 228.641 cv
70.1626 229.971 69.3442 231.296 68.4907 232.582 cv
67.6372 233.866 66.7539 235.155 65.8569 236.386 cv
65.0938 237.432 64.2959 238.467 63.4902 239.481 cv
61.1362 232.995 60.1816 229.653 58.7598 222.849 cv
60.4121 220.949 61.9741 218.943 63.4399 216.856 cv
64.9351 214.726 67.6582 210.265 67.6582 210.265 cv
67.6582 210.265 64.8354 214.63 63.2949 216.699 cv
61.8311 218.666 60.2778 220.542 58.6489 222.312 cv
57.1743 215.093 56.7012 211.399 56.332 203.938 cv
56.4575 208.656 56.6348 211.004 57.2085 215.654 cv
55.2539 215.25 53.312 214.592 51.4126 213.73 cv
49.4497 212.841 45.6567 210.467 45.6567 210.467 cv
45.6563 210.468 49.4063 212.999 51.3604 213.968 cv
53.2837 214.922 55.2603 215.67 57.2705 216.149 cv
58.1782 223.269 58.8945 226.788 60.8169 233.658 cv
59.6309 233.553 58.4375 233.4 57.2451 233.159 cv
55.8906 232.885 54.5244 232.547 53.1699 232.121 cv
50.4639 231.27 47.7544 230.159 45.1099 228.709 cv
47.7212 230.321 50.4165 231.596 53.126 232.606 cv
54.4829 233.111 55.856 233.528 57.2251 233.878 cv
58.5068 234.206 59.7974 234.434 61.0864 234.606 cv
62.7207 240.271 63.7095 243.056 66.0093 248.479 cv
62.9814 249.054 59.79 249.131 56.5742 248.822 cv
53.1416 248.492 49.6406 247.774 46.1489 246.598 cv
49.6372 247.946 53.1548 248.832 56.6245 249.318 cv
59.9214 249.779 63.2124 249.838 66.3838 249.353 cv
68.771 254.863 70.1362 257.553 73.1875 262.745 cv
71.8423 263.102 70.4663 263.407 69.0693 263.604 cv
67.3989 263.84 65.6704 264 63.9277 264.031 cv
60.4453 264.095 56.8467 263.79 53.1978 262.948 cv
56.8618 263.96 60.499 264.43 64.0371 264.518 cv
65.8081 264.561 67.5703 264.475 69.2793 264.305 cv
70.7651 264.157 72.2329 263.89 73.6733 263.564 cv
79.9004 273.783 87.3613 282.501 95.8687 290.849 cv
96.4702 290.177 96.771 289.841 97.3726 289.168 cv
90.3452 282.576 83.8599 275.808 78.2993 267.899 cv
78.6333 267.312 78.9829 266.724 79.2939 266.131 cv
79.7207 265.315 80.1821 264.504 80.5791 263.658 cv
81.4326 262.01 82.2041 260.287 82.9385 258.596 cv
83.6748 256.898 84.3564 255.143 84.9795 253.395 cv
85.6025 251.647 86.1895 249.882 86.6245 248.083 cv
86.1279 249.86 85.481 251.593 84.7983 253.302 cv
84.1157 255.011 83.374 256.723 82.5786 258.368 cv
cp
0 0 0 0 cmyk
f
327.762 278.299 mo
329.416 275.631 331.182 273.095 332.739 270.29 cv
333.813 268.356 334.778 266.317 335.636 264.156 cv
335.09 258.795 333.691 253.032 331.694 248.029 cv
331.544 248.385 331.379 248.734 331.207 249.062 cv
328.297 254.605 324.722 260.21 322.043 265.82 cv
321.691 266.558 321.372 267.364 321.055 268.171 cv
321.832 263.849 322.867 259.656 324.19 255.685 cv
325.628 251.367 327.421 247.308 328.25 242.561 cv
328.344 242.028 328.422 241.474 328.469 240.929 cv
324.857 234.384 320.021 228.543 313.417 224.896 cv
313.504 228.599 313.766 232.382 313.949 236.073 cv
314.101 239.133 314.199 242.218 314.451 245.277 cv
312.499 238.193 311.326 230.915 310.605 223.608 cv
307.33 222.372 304.312 222.041 301.718 222.146 cv
301.949 225.044 302.271 227.972 302.66 230.872 cv
301.571 228.064 300.508 225.226 299.505 222.361 cv
294.877 223.019 292.037 224.847 292.037 224.847 cv
291.166 225.3 289.15 226.74 286.812 228.987 cv
288.8 231.829 290.426 234.983 291.733 238.25 cv
289.535 235.635 287.088 233.348 284.467 231.437 cv
282.843 233.259 281.179 235.402 279.691 237.82 cv
284.417 241.412 287.513 245.972 290.543 250.961 cv
288.961 249.227 287.248 247.644 285.452 246.26 cv
282.996 244.367 280.384 242.808 277.732 241.374 cv
275.379 245.845 274.034 252.09 274.554 257.117 cv
275.342 257.596 276.162 258.063 276.958 258.511 cv
281 260.789 285.245 263.079 288.526 266.78 cv
289.976 268.415 291.219 270.303 292.358 272.251 cv
292.419 272.365 292.478 272.464 292.549 272.561 cv
289.1 269.109 284.183 265.966 279.693 264.194 cv
278.319 263.652 276.897 263.153 275.461 262.809 cv
276.431 267.337 277.429 271.561 278.471 275.55 cv
279.027 275.803 279.583 276.05 280.149 276.305 cv
286.123 278.994 291.797 282.945 295.417 288.414 cv
295.552 288.617 295.698 288.844 295.831 289.053 cv
292.433 285.917 288.983 282.926 284.975 281.222 cv
283.237 280.483 281.427 279.988 279.594 279.635 cv
281.377 285.611 283.291 291.471 285.382 297.347 cv
285.714 297.56 286.062 297.774 286.392 297.977 cv
289.824 300.077 293.438 302.135 296.134 305.477 cv
297.792 307.529 299.018 310.006 299.94 312.677 cv
299.766 312.547 299.579 312.415 299.405 312.288 cv
296.138 309.904 292.58 308.011 288.908 306.558 cv
294.096 319.65 300.067 352.981 300.067 352.981 cv
300.075 352.984 318.87 324.828 326.663 310.167 cv
325.159 311.133 323.682 312.139 322.208 313.141 cv
320.317 314.426 318.391 315.697 316.471 316.94 cv
316.833 316.465 317.214 315.986 317.6 315.544 cv
318.561 314.443 319.6 313.432 320.561 312.32 cv
321.644 311.067 322.634 309.653 323.648 308.275 cv
326.092 304.952 328.676 301.813 331.385 298.965 cv
334.494 289.941 335.836 280.974 336.094 271.478 cv
335.924 271.784 335.75 272.072 335.578 272.377 cv
334.466 274.341 333.322 276.311 332.012 277.98 cv
330.75 279.588 329.318 280.938 327.919 282.269 cv
326.152 283.949 324.367 285.674 322.684 287.504 cv
324.258 284.321 325.95 281.222 327.762 278.299 cv
cp
level3{
gsave
clp
[28.2833 124.398 -124.398 28.2833 296.543 222.954 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~_S-!M_S#pL_RojK_n,mK_R]^I_R]^I_RTXH_RKRG_R9FE_R0@D_6a1B_6X+A_6Et?_6<n>_6*b<_5mV:
_5[J8_5I>6^nq)3^SCi0^7kT-^7PB*^7>6(]p\p$]pA^!]T`Br]9*'n\r?[i\VU:d[tOe^[X\>X[!ViR
Z$-0JY]9^DX_n+=X(_P6Wac#/W*TH(VHEm!Uf7<oUJCjiU.G=bTL8b[T0<5TSiHcNShg?HSLsmBRjS19
Riqb3R2c2,R2,c&R1TE!R0iooR0<QjR/d3eR/d3eQiI*dQ2h!ePQ1gdOT5RcO8oReNrTRgMuX=fM#\(e
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[28.2833 124.398 -124.398 28.2833 296.543 222.954 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Ll%"IMi<XUNfT6^O-#HbOHG]iPE_;sQ'R`&Q^F/-R$a8.R$a8.R$a8.R$a8.R$a8.R$a8.R$jA2R[T\6
R[T_8S=H.@SXl=BSXl@DSt;RHT:_dLTqS3TU8"EXUSFW\V5:&dVl-JlWMuntWiE,#XK8P+Y-5(6YctC;
ZEpmE['d<M[^NWR\%&rY\[f8^]"5Jb]=Y\f]Y(ni]Y(nj]tM+m]tM+m]tM+n^:q=r^V@P!^qdb$^qdb$
^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$_83t(_83t(_83t(_83t(_83t(_83t(_SX1,_SX1,_83t(_83t(
~>
<~zzzzzzzzz!!!$$"9eu7#mq(M%hTEf'G_K&)B9b=+!DgR,pk#i/1iM/0etRC2`NfZ4?Yno6:4.17n?3E9
MSA[;H$Op='/U/>?tQB?t*VVAnPgmCM[m,E,fo>FEMePH$XgbI=?ZsJqJ`1L51SAMMmFQNfT9aP*2#nQ
'IZ%R$a;1S"#q=SXuFFT:hmPU8+KZUnsobVPg>jW2ZbrWiE,#XK8P+Y-+t3Yct@9Z*CU?Za7!E['[3I[
C*EM[^NZS\@B&Y\[f8]\[f8]]"5Ja]=Y\e]Y(ni]tM+m~>
<~%hB0\%LijU$k!CK#m^b?"pG/5"9S`.!s/K(zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzz!!!!!~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
310.507 309.627 mo
310.794 304.867 310.848 302.482 310.778 297.719 cv
312.347 294.635 313.986 291.558 315.659 288.526 cv
317.423 285.331 319.244 282.09 321.035 278.861 cv
322.821 275.64 324.617 272.368 326.376 269.082 cv
328.135 265.798 329.864 262.466 331.6 259.151 cv
329.77 262.353 327.95 265.58 326.103 268.766 cv
324.254 271.952 322.371 275.131 320.498 278.269 cv
318.621 281.412 316.712 284.577 314.856 287.712 cv
313.454 290.081 312.068 292.494 310.713 294.921 cv
310.531 289.297 310.316 286.485 309.638 280.894 cv
311.318 277.935 312.87 274.818 314.192 271.544 cv
315.538 268.209 316.702 264.653 317.641 260.991 cv
318.58 257.33 319.28 253.503 319.737 249.578 cv
320.193 245.651 320.416 241.602 320.279 237.452 cv
320.298 241.567 319.961 245.558 319.397 249.417 cv
318.833 253.272 318.03 257.017 316.999 260.585 cv
315.967 264.154 314.72 267.604 313.301 270.827 cv
312.117 273.519 310.774 276.096 309.334 278.543 cv
308.752 274.276 308.388 272.149 307.516 267.923 cv
307.696 267.994 li
308.183 264.837 308.542 261.616 308.715 258.351 cv
308.888 255.089 308.963 251.706 308.77 248.402 cv
308.363 241.485 307.345 234.877 305.939 227.983 cv
307.11 234.853 307.907 241.422 308.083 248.282 cv
308.166 251.545 307.98 254.873 307.703 258.069 cv
307.504 260.355 307.208 262.613 306.845 264.831 cv
304.432 255.135 301.404 245.919 297.605 236.685 cv
301.18 246.069 303.975 255.41 306.131 265.226 cv
303.059 260.881 300.029 256.472 296.888 252.21 cv
293.291 247.33 289.53 242.566 285.663 237.856 cv
289.368 242.728 292.952 247.646 296.389 252.683 cv
298.114 255.21 299.781 257.826 301.465 260.427 cv
303.15 263.028 304.813 265.662 306.558 268.262 cv
306.678 268.131 li
307.35 271.892 307.628 273.779 308.07 277.56 cv
306.591 275.094 304.996 272.74 303.285 270.557 cv
300.992 267.631 298.537 264.892 295.951 262.43 cv
293.363 259.965 290.656 257.697 287.855 255.682 cv
285.057 253.667 282.166 251.866 279.201 250.344 cv
282.122 251.976 284.956 253.881 287.688 255.995 cv
290.42 258.11 293.048 260.471 295.546 263.019 cv
298.042 265.563 300.393 268.374 302.57 271.353 cv
304.742 274.324 306.684 277.575 308.431 280.966 cv
308.952 286.461 309.091 289.218 309.13 294.72 cv
307.756 292.311 306.213 290.062 304.557 288.022 cv
302.319 285.269 299.824 282.773 297.249 280.566 cv
294.677 278.362 291.951 276.396 289.168 274.665 cv
286.386 272.935 283.523 271.412 280.594 270.156 cv
283.481 271.52 286.292 273.151 289.01 274.985 cv
291.729 276.821 294.379 278.89 296.861 281.185 cv
299.347 283.482 301.734 286.058 303.849 288.861 cv
305.854 291.522 307.649 294.487 309.124 297.668 cv
309.074 301.956 308.976 304.099 308.635 308.369 cv
307.592 306.615 306.446 304.964 305.2 303.481 cv
303.402 301.346 301.423 299.407 299.349 297.718 cv
297.275 296.028 295.1 294.525 292.863 293.215 cv
290.628 291.903 288.324 290.753 285.963 289.82 cv
288.285 290.864 290.535 292.127 292.706 293.546 cv
294.879 294.965 296.977 296.573 298.959 298.356 cv
300.942 300.14 302.812 302.161 304.483 304.351 cv
305.983 306.314 307.296 308.519 308.417 310.854 cv
305.477 336.006 297.612 358.786 284.421 380.407 cv
285.773 381.248 286.45 381.668 287.802 382.509 cv
300.59 360.285 308.011 337.032 310.383 311.505 cv
314.23 308.962 317.801 305.738 321.089 302.105 cv
324.636 298.188 327.999 293.562 330.581 288.928 cv
327.845 293.348 324.338 297.725 320.686 301.396 cv
317.501 304.596 314.089 307.413 310.507 309.627 cv
cp
.766384 .709743 0 0 cmyk
f
60.8115 279.976 mo
59.644 278.092 58.3965 276.302 57.2974 274.321 cv
56.5391 272.956 55.8574 271.517 55.252 269.99 cv
55.6372 266.205 56.6245 262.136 58.0352 258.604 cv
58.1406 258.854 58.2573 259.101 58.3789 259.332 cv
60.4336 263.247 62.9585 267.203 64.8491 271.165 cv
65.0977 271.686 65.3232 272.255 65.5469 272.824 cv
64.999 269.772 64.2676 266.813 63.3335 264.009 cv
62.3179 260.96 61.0518 258.094 60.4663 254.742 cv
60.4004 254.365 60.3452 253.975 60.312 253.59 cv
62.8628 248.969 66.2769 244.845 70.9399 242.27 cv
70.8789 244.884 70.6938 247.555 70.5645 250.162 cv
70.457 252.322 70.3877 254.5 70.21 256.66 cv
71.5884 251.658 72.4165 246.519 72.9258 241.36 cv
75.2378 240.487 77.3696 240.253 79.2007 240.328 cv
79.0376 242.374 78.8105 244.441 78.5352 246.489 cv
79.3042 244.507 80.0547 242.502 80.7632 240.479 cv
84.0303 240.944 86.0366 242.234 86.0366 242.234 cv
86.6514 242.555 88.0742 243.571 89.7251 245.158 cv
88.3218 247.165 87.1733 249.392 86.2505 251.698 cv
87.8022 249.852 89.5303 248.237 91.3809 246.887 cv
92.5278 248.174 93.7026 249.688 94.7529 251.395 cv
91.4165 253.931 89.2305 257.15 87.0903 260.674 cv
88.2075 259.449 89.4175 258.331 90.6855 257.354 cv
92.4194 256.018 94.2637 254.917 96.1362 253.904 cv
97.7979 257.062 98.7471 261.471 98.3804 265.021 cv
97.8237 265.358 97.2446 265.688 96.6831 266.004 cv
93.8286 267.613 90.8315 269.229 88.5151 271.843 cv
87.4917 272.997 86.6133 274.33 85.8096 275.706 cv
85.6748 275.924 li
88.1094 273.487 91.5815 271.268 94.7515 270.018 cv
95.7222 269.635 96.7261 269.282 97.7397 269.039 cv
97.0552 272.236 96.3506 275.218 95.6152 278.035 cv
95.2217 278.214 94.8301 278.388 94.4297 278.568 cv
90.2124 280.467 86.2051 283.257 83.6489 287.118 cv
83.5542 287.261 83.4507 287.422 83.3574 287.569 cv
85.7563 285.354 88.1919 283.243 91.0225 282.04 cv
92.249 281.519 93.5273 281.169 94.8218 280.919 cv
93.563 285.14 92.2114 289.276 90.7354 293.426 cv
90.5005 293.576 90.2554 293.727 90.022 293.87 cv
87.5986 295.354 85.0469 296.807 83.1431 299.165 cv
81.9731 300.615 81.1069 302.364 80.4561 304.249 cv
80.5786 304.158 80.7109 304.064 80.834 303.975 cv
83.1406 302.292 85.6528 300.955 88.2451 299.929 cv
84.582 309.173 80.3662 332.708 80.3662 332.708 cv
80.3604 332.71 67.0898 312.829 61.5874 302.478 cv
62.6494 303.159 63.6924 303.87 64.7334 304.577 cv
66.0684 305.484 67.4282 306.382 68.7837 307.26 cv
68.5283 306.924 68.2593 306.586 67.9863 306.273 cv
67.3081 305.497 66.5747 304.782 65.896 303.998 cv
65.1309 303.113 64.4321 302.114 63.7163 301.142 cv
61.9907 298.796 60.166 296.579 58.2529 294.567 cv
56.0581 288.196 55.1108 281.864 54.9282 275.159 cv
55.0488 275.376 55.1714 275.58 55.293 275.795 cv
56.0776 277.182 56.8853 278.572 57.8105 279.751 cv
58.7017 280.886 59.7124 281.839 60.7002 282.778 cv
61.9482 283.966 63.2085 285.184 64.397 286.476 cv
63.2856 284.229 62.0908 282.039 60.8115 279.976 cv
cp
level3{
gsave
clp
[-19.9702 87.8346 87.8346 19.9702 82.8545 240.898 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-19.9702 87.8346 87.8346 19.9702 82.8545 240.898 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
72.9946 302.097 mo
72.792 298.735 72.7539 297.052 72.8032 293.688 cv
71.6953 291.511 70.5386 289.338 69.3569 287.197 cv
68.1118 284.94 66.8257 282.652 65.5615 280.373 cv
64.2998 278.099 63.0322 275.789 61.7896 273.469 cv
60.5479 271.149 59.3276 268.797 58.1021 266.456 cv
59.394 268.717 60.6787 270.995 61.9834 273.244 cv
63.2886 275.495 64.6177 277.739 65.9404 279.954 cv
67.2656 282.174 68.6138 284.409 69.9238 286.622 cv
70.9141 288.295 71.8926 289.999 72.8496 291.713 cv
72.9775 287.741 73.1294 285.756 73.6084 281.809 cv
72.4224 279.719 71.3267 277.519 70.3931 275.206 cv
69.4424 272.852 68.6206 270.342 67.9575 267.756 cv
67.2949 265.17 66.8003 262.469 66.478 259.697 cv
66.1553 256.924 65.999 254.065 66.0947 251.135 cv
66.082 254.04 66.3193 256.858 66.7178 259.583 cv
67.1162 262.306 67.6826 264.949 68.4106 267.469 cv
69.1392 269.988 70.02 272.425 71.0215 274.701 cv
71.8579 276.601 72.8062 278.42 73.8223 280.148 cv
74.2339 277.136 74.4907 275.634 75.1069 272.649 cv
74.979 272.7 li
74.6357 270.471 74.3818 268.197 74.2598 265.891 cv
74.1377 263.588 74.0845 261.199 74.2217 258.866 cv
74.5083 253.982 75.2275 249.317 76.2202 244.449 cv
75.3931 249.299 74.8306 253.938 74.7065 258.781 cv
74.6479 261.086 74.7793 263.436 74.9746 265.692 cv
75.1147 267.307 75.3237 268.9 75.5801 270.467 cv
77.2847 263.62 79.4224 257.113 82.1045 250.593 cv
79.5801 257.22 77.6069 263.814 76.0845 270.745 cv
78.2534 267.678 80.3931 264.564 82.6108 261.556 cv
85.1509 258.109 87.8062 254.746 90.5366 251.42 cv
87.9204 254.86 85.3901 258.333 82.9629 261.889 cv
81.7451 263.674 80.5684 265.521 79.3789 267.357 cv
78.1895 269.194 77.0146 271.054 75.7837 272.89 cv
75.6982 272.797 li
75.2236 275.452 75.0273 276.785 74.7153 279.454 cv
75.7598 277.713 76.8862 276.051 78.0942 274.51 cv
79.7129 272.443 81.4468 270.51 83.2725 268.771 cv
85.0996 267.031 87.0112 265.43 88.9883 264.007 cv
90.9648 262.584 93.0059 261.313 95.0996 260.238 cv
93.0366 261.39 91.0361 262.734 89.1074 264.228 cv
87.1777 265.721 85.3218 267.388 83.5586 269.187 cv
81.7964 270.983 80.1362 272.969 78.5986 275.071 cv
77.0649 277.169 75.6943 279.465 74.4609 281.859 cv
74.0928 285.739 73.9946 287.686 73.9668 291.57 cv
74.937 289.869 76.0264 288.281 77.1963 286.842 cv
78.7759 284.897 80.5376 283.136 82.356 281.577 cv
84.1724 280.021 86.0972 278.632 88.062 277.41 cv
90.0259 276.188 92.0479 275.113 94.1157 274.227 cv
92.0767 275.189 90.0928 276.341 88.1733 277.637 cv
86.2534 278.933 84.3823 280.394 82.6299 282.014 cv
80.875 283.636 79.189 285.454 77.6963 287.435 cv
76.2798 289.313 75.0127 291.406 73.9717 293.652 cv
74.0068 296.68 74.0757 298.192 74.3169 301.208 cv
75.0532 299.97 75.8623 298.803 76.7422 297.757 cv
78.0112 296.249 79.4087 294.88 80.8735 293.687 cv
82.3374 292.494 83.8735 291.434 85.4526 290.508 cv
87.0308 289.582 88.6572 288.77 90.3247 288.111 cv
88.6855 288.849 87.0967 289.739 85.5635 290.741 cv
84.0298 291.743 82.5479 292.879 81.1484 294.138 cv
79.748 295.397 78.4282 296.824 77.248 298.37 cv
76.1895 299.757 75.2617 301.313 74.4707 302.963 cv
76.5464 320.722 82.0996 336.807 91.4131 352.072 cv
90.4585 352.666 89.981 352.963 89.0264 353.557 cv
79.9971 337.864 74.7573 321.446 73.082 303.422 cv
70.3657 301.626 67.8447 299.351 65.5229 296.785 cv
63.0186 294.019 60.6445 290.753 58.8208 287.48 cv
60.7529 290.602 63.229 293.692 65.8081 296.284 cv
68.0566 298.544 70.4653 300.532 72.9946 302.097 cv
cp
.766384 .709743 0 0 cmyk
f
370.623 301.808 mo
372.366 300.379 374.155 299.066 375.864 297.522 cv
377.042 296.458 378.171 295.298 379.256 294.028 cv
380.13 290.26 380.519 286.02 380.323 282.157 cv
380.139 282.364 379.946 282.563 379.752 282.745 cv
376.488 285.836 372.758 288.813 369.635 292.002 cv
369.225 292.422 368.821 292.896 368.418 293.369 cv
369.949 290.613 371.627 288.006 373.448 285.615 cv
375.427 283.016 377.588 280.675 379.254 277.642 cv
379.441 277.302 379.623 276.943 379.781 276.585 cv
378.847 271.3 376.918 266.208 373.279 262.197 cv
372.478 264.732 371.777 267.363 371.044 269.914 cv
370.437 272.027 369.788 274.146 369.248 276.283 cv
369.567 271.018 370.46 265.8 371.667 260.669 cv
369.729 259.069 367.755 258.143 365.969 257.612 cv
365.453 259.635 364.992 261.698 364.583 263.759 cv
364.495 261.599 364.433 259.424 364.416 257.244 cv
361.12 256.616 358.765 257.198 358.765 257.198 cv
358.068 257.305 356.365 257.814 354.254 258.798 cv
354.945 261.19 355.317 263.711 355.447 266.233 cv
354.561 263.947 353.429 261.825 352.093 259.918 cv
350.565 260.778 348.938 261.849 347.365 263.146 cv
349.742 266.683 350.786 270.499 351.687 274.593 cv
351.015 273.048 350.218 271.574 349.319 270.217 cv
348.09 268.36 346.678 266.695 345.209 265.104 cv
342.572 267.596 340.208 271.526 339.394 275.063 cv
339.819 275.57 340.268 276.077 340.704 276.566 cv
342.921 279.054 345.273 281.595 346.643 284.871 cv
347.248 286.318 347.654 287.89 347.975 289.478 cv
347.99 289.569 348.007 289.65 348.033 289.732 cv
346.492 286.587 343.881 283.31 341.242 281.063 cv
340.435 280.376 339.584 279.707 338.689 279.14 cv
338.296 282.44 337.993 285.542 337.775 288.494 cv
338.094 288.795 338.414 289.092 338.74 289.396 cv
342.173 292.61 345.111 296.613 346.3 301.169 cv
346.345 301.338 346.391 301.526 346.433 301.698 cv
344.853 298.779 343.204 295.946 340.876 293.857 cv
339.868 292.952 338.753 292.195 337.589 291.529 cv
337.413 296.004 337.352 300.43 337.408 304.906 cv
337.584 305.129 337.771 305.354 337.948 305.568 cv
339.792 307.793 341.77 310.03 342.825 312.927 cv
343.474 314.706 343.732 316.674 343.739 318.701 cv
343.65 318.573 343.554 318.44 343.465 318.313 cv
341.799 315.936 339.822 313.822 337.665 311.982 cv
338.149 322.082 334.465 346.112 334.465 346.112 cv
334.47 346.117 353.777 331.353 362.476 323.202 cv
361.23 323.51 359.992 323.85 358.758 324.188 cv
357.176 324.622 355.572 325.038 353.979 325.438 cv
354.335 325.198 354.705 324.961 355.07 324.75 cv
355.979 324.227 356.919 323.78 357.83 323.248 cv
358.857 322.648 359.858 321.918 360.867 321.217 cv
363.299 319.527 365.783 317.994 368.286 316.688 cv
372.493 311.28 375.487 305.5 377.867 299.108 cv
377.68 299.277 377.496 299.433 377.308 299.6 cv
376.097 300.676 374.862 301.748 373.584 302.578 cv
372.354 303.377 371.067 303.962 369.808 304.541 cv
368.217 305.272 366.604 306.029 365.035 306.882 cv
366.844 305.085 368.713 303.372 370.623 301.808 cv
cp
level3{
gsave
clp
[-9.68131 91.0794 -91.0794 -9.68131 362.268 256.959 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-9.68131 91.0794 -91.0794 -9.68131 362.268 256.959 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
351.626 319.084 mo
352.926 315.917 353.517 314.31 354.575 311.057 cv
356.357 309.326 358.185 307.616 360.026 305.945 cv
361.966 304.184 363.956 302.405 365.922 300.628 cv
367.884 298.854 369.863 297.049 371.822 295.225 cv
373.779 293.402 375.727 291.539 377.676 289.69 cv
375.689 291.44 373.704 293.211 371.709 294.945 cv
369.713 296.682 367.696 298.403 365.695 300.1 cv
363.69 301.8 361.658 303.507 359.669 305.205 cv
358.167 306.489 356.665 307.808 355.18 309.141 cv
356.363 305.277 356.87 303.318 357.708 299.362 cv
359.536 297.741 361.313 295.985 362.972 294.067 cv
364.662 292.114 366.278 289.97 367.766 287.699 cv
369.254 285.43 370.619 282.993 371.84 280.433 cv
373.063 277.87 374.153 275.172 375.025 272.32 cv
374.082 275.12 372.926 277.754 371.647 280.244 cv
370.368 282.732 368.954 285.09 367.424 287.274 cv
365.895 289.46 364.246 291.514 362.534 293.374 cv
361.104 294.928 359.594 296.366 358.047 297.694 cv
358.643 294.66 358.889 293.131 359.278 290.058 cv
359.384 290.147 li
360.447 288.116 361.44 286.011 362.316 283.833 cv
363.19 281.657 364.027 279.376 364.663 277.087 cv
365.993 272.293 366.836 267.567 367.481 262.558 cv
366.682 267.496 365.697 272.145 364.224 276.846 cv
363.522 279.082 362.624 281.299 361.693 283.406 cv
361.027 284.913 360.302 286.379 359.541 287.801 cv
360.152 280.653 360.235 273.689 359.799 266.533 cv
360.049 273.739 359.778 280.734 358.963 287.903 cv
357.885 284.238 356.851 280.539 355.707 276.915 cv
354.396 272.764 352.947 268.654 351.414 264.557 cv
352.8 268.727 354.092 272.9 355.258 277.12 cv
355.843 279.237 356.368 281.401 356.908 283.56 cv
357.448 285.719 357.967 287.894 358.548 290.065 cv
358.66 290.004 li
358.244 292.715 357.994 294.062 357.417 296.732 cv
356.984 294.714 356.447 292.745 355.792 290.864 cv
354.914 288.344 353.882 285.913 352.697 283.64 cv
351.511 281.364 350.198 279.195 348.764 277.176 cv
347.331 275.157 345.785 273.263 344.124 271.54 cv
345.73 273.326 347.212 275.278 348.577 277.35 cv
349.942 279.421 351.18 281.635 352.285 283.945 cv
353.389 286.254 354.334 288.71 355.122 291.239 cv
355.907 293.762 356.471 296.422 356.871 299.131 cv
355.948 302.984 355.403 304.89 354.152 308.637 cv
353.778 306.681 353.252 304.795 352.6 303.024 cv
351.72 300.635 350.604 298.36 349.367 296.263 cv
348.131 294.168 346.736 292.198 345.248 290.377 cv
343.76 288.556 342.168 286.855 340.47 285.322 cv
342.115 286.92 343.645 288.681 345.065 290.558 cv
346.487 292.437 347.806 294.457 348.96 296.593 cv
350.115 298.73 351.139 301.035 351.924 303.431 cv
352.669 305.704 353.2 308.135 353.463 310.638 cv
352.433 313.54 351.869 314.973 350.646 317.795 cv
350.345 316.36 349.95 314.973 349.447 313.677 cv
348.722 311.809 347.828 310.031 346.811 308.401 cv
345.794 306.772 344.666 305.247 343.45 303.837 cv
342.236 302.427 340.938 301.11 339.551 299.929 cv
340.885 301.177 342.121 302.557 343.267 304.025 cv
344.413 305.494 345.465 307.074 346.398 308.745 cv
347.331 310.418 348.132 312.225 348.759 314.101 cv
349.321 315.782 349.702 317.585 349.92 319.433 cv
342.083 335.836 331.45 349.486 317.468 361.111 cv
318.191 361.996 318.553 362.439 319.276 363.324 cv
333.125 351.195 343.566 337.122 351.105 320.331 cv
354.31 319.496 357.484 318.136 360.562 316.432 cv
363.88 314.594 367.239 312.231 370.07 309.684 cv
367.185 312.051 363.786 314.21 360.452 315.855 cv
357.545 317.29 354.573 318.411 351.626 319.084 cv
cp
.766384 .709743 0 0 cmyk
f
119.802 303.794 mo
118.059 302.365 116.27 301.053 114.561 299.509 cv
113.382 298.444 112.253 297.283 111.168 296.015 cv
110.294 292.245 109.906 288.006 110.102 284.143 cv
110.286 284.35 110.479 284.549 110.672 284.731 cv
113.937 287.822 117.667 290.799 120.789 293.988 cv
121.2 294.407 121.604 294.881 122.006 295.355 cv
120.476 292.6 118.798 289.992 116.977 287.602 cv
114.998 285.002 112.836 282.66 111.171 279.628 cv
110.984 279.288 110.802 278.93 110.644 278.57 cv
111.578 273.285 113.507 268.194 117.146 264.184 cv
117.947 266.719 118.648 269.35 119.38 271.9 cv
119.988 274.014 120.637 276.132 121.177 278.27 cv
120.858 273.003 119.965 267.786 118.758 262.655 cv
120.695 261.055 122.669 260.129 124.456 259.599 cv
124.972 261.62 125.433 263.685 125.842 265.745 cv
125.93 263.585 125.992 261.409 126.009 259.23 cv
129.305 258.603 131.66 259.185 131.66 259.185 cv
132.356 259.291 134.06 259.801 136.17 260.784 cv
135.48 263.177 135.108 265.697 134.978 268.22 cv
135.864 265.933 136.996 263.812 138.332 261.903 cv
139.859 262.765 141.487 263.834 143.059 265.132 cv
140.683 268.669 139.639 272.485 138.738 276.579 cv
139.41 275.033 140.207 273.56 141.105 272.203 cv
142.334 270.347 143.747 268.681 145.215 267.091 cv
147.853 269.582 150.216 273.512 151.031 277.048 cv
150.606 277.557 150.157 278.063 149.721 278.553 cv
147.504 281.04 145.152 283.581 143.782 286.857 cv
143.177 288.305 142.771 289.876 142.45 291.464 cv
142.435 291.556 142.418 291.636 142.392 291.719 cv
143.933 288.572 146.544 285.296 149.183 283.05 cv
149.99 282.362 150.84 281.692 151.736 281.125 cv
152.129 284.427 152.432 287.527 152.65 290.48 cv
152.331 290.781 152.011 291.078 151.685 291.383 cv
148.251 294.597 145.313 298.599 144.124 303.154 cv
144.08 303.323 144.034 303.512 143.992 303.685 cv
145.572 300.766 147.221 297.933 149.548 295.844 cv
150.557 294.938 151.672 294.182 152.835 293.516 cv
153.012 297.99 153.073 302.415 153.017 306.893 cv
152.84 307.115 152.654 307.341 152.477 307.555 cv
150.633 309.779 148.655 312.017 147.6 314.912 cv
146.951 316.692 146.692 318.66 146.686 320.688 cv
146.774 320.56 146.871 320.426 146.959 320.3 cv
148.625 317.922 150.603 315.809 152.759 313.969 cv
152.276 324.068 155.959 348.099 155.959 348.099 cv
155.955 348.103 136.647 333.339 127.949 325.188 cv
129.195 325.496 130.433 325.836 131.667 326.174 cv
133.249 326.607 134.853 327.024 136.446 327.424 cv
136.089 327.184 135.72 326.947 135.354 326.736 cv
134.446 326.212 133.506 325.767 132.595 325.234 cv
131.568 324.635 130.566 323.903 129.558 323.203 cv
127.126 321.514 124.642 319.98 122.139 318.675 cv
117.932 313.267 114.938 307.485 112.558 301.095 cv
112.745 301.264 112.929 301.419 113.117 301.586 cv
114.328 302.662 115.563 303.734 116.841 304.564 cv
118.071 305.363 119.357 305.947 120.617 306.527 cv
122.208 307.259 123.821 308.016 125.39 308.868 cv
123.581 307.071 121.711 305.358 119.802 303.794 cv
cp
level3{
gsave
clp
[9.68131 91.0794 91.0794 -9.68131 128.156 258.946 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.68131 91.0794 91.0794 -9.68131 128.156 258.946 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
138.799 321.07 mo
137.499 317.903 136.908 316.295 135.85 313.043 cv
134.067 311.313 132.24 309.602 130.399 307.931 cv
128.459 306.17 126.469 304.391 124.503 302.613 cv
122.541 300.84 120.562 299.034 118.603 297.211 cv
116.646 295.388 114.697 293.525 112.749 291.677 cv
114.735 293.427 116.721 295.197 118.716 296.932 cv
120.711 298.668 122.729 300.39 124.729 302.086 cv
126.735 303.786 128.767 305.493 130.755 307.191 cv
132.258 308.476 133.76 309.793 135.245 311.127 cv
134.062 307.264 133.555 305.305 132.717 301.348 cv
130.889 299.728 129.111 297.971 127.452 296.053 cv
125.763 294.101 124.147 291.955 122.659 289.686 cv
121.17 287.416 119.806 284.979 118.584 282.419 cv
117.362 279.856 116.271 277.157 115.4 274.307 cv
116.343 277.106 117.499 279.739 118.778 282.229 cv
120.057 284.719 121.471 287.076 123 289.261 cv
124.53 291.445 126.179 293.5 127.891 295.36 cv
129.32 296.913 130.831 298.352 132.377 299.681 cv
131.782 296.646 131.536 295.117 131.147 292.043 cv
131.041 292.134 li
129.977 290.102 128.985 287.997 128.109 285.819 cv
127.234 283.644 126.397 281.362 125.762 279.072 cv
124.432 274.279 123.589 269.554 122.943 264.544 cv
123.743 269.482 124.727 274.131 126.201 278.832 cv
126.902 281.068 127.801 283.285 128.731 285.393 cv
129.397 286.899 130.123 288.364 130.884 289.787 cv
130.272 282.64 130.189 275.676 130.626 268.52 cv
130.376 275.726 130.647 282.721 131.461 289.89 cv
132.539 286.225 133.574 282.525 134.718 278.901 cv
136.029 274.75 137.478 270.641 139.011 266.542 cv
137.625 270.713 136.333 274.887 135.167 279.106 cv
134.582 281.224 134.057 283.388 133.517 285.546 cv
132.977 287.704 132.458 289.88 131.877 292.051 cv
131.764 291.99 li
132.181 294.701 132.431 296.048 133.008 298.719 cv
133.44 296.7 133.978 294.73 134.633 292.851 cv
135.511 290.33 136.543 287.899 137.728 285.626 cv
138.914 283.351 140.227 281.182 141.661 279.162 cv
143.094 277.143 144.64 275.249 146.301 273.526 cv
144.695 275.313 143.212 277.265 141.848 279.335 cv
140.482 281.407 139.245 283.621 138.14 285.932 cv
137.036 288.24 136.091 290.696 135.303 293.225 cv
134.518 295.748 133.954 298.407 133.554 301.116 cv
134.476 304.971 135.021 306.876 136.273 310.623 cv
136.647 308.667 137.172 306.781 137.825 305.011 cv
138.705 302.62 139.821 300.347 141.058 298.249 cv
142.293 296.153 143.688 294.185 145.177 292.362 cv
146.665 290.541 148.257 288.842 149.955 287.309 cv
148.31 288.906 146.78 290.666 145.359 292.544 cv
143.938 294.423 142.618 296.443 141.465 298.578 cv
140.31 300.717 139.286 303.021 138.5 305.416 cv
137.756 307.69 137.225 310.121 136.962 312.624 cv
137.992 315.525 138.556 316.959 139.779 319.781 cv
140.08 318.347 140.475 316.959 140.978 315.663 cv
141.703 313.794 142.597 312.018 143.614 310.388 cv
144.63 308.759 145.759 307.232 146.974 305.822 cv
148.188 304.413 149.486 303.097 150.874 301.915 cv
149.539 303.163 148.304 304.543 147.158 306.011 cv
146.012 307.48 144.959 309.06 144.027 310.731 cv
143.094 312.403 142.293 314.211 141.666 316.086 cv
141.104 317.769 140.723 319.571 140.504 321.419 cv
148.342 337.822 158.975 351.473 172.957 363.098 cv
172.234 363.982 171.872 364.425 171.148 365.311 cv
157.3 353.182 146.859 339.108 139.319 322.316 cv
136.115 321.482 132.941 320.122 129.863 318.418 cv
126.544 316.579 123.186 314.218 120.355 311.669 cv
123.24 314.036 126.639 316.195 129.973 317.841 cv
132.879 319.276 135.852 320.397 138.799 321.07 cv
cp
.766384 .709743 0 0 cmyk
f
193.16 334.85 mo
191.417 333.421 189.628 332.108 187.919 330.564 cv
186.741 329.5 185.611 328.339 184.527 327.07 cv
183.653 323.302 183.265 319.062 183.46 315.198 cv
183.644 315.405 183.837 315.604 184.03 315.787 cv
187.294 318.878 191.025 321.854 194.147 325.044 cv
194.558 325.464 194.962 325.937 195.364 326.411 cv
193.833 323.655 192.156 321.048 190.335 318.657 cv
188.355 316.058 186.195 313.716 184.529 310.684 cv
184.342 310.344 184.16 309.985 184.001 309.626 cv
184.936 304.341 186.865 299.25 190.504 295.239 cv
191.305 297.774 192.006 300.405 192.739 302.956 cv
193.346 305.069 193.996 307.188 194.535 309.325 cv
194.216 304.06 193.323 298.842 192.116 293.711 cv
194.054 292.11 196.027 291.185 197.814 290.654 cv
198.33 292.677 198.792 294.74 199.2 296.801 cv
199.288 294.641 199.351 292.466 199.367 290.286 cv
202.664 289.658 205.018 290.24 205.018 290.24 cv
205.715 290.347 207.418 290.856 209.529 291.84 cv
208.838 294.232 208.466 296.753 208.336 299.275 cv
209.222 296.988 210.354 294.867 211.69 292.96 cv
213.217 293.82 214.845 294.891 216.417 296.188 cv
214.041 299.725 212.997 303.541 212.097 307.635 cv
212.769 306.089 213.565 304.615 214.464 303.259 cv
215.693 301.402 217.105 299.736 218.574 298.146 cv
221.211 300.638 223.574 304.568 224.389 308.104 cv
223.964 308.612 223.516 309.119 223.079 309.608 cv
220.862 312.096 218.51 314.637 217.141 317.913 cv
216.535 319.36 216.129 320.932 215.808 322.52 cv
215.793 322.611 215.776 322.692 215.75 322.774 cv
217.292 319.629 219.902 316.352 222.541 314.105 cv
223.349 313.418 224.199 312.748 225.094 312.181 cv
225.487 315.482 225.79 318.584 226.008 321.536 cv
225.689 321.837 225.369 322.134 225.043 322.438 cv
221.61 325.652 218.672 329.654 217.482 334.21 cv
217.438 334.38 217.392 334.567 217.35 334.74 cv
218.93 331.821 220.579 328.988 222.907 326.899 cv
223.916 325.994 225.03 325.237 226.193 324.571 cv
226.371 329.046 226.431 333.471 226.375 337.948 cv
226.198 338.171 226.012 338.396 225.835 338.61 cv
223.991 340.835 222.014 343.072 220.958 345.968 cv
220.309 347.748 220.05 349.716 220.044 351.743 cv
220.132 351.615 220.229 351.481 220.318 351.355 cv
221.983 348.978 223.961 346.864 226.118 345.024 cv
225.634 355.124 229.318 379.154 229.318 379.154 cv
229.313 379.158 210.006 364.395 201.307 356.244 cv
202.553 356.552 203.791 356.892 205.024 357.229 cv
206.607 357.664 208.211 358.08 209.804 358.479 cv
209.447 358.239 209.078 358.003 208.712 357.792 cv
207.804 357.268 206.864 356.822 205.953 356.29 cv
204.926 355.69 203.925 354.96 202.916 354.259 cv
200.484 352.569 198 351.036 195.498 349.73 cv
191.291 344.322 188.296 338.541 185.916 332.15 cv
186.103 332.319 186.288 332.475 186.475 332.642 cv
187.687 333.718 188.921 334.79 190.199 335.62 cv
191.43 336.419 192.715 337.003 193.975 337.583 cv
195.566 338.314 197.179 339.071 198.748 339.924 cv
196.939 338.127 195.07 336.414 193.16 334.85 cv
cp
level3{
gsave
clp
[9.68131 91.0794 91.0794 -9.68131 201.515 290.001 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.68131 91.0794 91.0794 -9.68131 201.515 290.001 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
212.157 352.126 mo
210.857 348.959 210.267 347.351 209.208 344.099 cv
207.426 342.368 205.598 340.658 203.757 338.987 cv
201.817 337.226 199.827 335.447 197.861 333.669 cv
195.899 331.896 193.92 330.091 191.961 328.267 cv
190.004 326.443 188.056 324.581 186.107 322.732 cv
188.093 324.482 190.079 326.253 192.074 327.987 cv
194.07 329.724 196.087 331.445 198.088 333.142 cv
200.093 334.842 202.125 336.549 204.114 338.247 cv
205.617 339.531 207.118 340.849 208.603 342.183 cv
207.42 338.319 206.913 336.36 206.076 332.403 cv
204.247 330.783 202.469 329.027 200.811 327.109 cv
199.122 325.156 197.505 323.012 196.017 320.741 cv
194.529 318.472 193.165 316.035 191.943 313.475 cv
190.721 310.912 189.63 308.214 188.758 305.362 cv
189.701 308.162 190.856 310.795 192.136 313.285 cv
193.415 315.774 194.829 318.132 196.358 320.316 cv
197.888 322.501 199.537 324.556 201.249 326.416 cv
202.679 327.97 204.189 329.408 205.736 330.736 cv
205.141 327.702 204.894 326.173 204.505 323.099 cv
204.399 323.189 li
203.335 321.158 202.343 319.053 201.467 316.875 cv
200.592 314.699 199.756 312.418 199.12 310.129 cv
197.79 305.335 196.947 300.609 196.302 295.6 cv
197.101 300.538 198.085 305.187 199.559 309.888 cv
200.26 312.124 201.159 314.341 202.09 316.448 cv
202.755 317.955 203.48 319.42 204.243 320.843 cv
203.631 313.695 203.548 306.731 203.984 299.575 cv
203.734 306.781 204.005 313.776 204.82 320.945 cv
205.897 317.28 206.932 313.581 208.076 309.957 cv
209.387 305.806 210.835 301.696 212.369 297.599 cv
210.983 301.769 209.69 305.942 208.525 310.162 cv
207.94 312.279 207.415 314.443 206.875 316.602 cv
206.334 318.76 205.816 320.936 205.235 323.107 cv
205.123 323.046 li
205.539 325.757 205.789 327.104 206.367 329.774 cv
206.799 327.756 207.336 325.786 207.991 323.906 cv
208.869 321.386 209.901 318.955 211.086 316.682 cv
212.272 314.406 213.584 312.237 215.019 310.218 cv
216.453 308.199 217.998 306.305 219.659 304.582 cv
218.053 306.368 216.57 308.32 215.206 310.392 cv
213.84 312.463 212.603 314.677 211.498 316.987 cv
210.394 319.296 209.449 321.752 208.662 324.281 cv
207.875 326.804 207.312 329.463 206.913 332.172 cv
207.834 336.026 208.38 337.932 209.631 341.679 cv
210.005 339.723 210.531 337.837 211.183 336.066 cv
212.063 333.677 213.179 331.402 214.416 329.305 cv
215.651 327.21 217.047 325.24 218.536 323.418 cv
220.023 321.597 221.615 319.897 223.313 318.364 cv
221.668 319.962 220.138 321.722 218.717 323.6 cv
217.296 325.479 215.977 327.499 214.823 329.635 cv
213.668 331.772 212.644 334.076 211.859 336.473 cv
211.114 338.746 210.583 341.177 210.32 343.68 cv
211.35 346.581 211.914 348.015 213.137 350.837 cv
213.438 349.402 213.833 348.015 214.336 346.719 cv
215.061 344.851 215.955 343.073 216.972 341.443 cv
217.989 339.814 219.118 338.289 220.333 336.878 cv
221.547 335.469 222.845 334.152 224.232 332.971 cv
222.897 334.219 221.662 335.599 220.516 337.067 cv
219.37 338.536 218.318 340.115 217.385 341.787 cv
216.452 343.46 215.651 345.267 215.024 347.142 cv
214.462 348.824 214.081 350.627 213.863 352.475 cv
221.701 368.878 232.333 382.528 246.315 394.153 cv
245.592 395.038 245.23 395.481 244.507 396.366 cv
230.658 384.237 220.217 370.164 212.677 353.372 cv
209.474 352.538 206.299 351.178 203.222 349.474 cv
199.902 347.635 196.544 345.273 193.713 342.726 cv
196.599 345.093 199.997 347.252 203.331 348.897 cv
206.238 350.332 209.209 351.453 212.157 352.126 cv
cp
.766384 .709743 0 0 cmyk
f
431.511 303.14 mo
433.562 301.459 435.667 299.915 437.677 298.099 cv
439.064 296.847 440.393 295.48 441.668 293.987 cv
442.697 289.554 443.153 284.565 442.923 280.021 cv
442.707 280.265 442.479 280.498 442.252 280.713 cv
438.412 284.349 434.023 287.852 430.35 291.604 cv
429.867 292.097 429.391 292.654 428.918 293.212 cv
430.719 289.97 432.692 286.902 434.834 284.09 cv
437.164 281.031 439.706 278.276 441.666 274.709 cv
441.886 274.309 442.1 273.888 442.286 273.465 cv
441.187 267.247 438.917 261.258 434.636 256.539 cv
433.694 259.521 432.869 262.616 432.007 265.617 cv
431.293 268.104 430.529 270.597 429.894 273.11 cv
430.269 266.915 431.32 260.777 432.74 254.741 cv
430.46 252.858 428.138 251.769 426.036 251.145 cv
425.429 253.523 424.887 255.951 424.405 258.376 cv
424.302 255.834 424.229 253.275 424.209 250.711 cv
420.331 249.973 417.561 250.658 417.561 250.658 cv
416.741 250.782 414.737 251.382 412.254 252.54 cv
413.066 255.354 413.504 258.319 413.657 261.287 cv
412.614 258.597 411.283 256.101 409.711 253.856 cv
407.914 254.869 405.999 256.128 404.149 257.654 cv
406.945 261.815 408.174 266.306 409.233 271.122 cv
408.442 269.304 407.505 267.57 406.448 265.974 cv
405.002 263.79 403.341 261.83 401.613 259.959 cv
398.51 262.89 395.729 267.514 394.771 271.674 cv
395.271 272.271 395.799 272.868 396.312 273.444 cv
398.92 276.37 401.688 279.359 403.299 283.214 cv
404.011 284.917 404.489 286.766 404.866 288.634 cv
404.884 288.741 404.904 288.837 404.935 288.933 cv
403.122 285.232 400.05 281.377 396.945 278.734 cv
395.995 277.926 394.995 277.139 393.942 276.471 cv
393.479 280.354 393.123 284.003 392.866 287.477 cv
393.242 287.83 393.618 288.18 394.001 288.538 cv
398.041 292.319 401.497 297.028 402.896 302.388 cv
402.948 302.587 403.003 302.809 403.052 303.011 cv
401.193 299.577 399.253 296.244 396.515 293.786 cv
395.328 292.722 394.017 291.831 392.648 291.048 cv
392.44 296.313 392.369 301.518 392.435 306.786 cv
392.643 307.047 392.861 307.313 393.07 307.564 cv
395.239 310.182 397.565 312.813 398.808 316.221 cv
399.571 318.314 399.875 320.629 399.882 323.016 cv
399.779 322.864 399.665 322.707 399.561 322.559 cv
397.601 319.761 395.274 317.275 392.737 315.11 cv
393.306 326.992 388.972 355.264 388.972 355.264 cv
388.979 355.269 411.693 337.899 421.927 328.311 cv
420.46 328.672 419.005 329.072 417.553 329.47 cv
415.691 329.98 413.804 330.47 411.93 330.939 cv
412.35 330.658 412.785 330.38 413.214 330.132 cv
414.283 329.515 415.389 328.99 416.461 328.364 cv
417.669 327.659 418.847 326.799 420.034 325.975 cv
422.895 323.986 425.817 322.184 428.762 320.646 cv
433.711 314.284 437.233 307.483 440.034 299.964 cv
439.814 300.163 439.597 300.346 439.376 300.542 cv
437.951 301.808 436.499 303.07 434.995 304.047 cv
433.547 304.986 432.035 305.674 430.553 306.355 cv
428.681 307.216 426.783 308.106 424.938 309.109 cv
427.065 306.995 429.265 304.98 431.511 303.14 cv
cp
level3{
gsave
clp
[-11.3899 107.154 -107.154 -11.3899 421.683 250.376 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-11.3899 107.154 -107.154 -11.3899 421.683 250.376 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
409.162 323.465 mo
410.691 319.739 411.386 317.848 412.632 314.021 cv
414.728 311.985 416.878 309.973 419.044 308.007 cv
421.327 305.936 423.667 303.843 425.98 301.751 cv
428.289 299.664 430.618 297.541 432.922 295.395 cv
435.225 293.25 437.517 291.06 439.81 288.885 cv
437.473 290.943 435.136 293.025 432.79 295.066 cv
430.441 297.109 428.068 299.135 425.714 301.131 cv
423.355 303.131 420.964 305.139 418.625 307.137 cv
416.856 308.647 415.09 310.198 413.343 311.768 cv
414.735 307.223 415.331 304.917 416.316 300.263 cv
418.468 298.356 420.559 296.289 422.511 294.033 cv
424.498 291.735 426.399 289.212 428.15 286.541 cv
429.901 283.871 431.506 281.005 432.944 277.992 cv
434.382 274.978 435.665 271.803 436.69 268.448 cv
435.581 271.742 434.222 274.841 432.716 277.77 cv
431.212 280.698 429.548 283.472 427.749 286.042 cv
425.949 288.612 424.009 291.029 421.995 293.218 cv
420.313 295.045 418.536 296.737 416.716 298.301 cv
417.417 294.731 417.707 292.932 418.164 289.315 cv
418.289 289.422 li
419.541 287.031 420.708 284.556 421.738 281.992 cv
422.767 279.433 423.752 276.749 424.5 274.056 cv
426.064 268.416 427.056 262.856 427.815 256.963 cv
426.875 262.773 425.717 268.241 423.983 273.772 cv
423.158 276.403 422.101 279.012 421.005 281.491 cv
420.223 283.264 419.37 284.987 418.473 286.661 cv
419.193 278.252 419.291 270.059 418.777 261.641 cv
419.071 270.118 418.752 278.348 417.794 286.781 cv
416.526 282.47 415.309 278.117 413.963 273.854 cv
412.421 268.97 410.716 264.136 408.912 259.314 cv
410.543 264.22 412.063 269.131 413.435 274.095 cv
414.123 276.586 414.74 279.132 415.376 281.672 cv
416.012 284.211 416.622 286.771 417.306 289.324 cv
417.438 289.253 li
416.947 292.442 416.654 294.027 415.974 297.169 cv
415.466 294.794 414.834 292.478 414.063 290.265 cv
413.03 287.3 411.816 284.44 410.422 281.765 cv
409.027 279.089 407.482 276.536 405.795 274.16 cv
404.108 271.785 402.29 269.557 400.335 267.53 cv
402.225 269.632 403.969 271.929 405.575 274.365 cv
407.181 276.802 408.637 279.407 409.937 282.125 cv
411.236 284.841 412.348 287.73 413.274 290.706 cv
414.199 293.674 414.862 296.803 415.332 299.99 cv
414.247 304.524 413.605 306.766 412.133 311.174 cv
411.693 308.873 411.075 306.654 410.308 304.571 cv
409.272 301.76 407.959 299.084 406.504 296.616 cv
405.05 294.151 403.409 291.835 401.658 289.691 cv
399.907 287.548 398.035 285.549 396.036 283.745 cv
397.972 285.624 399.772 287.695 401.443 289.904 cv
403.115 292.114 404.668 294.492 406.025 297.004 cv
407.384 299.52 408.589 302.23 409.513 305.049 cv
410.389 307.724 411.013 310.584 411.323 313.528 cv
410.112 316.942 409.448 318.628 408.008 321.948 cv
407.654 320.261 407.189 318.628 406.598 317.104 cv
405.745 314.905 404.693 312.815 403.497 310.897 cv
402.301 308.981 400.973 307.186 399.543 305.526 cv
398.115 303.868 396.588 302.319 394.955 300.929 cv
396.526 302.397 397.979 304.021 399.328 305.749 cv
400.676 307.477 401.914 309.335 403.011 311.302 cv
404.109 313.27 405.051 315.396 405.789 317.602 cv
406.45 319.581 406.898 321.701 407.155 323.875 cv
397.934 343.174 385.425 359.233 368.975 372.91 cv
369.826 373.951 370.251 374.472 371.103 375.513 cv
387.396 361.244 399.679 344.687 408.55 324.932 cv
412.319 323.95 416.054 322.35 419.674 320.345 cv
423.579 318.182 427.53 315.403 430.861 312.405 cv
427.466 315.19 423.468 317.73 419.545 319.666 cv
416.126 321.354 412.629 322.674 409.162 323.465 cv
cp
.766384 .709743 0 0 cmyk
f
354.933 377.033 mo
324.146 377.033 li
324.146 360.529 313.279 344.263 305.151 330.396 cv
304.892 329.957 304.632 329.506 304.373 329.066 cv
297.373 316.971 288.275 305.743 285.581 291.674 cv
284.803 287.582 284.646 283.151 286.562 279.454 cv
288.602 275.509 292.751 272.983 297.057 271.879 cv
348.338 258.734 359.059 327.207 354.933 377.033 cv
cp
level3{
gsave
clp
[6.53954e-15 106.799 -106.799 6.53954e-15 320.385 270.234 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~`Mrn<`i9"=`i9"=a/]1?a/]1?a/f7@`iK.?`iT4@`i]:Aa0#CBa0,ICa0,ICa0,ICaKPXEaKPXEaKPXE
aKPXEaKY^FaftgGag(mHaKkjHaKkjHaKtpIag;$JagD*KagD*KagD*Kb-_3Lb-h9Mb-h9MbI7HObI7HO
bI@NPbI@NPbIITQbIITQbIITQbIRZRbIRZRbIRZRbIRZRbI[`SbI[`Sbe*oUbe*oUbe3uVbe3uVbe3uV
be=&Wbe=&Wbe=&Wbe=&WbeF,Xc+a5Yc+a5Yc+a5Yc+j;Zc+j;Zc+j;Zc+sA[c+sA[c+sA[c+sA[c,'G\
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~c,'G\cGBP]cGKV^cGKV^cG]b`cGfhacGonbcc6"ccc?(dd)c7fd)l=gd)l=gdE;LidEDRjdEMXkdE_dm
dEhjndEhjnda8$pdaA*qdaJ0rda\<tda\<te(+L!e(4R"e(=X#e(Od%eCjm&eCss'e_L3*e_U9+e_^?,
e_pK.f&?Z0f&H`1f&Zl3f&m#5fB<27fBE88f]rM;f^&S<g$Sh?g$etAg@5.Cg@G:Eg@YFGg@kRIg\LmM
g\_$Oh#79Rh#@?Th#@?Th#@?Th#@?Uh#@BWh#@HYh>[T\h>[W]h>[Z_h#@Zbh#@]dg]%]hgA_ZjgA_`n
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.326986 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.53954e-15 106.799 -106.799 6.53954e-15 320.385 270.234 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~`5T^8`l?$<`Pog9`l?$<a2c6@a2c6AaN2HCa2c9BaN2HEaiVZIb0%lLb0%lLb0%lLb0%lLbKJ)PbKJ)P
bKJ)PbKJ,Rbfn;Tbfn;Tbfn;Tc-=MXc-=MXc-=MXc-=MXc-FV[cHab^cd0q`cd0tbd*U.dd*U.dd*U.d
d*U.edF$@hdF$@hdF$@hdaHRldaHRldaHRme'ldpe'umseC<!teC<!te^`4#e^`4#e^`4$f%/F'f@SX+
f@S[-f\"j0g"G'3g"G'3g"G*5g=k98gY:K;gY:K;gY:K;gY:K;gY:K<gt^]?gt^]?gt^Z=gY:K:g=k65
~>
<~WMuksWiE,#XK8P+Y-+q1YHP.5YHP17Z*CU?Za7!F['[3I[C*EN[^NZS\@B&Y\[f8]\[f;_]=Y\f]Y(nj
]tM+m^:q=q^:q@s^V@S"^qdb%_83t)_SX1,_o'F3`Poj:`l?$=a2c9BaN;QGaiV]Jb0.uObfn>VcHjh_
cd0qad*^7gdaHRmeC<!te^`4$f%/I)f@\d0g"G*5g=tE<h;-rEhV[8LiSieUioB([jlY^gkNM-nl0@R"
lg*p)mdBQ5nF5u=o(2MHp%J.Tq>1!dr;HWorr<#us8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<N<)!sA`0"U,&6#7(VB$4
@7O%Ls!\~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!$#!<N<(!WiE*!s8W-"9\i
2"U,)7#6tM@#mgqH~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
341.698 377.033 mo
340.379 377.033 li
340.266 370.056 339.534 363.077 338.406 356.201 cv
337.042 347.881 334.991 339.697 332.308 331.728 cv
326.964 315.787 318.791 300.816 308.082 287.74 cv
307.203 286.624 307.98 286.026 308.905 287.019 cv
320.618 299.407 329.557 314.559 334.968 330.836 cv
337.685 338.976 339.624 347.374 340.706 355.874 cv
341.597 362.896 342.014 369.977 341.698 377.033 cv
cp
.766384 .709743 0 0 cmyk
f
383.547 377.033 mo
358.228 377.033 li
354.102 338.941 355.229 243.448 410.388 252.827 cv
452.706 260.02 384.629 315.032 383.547 377.033 cv
cp
level3{
gsave
clp
[7.64487e-15 124.85 -124.85 7.64487e-15 390.504 252.183 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.64487e-15 124.85 -124.85 7.64487e-15 390.504 252.183 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
397.39 273.863 mo
394.053 277.605 391.291 281.821 388.856 286.195 cv
386.421 290.558 384.37 295.146 382.645 299.847 cv
380.897 304.537 379.398 309.327 378.169 314.197 cv
376.929 319.057 375.87 323.96 375.024 328.92 cv
373.277 338.807 372.217 348.828 371.552 358.872 cv
371.169 364.926 370.921 370.979 370.865 377.033 cv
369.14 377.033 li
368.914 370.945 368.926 364.847 369.14 358.748 cv
369.534 348.603 370.481 338.445 372.263 328.413 cv
373.13 323.396 374.258 318.414 375.599 313.499 cv
376.918 308.572 378.553 303.725 380.48 298.99 cv
381.405 296.611 382.509 294.301 383.603 291.99 cv
384.798 289.724 385.948 287.447 387.323 285.294 cv
389.995 280.942 393.016 276.771 396.624 273.152 cv
397.706 272.003 398.416 272.646 397.39 273.863 cv
cp
.766384 .709743 0 0 cmyk
f
400.762 377.033 mo
384.687 377.033 li
384.687 377.033 380.448 343.158 398.643 343.181 cv
415.203 343.191 404.144 364.126 400.762 377.033 cv
cp
level3{
gsave
clp
[2.07289e-15 33.8528 -33.8528 2.07289e-15 395.888 343.18 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.07289e-15 33.8528 -33.8528 2.07289e-15 395.888 343.18 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
395.971 351.545 mo
393.582 359.165 392.567 367.146 392.003 375.095 cv
391.969 375.736 391.936 376.391 391.901 377.033 cv
390.504 377.033 li
390.526 376.346 390.56 375.669 390.605 374.993 cv
391.191 366.955 392.533 358.895 395.487 351.354 cv
395.734 350.768 396.174 350.947 395.971 351.545 cv
cp
.766384 .709743 0 0 cmyk
f
313.089 377.033 mo
292.459 377.033 li
292.459 350.587 262.541 324.614 285.098 321.807 cv
293.125 320.804 298.851 324.918 302.932 331.31 cv
313.089 347.171 313.089 377.033 313.089 377.033 cv
cp
level3{
gsave
clp
[3.39084e-15 55.3766 -55.3766 3.39084e-15 294.885 321.657 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.39084e-15 55.3766 -55.3766 3.39084e-15 294.885 321.657 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
305.198 377.033 mo
303.879 377.033 li
303.394 373.02 302.786 369.007 302.03 365.039 cv
300.88 359.492 299.46 354.014 297.578 348.682 cv
297.082 347.352 296.518 346.055 295.999 344.747 cv
295.729 344.094 295.492 343.429 295.188 342.786 cv
294.241 340.892 li
293.305 338.987 li
292.989 338.355 292.685 337.713 292.291 337.127 cv
290.07 333.508 li
289.607 332.765 289.979 332.46 290.498 333.215 cv
292.91 336.755 li
293.339 337.341 293.666 337.973 294.004 338.604 cv
295.041 340.486 li
296.067 342.38 li
296.394 343.012 296.653 343.677 296.958 344.33 cv
297.521 345.649 298.13 346.945 298.66 348.275 cv
300.711 353.631 302.244 359.165 303.405 364.779 cv
304.183 368.838 304.781 372.93 305.198 377.033 cv
cp
.766384 .709743 0 0 cmyk
f
417.91 377.033 mo
402.894 377.033 li
402.894 337.251 418.124 304.875 439.498 305.303 cv
460.871 305.721 419.612 349.313 417.91 377.033 cv
cp
level3{
gsave
clp
[4.39245e-15 71.7342 -71.7342 4.39245e-15 424.26 305.299 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.39245e-15 71.7342 -71.7342 4.39245e-15 424.26 305.299 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
432.159 316.881 mo
429.938 319.519 428.033 322.416 426.263 325.392 cv
425.834 326.136 425.384 326.868 424.955 327.624 cv
423.749 329.912 li
422.904 331.423 422.216 333.012 421.472 334.567 cv
418.597 340.847 416.376 347.408 414.596 354.081 cv
412.724 361.611 411.473 369.289 410.796 377.033 cv
409.646 377.033 li
410.131 369.188 411.315 361.364 413.231 353.721 cv
415.046 346.979 417.38 340.351 420.424 334.061 cv
421.202 332.505 421.945 330.915 422.836 329.416 cv
424.121 327.139 li
424.572 326.384 425.045 325.651 425.508 324.918 cv
427.391 321.976 429.419 319.124 431.764 316.531 cv
432.508 315.73 432.869 316.058 432.159 316.881 cv
cp
.766384 .709743 0 0 cmyk
f
132.97 377.033 mo
102.183 377.033 li
102.183 360.529 91.3159 344.263 83.1885 330.396 cv
82.9287 329.957 82.6699 329.506 82.4102 329.066 cv
75.4097 316.971 66.3125 305.743 63.6182 291.674 cv
62.8403 287.582 62.6826 283.151 64.5991 279.454 cv
66.6396 275.509 70.7881 272.983 75.0942 271.879 cv
126.375 258.734 137.096 327.207 132.97 377.033 cv
cp
level3{
gsave
clp
[6.53954e-15 106.799 -106.799 6.53954e-15 98.4225 270.234 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.53954e-15 106.799 -106.799 6.53954e-15 98.4225 270.234 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
119.735 377.033 mo
118.417 377.033 li
118.304 370.056 117.571 363.077 116.444 356.201 cv
115.08 347.881 113.028 339.697 110.345 331.728 cv
105.001 315.787 96.8286 300.816 86.1191 287.74 cv
85.2397 286.624 86.0176 286.026 86.9419 287.019 cv
98.6548 299.407 107.594 314.559 113.005 330.836 cv
115.722 338.976 117.661 347.374 118.743 355.874 cv
119.634 362.896 120.051 369.977 119.735 377.033 cv
cp
.766384 .709743 0 0 cmyk
f
161.584 377.033 mo
136.265 377.033 li
132.139 338.941 133.266 243.448 188.425 252.827 cv
230.744 260.02 162.666 315.032 161.584 377.033 cv
cp
level3{
gsave
clp
[7.64487e-15 124.85 -124.85 7.64487e-15 168.541 252.183 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.64487e-15 124.85 -124.85 7.64487e-15 168.541 252.183 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
175.427 273.863 mo
172.09 277.605 169.329 281.821 166.894 286.195 cv
164.458 290.558 162.407 295.146 160.682 299.847 cv
158.935 304.537 157.435 309.327 156.207 314.197 cv
154.967 319.057 153.907 323.96 153.062 328.92 cv
151.314 338.807 150.254 348.828 149.589 358.872 cv
149.206 364.926 148.958 370.979 148.902 377.033 cv
147.177 377.033 li
146.952 370.945 146.963 364.847 147.177 358.748 cv
147.571 348.603 148.519 338.445 150.3 328.413 cv
151.167 323.396 152.295 318.414 153.637 313.499 cv
154.955 308.572 156.59 303.725 158.518 298.99 cv
159.442 296.611 160.547 294.301 161.64 291.99 cv
162.835 289.724 163.985 287.447 165.36 285.294 cv
168.032 280.942 171.053 276.771 174.661 273.152 cv
175.743 272.003 176.453 272.646 175.427 273.863 cv
cp
.766384 .709743 0 0 cmyk
f
178.8 377.033 mo
162.724 377.033 li
162.724 377.033 158.486 343.158 176.68 343.181 cv
193.24 343.191 182.182 364.126 178.8 377.033 cv
cp
level3{
gsave
clp
[2.07289e-15 33.8528 -33.8528 2.07289e-15 173.925 343.18 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.07289e-15 33.8528 -33.8528 2.07289e-15 173.925 343.18 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
174.008 351.545 mo
171.619 359.165 170.604 367.146 170.041 375.095 cv
170.007 375.736 169.973 376.391 169.939 377.033 cv
168.541 377.033 li
168.563 376.346 168.597 375.669 168.643 374.993 cv
169.229 366.955 170.57 358.895 173.524 351.354 cv
173.772 350.768 174.211 350.947 174.008 351.545 cv
cp
.766384 .709743 0 0 cmyk
f
99.4829 377.033 mo
78.8535 377.033 li
78.8535 350.587 48.9346 324.614 71.4922 321.807 cv
79.5186 320.804 85.2451 324.918 89.3262 331.31 cv
99.4829 347.171 99.4829 377.033 99.4829 377.033 cv
cp
level3{
gsave
clp
[3.39084e-15 55.3766 -55.3766 3.39084e-15 81.2786 321.657 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.39084e-15 55.3766 -55.3766 3.39084e-15 81.2786 321.657 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
91.5918 377.033 mo
90.2729 377.033 li
89.7881 373.02 89.1792 369.007 88.4243 365.039 cv
87.2744 359.492 85.854 354.014 83.9712 348.682 cv
83.4756 347.352 82.9116 346.055 82.3931 344.747 cv
82.1226 344.094 81.8857 343.429 81.5815 342.786 cv
80.6343 340.892 li
79.6987 338.987 li
79.3833 338.355 79.0786 337.713 78.6841 337.127 cv
76.4634 333.508 li
76.0015 332.765 76.3735 332.46 76.8921 333.215 cv
79.3042 336.755 li
79.7329 337.341 80.0596 337.973 80.3979 338.604 cv
81.4351 340.486 li
82.4609 342.38 li
82.7876 343.012 83.0469 343.677 83.3511 344.33 cv
83.915 345.649 84.5239 346.945 85.0537 348.275 cv
87.1055 353.631 88.6382 359.165 89.7993 364.779 cv
90.5771 368.838 91.1748 372.93 91.5918 377.033 cv
cp
.766384 .709743 0 0 cmyk
f
195.947 377.033 mo
180.931 377.033 li
180.931 337.251 196.161 304.875 217.535 305.303 cv
238.908 305.721 197.649 349.313 195.947 377.033 cv
cp
level3{
gsave
clp
[4.39245e-15 71.7342 -71.7342 4.39245e-15 202.297 305.299 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.39245e-15 71.7342 -71.7342 4.39245e-15 202.297 305.299 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
210.196 316.881 mo
207.976 319.519 206.07 322.416 204.3 325.392 cv
203.872 326.136 203.421 326.868 202.993 327.624 cv
201.787 329.912 li
200.941 331.423 200.253 333.012 199.509 334.567 cv
196.635 340.847 194.414 347.408 192.633 354.081 cv
190.762 361.611 189.51 369.289 188.834 377.033 cv
187.684 377.033 li
188.168 369.188 189.353 361.364 191.269 353.721 cv
193.083 346.979 195.417 340.351 198.461 334.061 cv
199.239 332.505 199.983 330.915 200.874 329.416 cv
202.158 327.139 li
202.609 326.384 203.083 325.651 203.545 324.918 cv
205.428 321.976 207.457 319.124 209.801 316.531 cv
210.545 315.73 210.906 316.058 210.196 316.881 cv
cp
.766384 .709743 0 0 cmyk
f
72.0742 362.419 mo
81.9961 360.529 89.1563 367.979 89.6289 368.452 cv
90.0649 366.926 94.3901 352.86 108.419 347.881 cv
117.288 344.719 125.103 346.973 127.792 347.881 cv
126.011 343.083 126.956 337.74 130.227 333.924 cv
133.752 329.817 139.458 328.145 144.765 329.708 cv
150.762 320.439 161.775 315.642 172.606 317.568 cv
183.292 319.495 191.869 327.6 194.413 338.177 cv
197.648 333.343 203.464 330.907 208.952 332.106 cv
213.858 333.161 217.783 336.904 219.273 341.811 cv
225.961 334.832 236.102 332.216 245.297 335.16 cv
253.489 337.736 259.745 344.341 262.048 352.534 cv
268.63 347.334 277.49 345.369 285.728 347.963 cv
298.051 351.842 305.812 364.921 303.127 378.156 cv
289.63 378.156 276.132 378.156 262.634 378.156 cv
245.808 378.156 li
56.918 378.156 li
58.4077 370.124 64.5142 363.837 72.0742 362.419 cv
cp
level3{
gsave
clp
[3.73573e-15 -61.009 61.009 3.73573e-15 180.288 378.157 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~"98H&"T\W("T\W("p"`)#6=i*#QXr+#QXr+#lt&,$3:/-$3:/-$NU8.$ipA/%06J0%KQS1%fl\2&-2e3
&HMn4&ci"5'*/+6'*/+6'ES:8'`nC9('4L:(BOU;(]j^<)?Ks?)Zg'@*!66B*!66B*<Q?C*WlHD*s2QE
+9MZF+ThcG+p.oI,6J#J,Qe,K,m+5L-3OAM-NjJN-j0SO.0K\P.KfeQ.KfeQ.g,nR/-H"S/Hc+T/d)4U
0*MCW0*MFX0EhOY0a.XZ1'Ia[1Bdj\1^*s]1^*s]2?a0_2?a0_2['9`3!BBa3<]Kb3X#Tc3s>]d49Yfe
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.73573e-15 -61.009 61.009 3.73573e-15 180.288 378.157 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~!sA`0"9\i1"9er4"U5/8"pYA<#6tJ=#7(S@#RLeD#mgnE#mq"H$4@4L$OdFP$k3XT%1WjX%M''\%hK9`
&.fEc&J5Wg&eYfi&eYik',)&o'GM8s'bqK"()@]&(Ddo*)&X>2)B'P6)]K_8)]Kb:*#ot>*??1B*ZcCF
+!2RI+<VdM+X&!Q+sJ3U,9nEY,U=W],paia-71&e-RU8i-n$Jm.4H\p.4H\q.Olnu.k<,$/1`>(/M/P,
/hSb//hSb/0/"t30JG170ekC;1,:U?1G^gC1G^gC1c.'I2)R6K2E!HO2`EZS3&ilW3B9)[3]];_4$,Mc
~>
<~zzzzzzzzzzzzzzzzzzz!!!$#!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E6'!WiE)!WiE)!WiE)!WiE)!
WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE*!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W."9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"
9\i1~>
<~zzzzzzzzzzzzzzzzzzzzzzzz!!!$#!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3&!WiE)!
WiE)!WiE)!WiE)!WiE(!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!WiE)!WiE)!
WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
211.397 365.805 mo
221.319 363.915 228.479 371.365 228.953 371.838 cv
229.389 370.312 233.714 356.245 247.743 351.267 cv
256.611 348.104 264.426 350.357 267.115 351.267 cv
265.334 346.469 266.279 341.126 269.55 337.31 cv
273.076 333.202 278.782 331.53 284.089 333.094 cv
290.086 323.825 301.099 319.027 311.93 320.954 cv
322.615 322.88 331.193 330.985 333.737 341.562 cv
336.972 336.728 342.787 334.293 348.275 335.492 cv
353.182 336.547 357.107 340.29 358.597 345.196 cv
365.285 338.218 375.425 335.602 384.621 338.545 cv
392.812 341.121 399.069 347.727 401.372 355.919 cv
407.954 350.72 416.813 348.755 425.051 351.348 cv
437.375 355.228 445.136 368.307 442.451 381.542 cv
428.953 381.542 415.456 381.542 401.958 381.542 cv
385.131 381.542 li
196.242 381.542 li
197.731 373.51 203.838 367.223 211.397 365.805 cv
cp
level3{
gsave
clp
[3.73573e-15 -61.0091 61.0091 3.73573e-15 319.612 381.542 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.73573e-15 -61.0091 61.0091 3.73573e-15 319.612 381.542 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
383.431 396.159 mo
383.431 409.176 322.28 419.729 246.847 419.729 cv
171.414 419.729 110.263 409.176 110.263 396.159 cv
110.263 383.142 171.414 372.589 246.847 372.589 cv
322.28 372.589 383.431 383.142 383.431 396.159 cv
cp
.0807507 .00375372 .00900282 0 cmyk
f
441.681 270.948 mo
441.515 270.879 441.349 270.852 441.182 270.852 cv
440.918 270.852 440.642 270.935 440.406 271.087 cv
424.998 281.263 li
416.331 280.345 li
413.117 280.005 409.926 281.172 407.689 283.506 cv
406.091 285.174 li
355.675 312.365 li
355.675 312.365 344.381 294.54 332.116 275.148 cv
310.684 289.963 li
317.936 302.34 338.024 334.656 351.508 336.436 cv
352.591 336.397 353.598 336.386 354.568 336.436 cv
373.874 334.233 411.154 294.267 411.154 294.267 cv
425.35 291.134 li
442.208 273.235 li
442.901 272.501 442.624 271.309 441.681 270.948 cv
cp
0 .253727 .273594 0 cmyk
f
340.738 376.738 mo
335.153 378.792 325.613 381.661 314.314 384.825 cv
302.649 388.107 289.107 391.709 276.084 395.086 cv
266.792 389.737 258.09 384.802 249.956 380.269 cv
269.153 369.583 285.27 361.117 298.824 354.588 cv
324.02 342.451 340.36 337.02 351.246 336.453 cv
351.577 336.453 li
352.509 336.56 353.513 336.56 354.563 336.43 cv
362.049 336.771 366.547 339.842 369.617 344.813 cv
375.816 354.848 364.245 368.06 340.738 376.738 cv
cp
.0198062 .341253 .360571 0 cmyk
f
351.508 336.436 mo
352.591 336.397 353.598 336.386 354.568 336.436 cv
353.511 336.56 352.503 336.56 351.571 336.447 cv
351.508 336.436 li
cp
.749721 .679194 .670497 .901457 cmyk
f
351.571 336.447 mo
351.409 336.447 li
351.508 336.436 li
351.571 336.447 li
cp
f
353.271 307.872 mo
331.838 322.687 li
293.393 277.026 li
295.122 264.264 296.416 252.036 295.62 240.841 cv
294.227 221.337 280.382 213.139 269.647 209.706 cv
269.647 209.706 291.117 213.662 301.827 227.37 cv
302.486 228.203 303.108 229.074 303.668 229.982 cv
308.419 237.62 320.697 257.062 353.271 307.872 cv
cp
level3{
gsave
clp
[5.49753e-15 89.7814 -89.7814 5.49753e-15 311.459 200.546 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!52G6!5;M7!5DP7!5V\9!5__9!5he:!5qh:!6%n;!68"<!6A%<!6J+=!6S.=!6\4>!6e7>!6n=?!7"@?
!7+F@!74I@!7=OA!7FRA!7OXB!7aaC!7jdC!7sgC!8'mD!80sE!8:!E!8C$E!8U0G!8^3G!8^3G!8g6G
!8p<H!9$BI!9-HJ!TQTK!ol]L"6;lN"6DoN"Qi)P"Qr,P"mA8Q"mJ>R#3nJS#4"PT#OF_V#jaeV#jjkW
$1:%Y$1C(Y$Lg7[$Lg4Z$h6C\%.ZR^%Iu[_%J)^_%eMma&+r'c&G80d&b\?f&b\?f')+Nh'DOZi'DX`j
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.49753e-15 89.7814 -89.7814 5.49753e-15 311.459 200.546 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!"!<E3&!WiE)!WiE*!s8W-!s8W."9\i1"9\i2"U,&5
"U,&6"pP8:#6tJ=#6tJ>#RC\A#RC\A#mgnE#mgnE$47+I$O[=M$k*OQ$k*OQ%1NaU%LrsY%hB0]&.fBa
&.fBa&J5Te&eYfi&eYfi~>
<~]Y2"l]tV4p^;%Fu^qmk'_8=(+_Sa:/_o0L3`5T^8`lH-?a2l?CaN;QGai_cKb0.uObKS2Sbg"DWc-FV[
cHab^cd0tbd*U1fdF$CjdaHUneC<%!e^`7%f%/I)f@S[-f\"m1g"G*5g=k<9gt^`Ah;-oCh;-rEhVR/I
hr!>Li8EPPiSibTio8tWio8tXj5]1\jQ,C`jlPUdk2tghkND$lkih6pl07HtlK[[#lg*m&lg*m'm-O*+
mHs<.mdBN2n*f`6n*f`6nF5r:naZ/>naZ/>o()ABoCMSFo^qeJo^qeJp%A"Np%A"Np@e4Rp\4FVq"XXZ
~>
<~<`W7%<`W7%<`N."<E3%!<E)ps<)cgr<)Z^o;c?Un;c6Lk;Gg:g;,L1f;,C(c:f'tb:esk_:JXb^:JOY[
:/4PZ:/4MX9he>V9he;T9MA,R9MA)P91qlL8kMZH8P)KF8P)KF8P)HD84Z6@7n6'>7n6$<7Rfj:7Rfg8
77BX677BX677BX677BX56psF26psF26psF16UO4.6UO4-6:+")5s[e&5s[e%5X7S"5X7S"5X7S!5<h@s
5<h@s5<h@s5!D.o5!D.o4Ztqk4Ztqk4Ztqk4Ztqk4?P_g4?P_g4?P_g4?P_g4?P_g4?P_g4?P_g4$,Mc
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
304.743 393.032 mo
293.726 393.586 279.955 397.888 279.955 397.888 cv
279.955 397.888 281.978 398.986 283.333 400.891 cv
279.308 401.628 li
272.873 407.542 li
274.998 411.418 281.984 413.345 293.915 413.345 cv
303.021 413.345 312.924 411.744 315.636 405.391 cv
318.956 397.612 315.76 392.479 304.743 393.032 cv
cp
level3{
gsave
clp
[1.65926e-15 27.0978 -27.0978 1.65926e-15 294.878 391.971 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~]Dhm4^&J-7^Ae99^]+B:_>aW=_Z'`>_uBl@`;]uA`r?5Da8Z>EaSuJGb5V\Ibl7qLcMn.Nci4:Pd/OCQ
dJjOTdf0XUe,KdWeGfpYec-'\f)H3^fDc?`f`)Kcg&DWegA_cgg]%lih#A#khZ"8nhu=Dpi;XPriVs\u
j8Tr#jSp)%jo65'k5QA)kPlM,kPlM,kl2Y/l2Mb1lMhn3li/%6m/J.7mJe::mf+C;n,FO>nGaX?nc'dB
o)BpDoD^'Go`$0Hp&?<KpAZHMpAZHNp\uWQq#;cTq>VlUqYr#Xqu8/Zr;S>^r;SA_rVnJarr4Vds8O_f
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.65926e-15 27.0978 -27.0978 1.65926e-15 294.878 391.971 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~]">Se]Y2"l]tV4p^;%Fu^qmk'_8=(+_Sa:/_o0L4`Q#p;`lH-?a2l?Dai_cLbKS2Tc-FV[cHjh_cd:%c
d*U1fdF$CjdaHUne'lgreC<%!e^`7%f%/I)f@S[-f\"m1g"G*5g=k<9gY:N=h;-rEhVR/Ihr!AMi8ESQ
iSrkWj5]1\jQ,C`jlPUdk2tggk2tghkND$lkih6pl07HtlK[[#lg*m'm-O*+mHs</mdBN3n*f`7nF5r;
naZ/>o()ABoCMSFo^qeJp%A"Np%A"Np@e4Rp\4FVq"XXZq>'j^qYL'bqtp9fqtp9fr;?KjrVc]nrr2or
~>
255 <~!!**$!<N<(!WiE)!WrN,!s8W-!sA`0"9\i1"9er4"U,&5"U5/8"pP89"pYA<#6tJ=#7(S@#RC\A#RLeD
#mgnE#mgqG$47.K$O[@O$k*RS%1NdW%Ls![%hB3_&.fEc&J5Te&J5Wg&eYik',)&o'GM8s'bqK"()@]&
(Ddl)(`4)-)&X;1)B'M5)]K_8)]K_9*#oq<*#oq=*??.A*Zc@D*Zc@E+!2RH+!2RI+<VdL+<VdM+X&!Q
+sJ3T,9nEX,9nEX,U=W\,pai`,pai`-71)f-n$Jl-n$Jl.4H\p.Olnt.k</%/M/P+/M/P+/hSb//hSb/
~>
<~zzzzzzzzzzzzzzz!!**$!<E3%!<E3%!<E3%!<E6'!WiE)!WiE)!WiH+!s8W-!s8W-!s8Z/"9\i1"9\i1
"9\i1"9\i1"9\l3"U,&5"U,&5"U,&5"U,&5"U,&6"pP89"pP8:#6tJ>#RC\A#RC\B#mgnE#mgnF$47+I
$47+J$O[=M$O[=N$k*OQ$k*OQ%1NaU%1NaU%LrsY%LrsY%hB0]%hB0]&.fBa&.fBa&J5Te&J5Te&eYfi
&eYfi',)#m'GM5q'bqGu~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
195.157 393.032 mo
206.174 393.586 219.945 397.888 219.945 397.888 cv
219.945 397.888 217.922 398.986 216.567 400.891 cv
220.592 401.628 li
227.027 407.542 li
224.902 411.418 217.916 413.345 205.985 413.345 cv
196.879 413.345 186.976 411.744 184.264 405.391 cv
180.944 397.612 184.14 392.479 195.157 393.032 cv
cp
level3{
gsave
clp
[1.65926e-15 27.0978 -27.0978 1.65926e-15 205.021 391.971 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.65926e-15 27.0978 -27.0978 1.65926e-15 205.021 391.971 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
303.464 202.872 mo
303.52 203.362 303.505 203.903 303.404 204.512 cv
303.005 206.926 302.164 208.72 303.021 211.132 cv
303.606 212.78 304.461 214.35 304.766 216.079 cv
305.109 218.035 304.342 219.699 303.771 221.496 cv
303.564 222.145 301.623 227.108 301.827 227.37 cv
291.117 213.662 269.647 209.706 269.647 209.706 cv
267.98 209.171 266.375 208.749 264.92 208.425 cv
260.23 207.368 256.922 207.243 256.922 207.243 cv
256.922 200.166 li
264.36 195.601 269.647 184.281 269.647 173.745 cv
269.647 167.737 267.931 162.985 265.057 159.552 cv
260.691 156.828 254.758 158.88 252.481 161.916 cv
249.832 165.46 248.812 171.17 237.268 170.934 cv
232.666 170.834 230.763 174.84 230.8 179.753 cv
232.33 188.324 236.945 196.471 242.978 200.166 cv
242.978 207.243 li
242.978 207.243 239.669 207.368 234.979 208.425 cv
233.524 208.749 231.919 209.171 230.253 209.706 cv
230.253 209.706 206.083 214.159 196.232 229.982 cv
195.411 231.3 194.354 232.979 193.123 234.957 cv
193.93 233.66 190.693 228.524 190.129 227.086 cv
189.581 225.688 188.64 224.303 188.23 222.846 cv
186.488 216.648 192.676 210.897 194.574 205.319 cv
195.724 201.941 193.776 197.438 196.312 194.506 cv
197.992 192.564 200.699 191.538 202.551 189.723 cv
204.586 187.73 205.957 185.051 206.461 182.25 cv
206.958 179.486 206.496 176.483 207.773 173.982 cv
209.116 171.352 212.018 169.974 214.167 167.948 cv
218.508 163.859 217.906 159.038 218.141 153.669 cv
218.691 141.125 228.106 132.143 239.501 128.438 cv
246.456 126.176 254.461 125.412 260.737 129.904 cv
261.431 130.4 262.004 131.369 262.709 131.762 cv
263.449 132.175 264.098 131.734 265.077 131.63 cv
272.006 130.889 277.142 138.382 278.939 144.152 cv
281.106 151.109 278.461 158.965 284.785 163.84 cv
288.869 166.987 285.718 171.001 287.545 174.956 cv
289.307 178.771 295.948 177.447 297.92 182.091 cv
299.99 186.965 295.68 192.704 299.423 197.161 cv
301.178 199.25 303.189 200.431 303.464 202.872 cv
cp
level3{
gsave
clp
[6.63301e-15 108.325 -108.325 6.63301e-15 246.388 126.631 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s8O_fs8O_fs8O_fs8O_fs8O_fs8O_fs8O_fs8O_es8O_err4Vdrr4Vdrr4Scrr4SbrVnJarVnJarVnJa
r;SA_r;S>^r;S>^qu82\qu8/Zqu8/ZqYr#XqYr#Wq>VlUq#;cTp\uWQp\uTPpAZHNpAZHMp&?<Ko`$3I
oD^'Go)BpEnc'dBnGa[An,FO>mf+C;mJe::m/J.7li/"4l2Mb1kl2Y/kPlM,k5QA)jSp,&j8Tr#iVs\u
hu=Dph>\/mg]%lig&DWefDc?af)H3^eGfpZdf0[Vd/OCQcMn.NbPqeJa8Z>E`;]uA_Z'`>^Ae99]Dhm4
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.63301e-15 108.325 -108.325 6.63301e-15 246.388 126.631 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~]">Vg]tV7s_8=(,_o0O6`lH0Bb0/#Qc-FV\cd:%ddF-Ile'umte^i=&f%8O+f\+s3g=tB;gtgfChV[5K
i8ESQio9"Yj5]4]jlPXek2tjikND'mkih9qlK[^$lg*p(m-O-,mHs?0mdBQ4n*fc8nF5u<naZ2@o()DD
oCMSGo^qeKp%A"Np%A"Op@e4Rp@e4Sp\4FWq"XX[q>'j^q>'j_qYL'bqYL'bqYL'cqtp9fqtp9fqtp9g
r;?Kjr;?Kjr;?KjrVc]nrVc]nrVc]nrVc]nrr2ors8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
255 <~!!**%!WrN,!sA`0"9er4"U5/8"pYA<#7(S@#RLeE$4@4L$OdFQ%1WjX%M'']&.oKd&J>]i',2,p'GV>u
()@]&(Ddo*)&X>2)B'P6)]Kb:*#oq<*#ot>*??1B*ZcCF+!2RH+!2UJ+<VgN+X&!P+X&$R+sJ6V,9nHZ
,U=W\,U=W],pai`,paia-71&e-RU8i-n$Jl-n$Jm.4H\p.4H\q.Olnt.Olnu.k<,$/1`>'/1`>(/M/P+
/M/P+/M/P+/M/P+/M/P+/M/P+/hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb/
~>
<~zzzzzzz!!**$!<N<(!WiE)!WrN,!s8W-!sA`0"9\i1"9\i1"9er4"U,&5"U,&5"U,&5"U,)7"pP;;#6t
M?#RC\A#RC_C#mgqG$47+I$47.K$O[@O$k*OQ$k*RS%1NaU%1NaU%1NaV%LrsY%LrsZ%hB0]%hB0]%hB
0^&.fBa&.fBa&.fBb&J5Te&J5Te&J5Tf&eYfi&eYfi&eYfi&eYfj',)#m',)#m',)#m',)#m'GM5q'GM
5q'GM5q'GM5q'GM5q'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
295.62 240.841 mo
296.416 252.036 295.122 264.264 293.393 277.026 cv
290.371 299.578 286.029 323.834 289.736 347.133 cv
277.633 349.608 264.634 351.523 249.944 351.523 cv
235.253 351.523 222.267 349.608 210.164 347.133 cv
213.871 323.834 209.529 299.578 206.507 277.026 cv
204.777 264.264 203.484 252.036 204.28 240.841 cv
205.673 221.337 219.518 213.139 230.253 209.706 cv
231.919 209.171 233.524 208.749 234.979 208.425 cv
235.191 212.53 237.069 222.121 249.944 222.133 cv
249.956 222.133 li
262.831 222.121 264.709 212.53 264.92 208.425 cv
266.375 208.749 267.98 209.171 269.647 209.706 cv
280.382 213.139 294.227 221.337 295.62 240.841 cv
cp
level3{
gsave
clp
[9.74487e-15 159.146 -159.146 9.74487e-15 249.95 195.67 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.74487e-15 159.146 -159.146 9.74487e-15 249.95 195.67 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
289.736 347.133 mo
311.504 342.692 330.424 336.485 351.247 336.447 cv
334.504 337.331 304.875 349.695 249.956 380.271 cv
195 349.683 165.383 337.318 148.628 336.447 cv
169.463 336.473 188.396 342.692 210.164 347.133 cv
222.267 349.608 235.253 351.523 249.944 351.523 cv
264.634 351.523 277.633 349.608 289.736 347.133 cv
cp
level3{
gsave
clp
[2.68337e-15 43.8227 -43.8227 2.68337e-15 249.937 313.931 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.68337e-15 43.8227 -43.8227 2.68337e-15 249.937 313.931 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
284.856 404.85 mo
284.171 407.364 282.188 409.349 277.489 408.581 cv
276.958 408.486 276.674 408.415 276.674 408.415 cv
276.674 408.415 265.529 405.7 249.944 401.769 cv
242.068 399.772 233.072 397.482 223.827 395.086 cv
210.804 391.709 197.25 388.107 185.585 384.825 cv
174.274 381.673 164.734 378.792 159.149 376.738 cv
135.642 368.06 124.083 354.848 130.282 344.813 cv
133.352 339.842 137.85 336.771 145.335 336.43 cv
146.386 336.56 147.378 336.56 148.311 336.453 cv
148.629 336.453 li
159.527 337.008 175.856 342.439 201.075 354.588 cv
214.629 361.117 230.746 369.571 249.956 380.269 cv
258.09 384.802 266.792 389.737 276.084 395.086 cv
277.713 396.03 279.366 396.975 281.031 397.943 cv
281.031 397.943 286.013 400.635 284.856 404.85 cv
cp
0 .253727 .273594 0 cmyk
f
265.057 159.552 mo
267.931 162.985 269.647 167.737 269.647 173.745 cv
269.647 184.281 264.36 195.601 256.922 200.166 cv
254.758 201.509 252.407 202.268 249.944 202.268 cv
247.493 202.268 245.142 201.509 242.978 200.166 cv
236.945 196.471 232.33 188.324 230.8 179.753 cv
230.8 179.741 li
230.763 174.84 232.666 170.834 237.268 170.934 cv
248.812 171.17 249.832 165.46 252.481 161.916 cv
254.758 158.88 260.691 156.828 265.057 159.552 cv
cp
f
264.915 208.42 mo
264.714 212.529 262.825 222.116 249.956 222.128 cv
249.944 222.128 li
237.074 222.116 235.185 212.529 234.984 208.42 cv
239.672 207.37 242.978 207.24 242.978 207.24 cv
242.978 200.167 li
245.138 201.513 247.488 202.269 249.944 202.269 cv
252.411 202.269 254.761 201.513 256.921 200.167 cv
256.921 207.24 li
256.921 207.24 260.228 207.37 264.915 208.42 cv
cp
f
249.944 401.765 mo
234.37 405.695 223.212 408.42 223.212 408.42 cv
223.212 408.42 222.926 408.482 222.404 408.582 cv
217.702 409.353 215.711 407.362 215.027 404.85 cv
213.883 400.633 218.871 397.946 218.871 397.946 cv
220.538 396.976 222.192 396.03 223.822 395.085 cv
233.076 397.486 242.07 399.774 249.944 401.765 cv
cp
.0198062 .341253 .360571 0 cmyk
f
167.784 275.148 mo
167.771 275.136 li
155.519 294.528 144.224 312.365 144.224 312.365 cv
93.811 285.182 li
93.8091 285.174 li
92.2104 283.506 li
89.9741 281.172 86.7832 280.005 83.5688 280.345 cv
74.9019 281.263 li
59.4941 271.087 li
59.2583 270.935 58.981 270.852 58.7178 270.852 cv
58.5513 270.852 58.3848 270.879 58.2188 270.948 cv
57.2759 271.309 56.9985 272.501 57.6919 273.235 cv
74.5498 291.134 li
88.7461 294.267 li
88.7461 294.267 126.026 334.233 145.332 336.436 cv
146.302 336.386 147.309 336.386 148.379 336.436 cv
161.863 334.682 181.964 302.353 189.216 289.963 cv
167.784 275.148 li
cp
0 .253727 .273594 0 cmyk
f
148.479 336.447 mo
148.329 336.447 li
148.379 336.436 li
148.479 336.447 li
cp
.749721 .679194 .670497 .901457 cmyk
f
148.379 336.436 mo
148.329 336.447 li
148.317 336.447 li
147.384 336.56 146.389 336.56 145.332 336.436 cv
146.302 336.386 147.309 336.386 148.379 336.436 cv
cp
f
340.738 376.738 mo
335.153 378.792 325.613 381.661 314.314 384.825 cv
313.783 365.592 303.216 357.233 298.824 354.588 cv
324.02 342.451 340.36 337.02 351.246 336.453 cv
351.577 336.453 li
352.509 336.56 353.513 336.56 354.563 336.43 cv
362.049 336.771 366.547 339.842 369.617 344.813 cv
375.816 354.848 364.245 368.06 340.738 376.738 cv
cp
level3{
gsave
clp
[2.9634e-15 48.396 -48.396 2.9634e-15 335.048 336.429 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.9634e-15 48.396 -48.396 2.9634e-15 335.048 336.429 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
201.075 354.588 mo
196.683 357.233 186.116 365.592 185.585 384.825 cv
174.274 381.673 164.734 378.792 159.149 376.738 cv
135.642 368.06 124.083 354.848 130.282 344.813 cv
133.352 339.842 137.85 336.771 145.335 336.43 cv
146.386 336.56 147.378 336.56 148.311 336.453 cv
148.629 336.453 li
159.527 337.008 175.856 342.439 201.075 354.588 cv
cp
level3{
gsave
clp
[2.9634e-15 48.396 -48.396 2.9634e-15 164.851 336.429 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.9634e-15 48.396 -48.396 2.9634e-15 164.851 336.429 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
146.629 307.872 mo
168.062 322.687 li
206.507 277.026 li
204.777 264.264 203.484 252.036 204.28 240.841 cv
205.673 221.337 219.518 213.139 230.253 209.706 cv
230.253 209.706 208.783 213.662 198.073 227.37 cv
197.414 228.203 196.792 229.074 196.232 229.982 cv
191.48 237.62 179.203 257.062 146.629 307.872 cv
cp
level3{
gsave
clp
[5.49753e-15 89.7814 -89.7814 5.49753e-15 188.441 200.546 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.49753e-15 89.7814 -89.7814 5.49753e-15 188.441 200.546 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
256.921 200.167 mo
256.921 202.824 li
254.761 204.17 252.411 204.925 249.944 204.925 cv
247.488 204.925 245.138 204.17 242.978 202.824 cv
242.978 200.167 li
245.138 201.513 247.488 202.269 249.944 202.269 cv
252.411 202.269 254.761 201.513 256.921 200.167 cv
cp
.0181888 .360967 .380652 0 cmyk
f
353.56 103.739 mo
269.37 103.739 li
266.155 103.739 263.525 101.109 263.525 97.894 cv
263.525 94.6787 266.155 92.0483 269.37 92.0483 cv
276.149 92.0483 li
276.395 89.1299 278.855 86.8164 281.835 86.8164 cv
287.223 86.8164 li
287.51 83.334 290.448 80.5728 294 80.5728 cv
318.844 80.5728 li
322.397 80.5728 325.335 83.334 325.622 86.8164 cv
337.983 86.8164 li
340.962 86.8164 343.423 89.1299 343.668 92.0483 cv
353.56 92.0483 li
356.775 92.0483 359.406 94.6787 359.406 97.894 cv
359.406 101.109 356.775 103.739 353.56 103.739 cv
level3{
gsave
clp
[1.89775e-14 309.926 -309.926 1.89775e-14 249.944 58.946 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~"X9W?"=0Z@"=BcA"=]uD"=]oB"=fuC"=p#C">-/E!\g#B!]$/D!]$)B!Ag&B!B$,B!B?;D!BHAE!BH;C
!BQAD!BlME!BuPE!'lSF!'uVF!'uPD!(DhH!(VqI!(i%J!(r%I!)&+J!)84K!)A4J!)S=K!)eFL!)nLM
!*"LL!*+OL!*=RK!*FXL!*X[K!*a^K!*sjM!+'jL!+9sM!+BsL!+^*M!+^*M!+g-M!+p-L!,-6M!,H?M
!,QBM!,ZEM!,cHM!,uQN!-2TM!-;ZN!-;TL!-M]M!-hiN!.%rO!..rN!.A)P!.A#N!.\/O!.e/N!.n2N
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!.n2N!/"2M!/+,J!/4#F!/<uD!Jj&B"Gf5A#DbMC$&L\C%?!(D&r\UH'9+XF(l^!F*/u?H*fhQH+cm`F
-'9,H.$>AH/!1JF/s?kI0U*"H1mJ=H2O4OI3gTmJ4dQ-K5a_TP7%+)U8=KSZ9:>h\:n.Lc<1O!h=.K<k
>Ftlq?Cq2t@\<]$B;#;*D5%"1E2*C5G,#$;H_^WAJ#*,FKVe_LMPpLTN2Q^VO/W*ZPcFcaQ`L/eS#cSi
SuhtmTrn@qUoj[tVQKn!WNZ@&XKV[)Xfh^)Ycn*-Z*=9/['9T2[B]c4\$>u6\Zu28]!;;9]X%S<^9[e>
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.37076 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.89775e-14 309.926 -309.926 1.89775e-14 249.944 58.946 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~"9\f/!s8W-!s8W-!W`<&!<<*"zzzzzzzzzzzzzzzzzzzzzz!<N?+"pYA=#n%1Q&J>]h'G_N()]Tk>+!;
aP,pjuf.4Zr$/h\k41GgsH2`Ni[4?Yno5sn%084cEH9i"Vb<)lt$=^,-:?XR>RAnYprDJsN9Fa&+XI=?
]uKSG>@Mi<XUOHPinQC"#.S=Q7DTV8-VUnsrdWN*##XKAY/Yct@;Za@*H[C3QR\@K/]]">Vg~>
<~+X86Y-R^Al.Olu$0/5191,CaF3&ilX3BKAe5<qJ!5t"1484cEG9MJ5W:f1+h;cHat='/U/>?kH??XR;P
@q9+]AnPgnCM[j)DK'T9EcQ5DGBeF[H[L3iJ:N3&JqAW-K7no3KnY8:LPLY?LPUbBM2I4LMi<URN/W^S
N/`jYO,oBaOcbcgOcbchPEV2pPa.N!QBmi&QC!u,R@0M4R[T\6S"#q<S=H+?St;OFT:_dLTV8'RU8"BV
U8+KZUnji`VP^8hVl6PmWN*#"X/i;%XK8P+Xf\_-Xf\b0YHP.5YHP.5Yct@9Yd(I<Z*CR=Z*CR>ZEgdA
~>
<~TV.sNT:_^GSXl:?R@'A.QBmf#PEV/lOcYWbNfK-YMi3LNMMR%CLPCM9K7ec-JUi5uI!g6cG^+IVG'.kH
EH,u;DJj9*C2%?pB4b[a@q&kS?X@#C>?b96=&r=#<)Z[k:JFJR84Q*95sIOr4Zkee3&WTM1GUX;/Lr7u
-mg5b+<DOB)As>,'G;#j&.T-W#mUY="9SZ*zzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
174.374 167.303 mo
134.207 167.303 li
131.141 167.303 128.633 164.794 128.633 161.728 cv
128.633 158.663 131.141 156.155 134.207 156.155 cv
137.205 156.155 li
137.196 156.024 137.19 155.893 137.19 155.76 cv
137.19 152.478 139.876 149.792 143.159 149.792 cv
149.02 149.792 li
149.014 149.529 li
149.014 146.102 151.818 143.297 155.245 143.297 cv
156.462 143.297 li
159.889 143.297 162.693 146.102 162.693 149.529 cv
162.687 149.792 li
167.359 149.792 li
170.642 149.792 173.328 152.478 173.328 155.76 cv
173.328 155.893 173.322 156.024 173.313 156.155 cv
174.374 156.155 li
177.439 156.155 179.948 158.663 179.948 161.728 cv
179.948 164.794 177.439 167.303 174.374 167.303 cv
level3{
gsave
clp
[1.89775e-14 309.926 -309.926 1.89775e-14 249.944 58.946 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.89775e-14 309.926 -309.926 1.89775e-14 249.944 58.946 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
184.226 121.416 mo
183.314 119.055 li
180.953 118.143 li
183.314 117.23 li
184.226 114.87 li
185.138 117.23 li
187.499 118.143 li
185.138 119.055 li
184.226 121.416 li
level3{
gsave
clp
[1.89775e-14 309.926 -309.926 1.89775e-14 249.944 58.946 ]ct
/9 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!=:%P!=:%P!=C"N!=C"N!=C"N!=U+O!=U+O!=U+O!"C(O!"C(O!"C(O!"U1P!"U.O!"g7P!"g7P!"g7P
!"g7P!"p:P!"p:P!"p:P!#-FR!#-CQ!#?LR!#?LR!#?LR!#?LR!#HRS!#HRS!#Z[T!#Z[T!#Z[T!#Z[T
!#c[S!#c[S!#l^S!#l^S!#l^S!#uaS!#uaS!#uaS!$;pU!$;jS!$;jS!$DpT!$DpT!$DpT!$MsT!$MsT
!$MsT!$`'U!$`'U!$`'U!$i'T!$i'T!$i'T!%&0U!%&0U!%&0U!%/3U!%/3U!%/-S!%A6T!%A6T!%A6T
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!%A6T!%A3S!%A3S!%J6S!%J3R!@e<S!\+?R""FHS"=aQT"Y'WT"tB`U#:]fU#V#lU#q>uV#qH#V$7c,W
$Ru,V$nD;X%4_DY%P.S[%k@V[&1[_\&M*n^&h<q^'.X%_'J'4a(+T@b(FoIc(b>Xe)(P[e)Ckdf)_:sh
*%M!h*@q0j*\.3j+"I<k+=mKm+Y3Tn+tEWn,:ifp,V/oq,qArq-7f,s-S,5t-nPE!.4kN".4bH!.P1W#
.kL`$/hR,(0.m5)0.d/(0eNG+1+iP,1G/Y-1G8_.1bSh/2(ek/2_P.22_P.23%k733A:F53\LI54#$^8
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.37076 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.89775e-14 309.926 -309.926 1.89775e-14 249.944 58.946 ]ct
clp
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3&!WrN,"9\l3"U5/8#6tM?#RC\B#mgqG$O[=N$k3XT%LrsZ%hK
9`&J5Wg&ebom'GVB!(Ddl)(`4,.)B'M5)]Th;*??1B*ZlIH+<VgN+X/*T,9nHZ,paia-7:/g-n$Jl-n-
So.Olr"/M8Y./hSe20ekC<1,:U?1G^gD1c70L2E!KQ2`NcW3B9,]~>
<~#RC_C#mgnG$O[=N$k*OQ%Lrs[&.fBa&.oKd&J>`j'GV>t'bqK"()If)(`4)-)&X>2)B'M5)]K_9*Zc@D
+!2RH+<VdL+<_pQ+sS<W,9nH[,palb-71&e-n$Jl-n$Jl-n-So.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p
.4Qes.Olnt.Olnt.P!#".k<,".P!#".k<)!.P!#".k<)!.k<,#.k<)!.k<,#.k<,#.k<)!.P!#".k<,#
.k<,#.k<,#.k<,#.kE5&/1`>'/1`>'/1`A)/M/P+/M/P+/M/P+/M8Y./hSb//hSb//hSb//h\k20/"t4
~>
<~,U=WZ+X&!P+<VdL+<VdL+<M[H*??.@*??+>*#oq<)]K\6)B'M4)B'M3)&X;0(`*u)()@Z$'bqGu'bh8n
&eYfi&eYcg&J5Qc&.f?^%LrsX%1NaU$k*LN#mgnE#mgkC#RC\@#6tG;"pG/5"9\i1"9\f/!s8W-!WiB'
!<E3$zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /9 /Gradient get_res exec grestore
}if
np
278.891 73.0879 mo
277.979 70.7265 li
275.618 69.8149 li
277.979 68.9028 li
278.891 66.5415 li
279.803 68.9028 li
282.164 69.8149 li
279.803 70.7265 li
278.891 73.0879 li
level3{
gsave
clp
[1.89775e-14 309.926 -309.926 1.89775e-14 249.944 58.946 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.89775e-14 309.926 -309.926 1.89775e-14 249.944 58.946 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
201.953 79.5566 mo
201.37 78.0474 li
199.861 77.4643 li
201.37 76.8809 li
201.953 75.3716 li
202.536 76.8809 li
204.046 77.4643 li
202.536 78.0474 li
201.953 79.5566 li
level3{
gsave
clp
[1.89775e-14 309.926 -309.926 1.89775e-14 249.944 58.946 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.89775e-14 309.926 -309.926 1.89775e-14 249.944 58.946 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
339.953 125.007 mo
339.37 123.497 li
337.861 122.914 li
339.37 122.331 li
339.953 120.821 li
340.536 122.331 li
342.046 122.914 li
340.536 123.497 li
339.953 125.007 li
level3{
gsave
clp
[1.89775e-14 309.926 -309.926 1.89775e-14 249.944 58.946 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.89775e-14 309.926 -309.926 1.89775e-14 249.944 58.946 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
141.283 112.411 mo
140.7 110.901 li
139.19 110.318 li
140.7 109.735 li
141.283 108.226 li
141.866 109.735 li
143.375 110.318 li
141.866 110.901 li
141.283 112.411 li
level3{
gsave
clp
[1.89775e-14 309.926 -309.926 1.89775e-14 249.944 58.946 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.89775e-14 309.926 -309.926 1.89775e-14 249.944 58.946 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
366.477 92.1557 mo
365.893 90.6464 li
364.384 90.0635 li
365.893 89.4805 li
366.477 87.9707 li
367.06 89.4805 li
368.569 90.0635 li
367.06 90.6464 li
366.477 92.1557 li
level3{
gsave
clp
[1.89775e-14 309.926 -309.926 1.89775e-14 249.944 58.946 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.89775e-14 309.926 -309.926 1.89775e-14 249.944 58.946 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
375.179 402.498 mo
375.179 402.498 414.685 400.473 413.829 389.632 cv
413.235 382.126 393.074 385.748 393.049 385.69 cv
393.049 385.69 420.878 368.232 409.501 358.849 cv
400.432 352.164 382.062 372.192 381.985 372.137 cv
381.985 372.137 387.646 355.833 379.433 354.211 cv
367.539 351.861 361.492 381.53 361.492 381.53 cv
361.492 381.53 363.031 363.311 353.581 364.49 cv
341.175 366.04 336.632 392.688 336.632 392.688 cv
336.632 392.688 327.438 370.84 318.706 383.4 cv
312.269 392.659 309.12 404.908 310.368 416.272 cv
314.662 428.451 345.849 443.351 354.602 432.117 cv
359.984 425.21 346.665 416.906 346.665 416.906 cv
357.444 421.407 382.403 428.907 389.668 416.406 cv
394.892 407.419 375.178 402.505 375.179 402.498 cv
cp
level3{
gsave
clp
[57.2652 -89.0341 89.0341 57.2652 334.611 436.53 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[57.2652 -89.0341 89.0341 57.2652 334.611 436.53 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
333.418 422.219 mo
331.18 420.936 329.098 419.477 327.176 417.918 cv
325.69 416.713 324.347 415.384 323.115 413.995 cv
332.121 410.983 340.922 407.363 349.439 403.164 cv
351.45 404.766 353.597 406.27 355.893 407.526 cv
358.417 408.907 361.202 410.119 364.086 411.066 cv
366.969 412.013 370.029 412.712 373.197 413.143 cv
376.363 413.573 379.646 413.766 383.027 413.556 cv
379.673 413.656 376.443 413.355 373.341 412.825 cv
370.238 412.293 367.258 411.499 364.467 410.47 cv
361.674 409.439 358.995 408.154 356.582 406.717 cv
354.508 405.48 352.569 404.034 350.764 402.506 cv
357.339 399.253 363.856 395.54 370.008 391.544 cv
372.697 392.42 375.462 393.174 378.391 393.531 cv
379.892 393.787 381.464 393.849 383.012 393.973 cv
384.59 393.998 386.177 394.041 387.77 393.959 cv
390.933 393.796 394.23 393.428 397.502 392.743 cv
400.771 392.06 404.067 391.129 407.308 389.839 cv
404.052 391.024 400.765 391.844 397.518 392.418 cv
394.269 392.992 391.013 393.248 387.907 393.307 cv
386.345 393.337 384.79 393.242 383.25 393.167 cv
381.739 392.993 380.208 392.885 378.753 392.584 cv
376.18 392.183 373.757 391.462 371.41 390.636 cv
383.304 382.544 394.164 373.752 404.56 363.796 cv
393.914 373.45 382.837 381.931 370.743 389.679 cv
370.882 387.291 371.096 384.894 371.479 382.494 cv
371.918 379.732 372.426 376.963 373.054 374.231 cv
373.681 371.503 374.349 368.763 375.084 366.064 cv
375.819 363.366 376.591 360.682 377.457 358.038 cv
376.493 360.655 375.619 363.321 374.779 366.006 cv
373.939 368.69 373.163 371.424 372.423 374.156 cv
371.683 376.892 371.057 379.677 370.495 382.47 cv
369.957 385.139 369.613 387.828 369.354 390.525 cv
363.094 394.353 356.473 397.884 349.808 400.95 cv
349.384 398.72 349.164 396.397 349.21 394.09 cv
349.264 391.418 349.546 388.661 349.979 385.971 cv
350.413 383.278 350.983 380.572 351.636 377.914 cv
352.289 375.255 353.009 372.609 353.858 370.019 cv
352.911 372.582 352.089 375.209 351.33 377.857 cv
350.571 380.507 349.888 383.212 349.337 385.922 cv
348.788 388.629 348.38 391.422 348.204 394.161 cv
348.045 396.612 348.166 399.11 348.524 401.544 cv
340.01 405.449 331.233 408.779 322.271 411.505 cv
322.413 409.396 322.624 407.279 322.962 405.169 cv
323.385 402.527 323.876 399.873 324.476 397.254 cv
325.076 394.637 325.716 392.01 326.421 389.419 cv
327.125 386.828 327.864 384.248 328.686 381.706 cv
327.767 384.22 326.924 386.778 326.113 389.354 cv
325.302 391.929 324.549 394.546 323.833 397.161 cv
323.116 399.779 322.5 402.442 321.949 405.107 cv
321.482 407.361 321.155 409.637 320.897 411.918 cv
310.375 415.098 299.537 417.288 288.652 418.761 cv
288.864 420.172 288.97 420.877 289.183 422.289 cv
300.195 420.494 311.14 417.974 321.735 414.45 cv
323.151 415.948 324.687 417.363 326.377 418.62 cv
328.418 420.135 330.608 421.533 332.944 422.745 cv
335.276 423.955 337.731 425.052 340.287 425.984 cv
342.843 426.917 345.501 427.721 348.269 428.324 cv
345.559 427.62 342.973 426.721 340.496 425.699 cv
338.019 424.679 335.653 423.5 333.418 422.219 cv
cp
0 0 0 0 cmyk
f
199.975 423.682 mo
199.525 421.294 197.205 419.858 196.959 419.708 cv
199.013 419.199 200.175 417.418 199.89 415.446 cv
199.597 413.42 197.885 411.646 195.706 411.104 cv
197.255 409.551 197.693 407.282 196.917 405.246 cv
195.938 402.677 193.201 400.83 190.15 400.809 cv
192.162 396.435 191.23 391.302 188.138 387.877 cv
184.201 383.517 178.372 383.939 178.018 383.966 cv
178.287 380.409 176.32 377.113 173.215 375.741 cv
170.526 374.553 167.313 374.961 165.077 376.942 cv
165.679 372.914 163.863 368.971 160.65 367.015 cv
156.835 364.69 152.813 366.396 152.548 366.517 cv
152.037 361.497 149.301 357.022 145.212 354.613 cv
140.559 351.87 136.09 353.178 135.397 353.407 cv
135.231 352.912 133.862 348.854 130.208 346.838 cv
127.055 345.1 121.33 345.643 119.979 349.44 cv
117.726 348.934 113.312 350.035 111.706 353.278 cv
110.319 356.078 110.649 360.191 112.606 363.779 cv
107.902 364.754 105.41 370.209 107.196 376.472 cv
108.848 382.266 113.826 387.208 118.788 388.061 cv
118.474 388.448 115.938 391.671 117.753 397.163 cv
119.196 401.529 122.914 405.515 127.083 407.196 cv
126.909 407.692 125.443 412.111 128.994 417.567 cv
131.813 421.898 136.703 424.99 141.18 425.365 cv
141.871 429.757 145.266 434.42 149.893 437.134 cv
154.962 440.106 160.511 440.194 163.677 437.618 cv
165.223 441.444 169.807 444.385 173.487 444.275 cv
176.512 444.187 178.461 442.119 178.288 439.279 cv
180.788 441.762 184.558 442.798 187.072 441.855 cv
189.145 441.078 190.083 439.107 189.587 436.876 cv
191.353 437.889 193.387 438.14 194.791 437.505 cv
196.649 436.663 198.463 432.744 196.82 429.647 cv
199.069 428.941 200.358 425.713 199.975 423.682 cv
cp
level3{
gsave
clp
[6.02441e-15 -98.386 98.386 6.02441e-15 153.329 444.279 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.02441e-15 -98.386 98.386 6.02441e-15 153.329 444.279 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
182.481 406.746 mo
182.385 409.131 182.254 411.563 181.986 413.942 cv
181.899 415.143 181.715 416.333 181.575 417.508 cv
181.485 418.254 181.354 419.011 181.236 419.76 cv
174.454 415.546 171.195 413.224 165.003 408.2 cv
165.219 407.241 165.465 406.277 165.653 405.328 cv
165.888 404.146 166.152 402.928 166.359 401.741 cv
166.771 399.384 167.188 396.906 167.505 394.511 cv
167.823 392.108 168.069 389.654 168.239 387.229 cv
168.408 384.805 168.532 382.371 168.444 379.945 cv
168.447 382.364 168.235 384.778 167.978 387.176 cv
167.72 389.574 167.381 391.994 166.971 394.354 cv
166.562 396.708 166.047 399.133 165.54 401.436 cv
165.284 402.593 164.969 403.782 164.686 404.932 cv
164.486 405.744 164.236 406.568 164.008 407.386 cv
158.388 402.751 155.705 400.268 150.64 395.01 cv
151.035 393.146 151.412 391.268 151.732 389.397 cv
152.076 387.396 152.371 385.336 152.634 383.307 cv
152.898 381.274 153.099 379.22 153.265 377.182 cv
153.431 375.143 153.563 373.095 153.578 371.046 cv
153.477 373.081 153.258 375.104 153.004 377.114 cv
152.75 379.123 152.459 381.143 152.105 383.132 cv
151.751 385.119 151.363 387.128 150.928 389.074 cv
150.557 390.729 150.14 392.389 149.701 394.026 cv
143.489 387.466 140.599 383.95 135.34 376.521 cv
136.333 373.378 137.162 370.154 137.833 366.882 cv
138.517 363.544 139.459 356.766 139.459 356.766 cv
139.458 356.766 138.347 363.48 137.577 366.77 cv
136.845 369.895 135.959 372.959 134.927 375.935 cv
129.389 368.035 126.893 363.847 122.555 355.078 cv
125.168 360.679 126.607 363.406 129.723 368.691 cv
127.165 369.226 124.488 369.448 121.758 369.405 cv
118.937 369.361 113.143 368.491 113.143 368.491 cv
113.143 368.491 118.967 369.574 121.819 369.719 cv
124.627 369.86 127.391 369.727 130.055 369.253 cv
134.86 377.329 137.558 381.182 143.452 388.429 cv
141.973 388.922 140.459 389.36 138.902 389.693 cv
137.132 390.071 135.315 390.379 133.467 390.574 cv
129.772 390.963 125.938 391.044 122.006 390.683 cv
125.983 391.256 129.885 391.38 133.667 391.179 cv
135.56 391.078 137.426 390.861 139.253 390.567 cv
140.963 390.292 142.632 389.893 144.27 389.427 cv
149.189 395.377 151.83 398.205 157.422 403.518 cv
154.086 405.788 150.293 407.546 146.271 408.853 cv
141.976 410.248 137.397 411.214 132.59 411.623 cv
137.482 411.422 142.169 410.649 146.59 409.422 cv
150.79 408.256 154.772 406.609 158.328 404.371 cv
164.071 409.743 167.113 412.261 173.488 416.903 cv
172.058 418.033 170.565 419.118 168.99 420.084 cv
167.107 421.239 165.115 422.333 163.039 423.28 cv
158.89 425.174 154.409 426.687 149.588 427.58 cv
154.516 426.883 159.129 425.549 163.423 423.807 cv
165.573 422.936 167.644 421.911 169.608 420.816 cv
171.316 419.863 172.938 418.775 174.499 417.634 cv
187.31 426.655 200.819 433.23 215.393 438.816 cv
215.764 437.695 215.95 437.135 216.321 436.014 cv
204.441 431.765 193.121 427.021 182.316 420.426 cv
182.41 419.545 182.524 418.656 182.587 417.782 cv
182.675 416.58 182.806 415.365 182.841 414.142 cv
183.005 411.717 183.033 409.246 183.032 406.831 cv
183.031 404.409 182.933 401.944 182.769 399.521 cv
182.605 397.098 182.389 394.671 181.972 392.283 cv
182.303 394.677 182.43 397.095 182.503 399.503 cv
182.575 401.912 182.577 404.355 182.481 406.746 cv
cp
0 0 0 0 cmyk
f
260.104 467.948 mo
259.672 468.392 259.301 468.88 258.996 469.401 cv
258.53 469.161 li
258.463 468.863 258.181 468.658 257.872 468.694 cv
257.541 468.733 257.304 469.033 257.343 469.364 cv
257.382 469.695 257.682 469.932 258.013 469.894 cv
258.196 469.841 li
258.647 470.075 li
258.396 470.629 258.215 471.214 258.108 471.819 cv
258.854 471.95 li
259.085 470.645 259.705 469.444 260.646 468.478 cv
260.104 467.948 li
cp
.35877 .201297 .147463 0 cmyk
f
265.592 465.646 mo
265.421 465.646 265.251 465.652 265.082 465.664 cv
265.008 465.037 li
265.196 464.889 265.304 464.648 265.274 464.393 cv
265.228 464 264.872 463.719 264.479 463.765 cv
264.086 463.812 263.805 464.167 263.851 464.561 cv
263.881 464.814 264.041 465.021 264.255 465.124 cv
264.329 465.748 li
263.615 465.864 262.926 466.08 262.27 466.395 cv
262.596 467.078 li
263.53 466.631 264.538 466.404 265.592 466.404 cv
266.088 466.404 266.584 466.458 267.067 466.563 cv
267.228 465.821 li
266.692 465.705 266.142 465.646 265.592 465.646 cv
cp
f
272.194 468.194 mo
272.525 468.153 272.76 467.853 272.72 467.521 cv
272.679 467.19 272.378 466.955 272.047 466.996 cv
271.738 467.034 271.512 467.3 271.518 467.604 cv
271.102 467.968 li
270.684 467.538 270.212 467.155 269.694 466.829 cv
269.29 467.47 li
270.424 468.185 271.31 469.196 271.853 470.396 cv
272.543 470.083 li
272.293 469.528 271.976 469.011 271.602 468.538 cv
272.004 468.187 li
272.194 468.194 li
cp
f
265.044 475.855 mo
264.658 475.878 264.269 475.89 263.887 475.89 cv
263.007 475.89 262.154 475.829 261.409 475.711 cv
261.018 475.648 260.563 475.556 260.138 475.419 cv
261.185 477.279 263.208 478.544 265.527 478.544 cv
268.382 478.544 270.789 476.628 271.477 474.04 cv
270.795 474.489 269.971 474.865 269.018 475.162 cv
267.839 475.53 266.463 475.77 265.044 475.855 cv
cp
f
268.17 472.77 mo
267.42 472.77 266.81 472.159 266.81 471.409 cv
266.81 470.659 267.42 470.049 268.17 470.049 cv
268.92 470.049 269.53 470.659 269.53 471.409 cv
269.53 472.159 268.92 472.77 268.17 472.77 cv
cp
263.433 473.678 mo
262.413 473.678 261.583 472.848 261.583 471.828 cv
261.583 470.808 262.413 469.979 263.433 469.979 cv
264.452 469.979 265.282 470.808 265.282 471.828 cv
265.282 472.848 264.452 473.678 263.433 473.678 cv
cp
265.592 467.163 mo
262.239 467.163 259.512 469.829 259.512 473.106 cv
259.512 473.532 259.558 473.955 259.649 474.368 cv
260.323 474.851 262.355 475.258 264.997 475.099 cv
267.876 474.926 270.293 474.142 271.669 472.94 cv
271.664 472.745 271.648 472.55 271.624 472.358 cv
271.244 469.396 268.65 467.163 265.592 467.163 cv
cp
f
281.595 469.03 mo
281.3 468.914 280.79 468.721 280.213 468.793 cv
279.662 468.861 279.369 469.133 279.369 469.799 cv
279.369 470.665 li
281.597 470.665 li
281.597 472.383 li
279.369 472.383 li
279.369 477.837 li
277.438 477.837 li
277.438 472.383 li
276.098 472.383 li
276.098 470.665 li
277.438 470.665 li
277.438 469.777 li
277.438 468.097 278.333 466.994 280.006 466.994 cv
280.648 466.994 281.163 467.116 281.596 467.303 cv
281.595 469.03 li
cp
f
286.298 472.362 mo
286.121 472.332 285.94 472.315 285.771 472.315 cv
284.876 472.315 284.262 472.863 284.262 473.93 cv
284.262 477.837 li
282.33 477.837 li
282.33 470.665 li
284.203 470.665 li
284.203 471.45 li
284.654 470.776 285.342 470.473 286.223 470.473 cv
286.638 470.473 287.071 470.601 287.317 470.81 cv
286.298 472.362 li
cp
f
288.851 473.574 mo
292.026 473.574 li
291.848 472.656 291.293 472.138 290.464 472.138 cv
289.554 472.138 289.021 472.686 288.851 473.574 cv
cp
293.965 474.24 mo
293.965 474.462 293.95 474.729 293.928 474.892 cv
288.843 474.892 li
289.05 475.928 289.776 476.379 290.686 476.379 cv
291.308 476.379 291.981 476.128 292.5 475.69 cv
293.632 476.935 li
292.818 477.682 291.782 478.022 290.575 478.022 cv
288.377 478.022 286.853 476.527 286.853 474.27 cv
286.853 472.013 288.333 470.473 290.479 470.473 cv
292.544 470.473 293.958 472.005 293.965 474.24 cv
cp
f
296.504 473.574 mo
299.679 473.574 li
299.501 472.656 298.946 472.138 298.118 472.138 cv
297.207 472.138 296.674 472.686 296.504 473.574 cv
cp
301.618 474.24 mo
301.618 474.462 301.604 474.729 301.582 474.892 cv
296.497 474.892 li
296.704 475.928 297.429 476.379 298.339 476.379 cv
298.961 476.379 299.635 476.128 300.153 475.69 cv
301.285 476.935 li
300.471 477.682 299.435 478.022 298.229 478.022 cv
296.03 478.022 294.506 476.527 294.506 474.27 cv
294.506 472.013 295.986 470.473 298.132 470.473 cv
300.197 470.473 301.611 472.005 301.618 474.24 cv
cp
f
304.287 474.248 mo
304.287 475.38 305.035 476.224 306.13 476.224 cv
307.27 476.224 307.98 475.343 307.98 474.248 cv
307.98 473.152 307.27 472.271 306.13 472.271 cv
305.035 472.271 304.287 473.115 304.287 474.248 cv
cp
309.964 474.248 mo
309.964 476.401 308.469 478.022 306.493 478.022 cv
305.53 478.022 304.85 477.645 304.383 477.09 cv
304.383 480.798 li
302.459 480.798 li
302.459 470.665 li
304.346 470.665 li
304.346 471.457 li
304.813 470.872 305.501 470.473 306.485 470.473 cv
308.469 470.473 309.964 472.094 309.964 474.248 cv
cp
f
312.809 477.837 mo
310.876 477.837 li
310.876 470.665 li
312.809 470.665 li
312.809 477.837 li
cp
313.067 468.319 mo
313.067 469.015 312.527 469.548 311.832 469.548 cv
311.136 469.548 310.603 469.015 310.603 468.319 cv
310.603 467.623 311.136 467.075 311.832 467.075 cv
312.527 467.075 313.067 467.623 313.067 468.319 cv
cp
f
316.032 473.219 mo
318.734 470.665 li
321.102 470.665 li
317.624 474.04 li
321.125 477.837 li
318.749 477.837 li
316.032 474.936 li
316.032 477.837 li
314.101 477.837 li
314.101 467.18 li
316.032 467.18 li
316.032 473.219 li
cp
f
184.412 475.854 mo
184.412 472.646 li
184.017 472.03 183.167 471.503 182.288 471.503 cv
180.868 471.503 180.018 472.675 180.018 474.242 cv
180.018 475.81 180.868 476.967 182.288 476.967 cv
183.167 476.967 184.017 476.469 184.412 475.854 cv
cp
184.412 477.772 mo
184.412 476.718 li
183.885 477.436 183.021 477.948 182.025 477.948 cv
180.179 477.948 178.875 476.542 178.875 474.242 cv
178.875 471.986 180.165 470.521 182.025 470.521 cv
182.977 470.521 183.841 470.99 184.412 471.767 cv
184.412 468.002 li
185.511 468.002 li
185.511 477.772 li
184.412 477.772 li
cp
f
190.403 471.43 mo
188.895 471.43 188.147 472.704 188.089 473.788 cv
192.732 473.788 li
192.718 472.733 192.015 471.43 190.403 471.43 cv
cp
186.932 474.228 mo
186.932 472.177 188.396 470.521 190.418 470.521 cv
192.557 470.521 193.816 472.191 193.816 474.315 cv
193.816 474.594 li
188.089 474.594 li
188.177 475.927 189.114 477.04 190.638 477.04 cv
191.443 477.04 192.264 476.718 192.82 476.146 cv
193.347 476.864 li
192.645 477.567 191.692 477.948 190.535 477.948 cv
188.44 477.948 186.932 476.439 186.932 474.228 cv
cp
f
194.607 476.835 mo
195.178 476.044 li
195.647 476.586 196.541 477.055 197.507 477.055 cv
198.591 477.055 199.177 476.542 199.177 475.839 cv
199.177 474.125 194.797 475.18 194.797 472.558 cv
194.797 471.459 195.75 470.521 197.434 470.521 cv
198.635 470.521 199.485 470.976 200.056 471.547 cv
199.543 472.309 li
199.119 471.796 198.342 471.415 197.434 471.415 cv
196.467 471.415 195.867 471.898 195.867 472.528 cv
195.867 474.081 200.246 473.056 200.246 475.81 cv
200.246 476.996 199.294 477.948 197.463 477.948 cv
196.306 477.948 195.325 477.597 194.607 476.835 cv
cp
f
201.667 477.772 mo
201.667 470.697 li
202.766 470.697 li
202.766 477.772 li
201.667 477.772 li
cp
201.477 468.954 mo
201.477 468.544 201.814 468.207 202.209 468.207 cv
202.619 468.207 202.956 468.544 202.956 468.954 cv
202.956 469.364 202.619 469.687 202.209 469.687 cv
201.814 469.687 201.477 469.364 201.477 468.954 cv
cp
f
209.708 475.736 mo
209.708 472.646 li
209.328 472.03 208.478 471.503 207.599 471.503 cv
206.178 471.503 205.329 472.631 205.329 474.198 cv
205.329 475.751 206.178 476.894 207.599 476.894 cv
208.478 476.894 209.328 476.352 209.708 475.736 cv
cp
204.582 479.589 mo
205.138 478.769 li
205.724 479.472 206.428 479.735 207.438 479.735 cv
208.61 479.735 209.708 479.164 209.708 477.611 cv
209.708 476.601 li
209.196 477.318 208.332 477.86 207.335 477.86 cv
205.49 477.86 204.186 476.483 204.186 474.198 cv
204.186 471.928 205.475 470.521 207.335 470.521 cv
208.288 470.521 209.137 470.99 209.708 471.767 cv
209.708 470.697 li
210.807 470.697 li
210.807 477.567 li
210.807 479.911 209.167 480.644 207.438 480.644 cv
206.237 480.644 205.417 480.409 204.582 479.589 cv
cp
f
217.413 477.772 mo
217.413 473.144 li
217.413 471.898 216.783 471.503 215.832 471.503 cv
214.967 471.503 214.146 472.03 213.737 472.602 cv
213.737 477.772 li
212.638 477.772 li
212.638 470.697 li
213.737 470.697 li
213.737 471.723 li
214.235 471.137 215.201 470.521 216.256 470.521 cv
217.735 470.521 218.512 471.269 218.512 472.807 cv
218.512 477.772 li
217.413 477.772 li
cp
f
223.404 471.43 mo
221.896 471.43 221.148 472.704 221.09 473.788 cv
225.733 473.788 li
225.718 472.733 225.015 471.43 223.404 471.43 cv
cp
219.933 474.228 mo
219.933 472.177 221.397 470.521 223.418 470.521 cv
225.557 470.521 226.817 472.191 226.817 474.315 cv
226.817 474.594 li
221.09 474.594 li
221.178 475.927 222.115 477.04 223.638 477.04 cv
224.444 477.04 225.264 476.718 225.821 476.146 cv
226.348 476.864 li
225.645 477.567 224.693 477.948 223.536 477.948 cv
221.441 477.948 219.933 476.439 219.933 474.228 cv
cp
f
233.35 475.854 mo
233.35 472.646 li
232.954 472.03 232.105 471.503 231.226 471.503 cv
229.805 471.503 228.956 472.675 228.956 474.242 cv
228.956 475.81 229.805 476.967 231.226 476.967 cv
232.105 476.967 232.954 476.469 233.35 475.854 cv
cp
233.35 477.772 mo
233.35 476.718 li
232.823 477.436 231.958 477.948 230.962 477.948 cv
229.117 477.948 227.813 476.542 227.813 474.242 cv
227.813 471.986 229.102 470.521 230.962 470.521 cv
231.914 470.521 232.779 470.99 233.35 471.767 cv
233.35 468.002 li
234.448 468.002 li
234.448 477.772 li
233.35 477.772 li
cp
f
242.9 476.967 mo
244.335 476.967 245.185 475.81 245.185 474.242 cv
245.185 472.675 244.335 471.503 242.9 471.503 cv
242.036 471.503 241.171 472.03 240.791 472.646 cv
240.791 475.854 li
241.171 476.469 242.036 476.967 242.9 476.967 cv
cp
239.692 477.772 mo
239.692 468.002 li
240.791 468.002 li
240.791 471.767 li
241.362 470.99 242.211 470.521 243.178 470.521 cv
245.024 470.521 246.328 471.986 246.328 474.242 cv
246.328 476.542 245.024 477.948 243.178 477.948 cv
242.182 477.948 241.318 477.436 240.791 476.718 cv
240.791 477.772 li
239.692 477.772 li
cp
f
247.528 479.545 mo
247.689 479.618 247.954 479.662 248.129 479.662 cv
248.612 479.662 248.935 479.501 249.184 478.915 cv
249.652 477.846 li
246.693 470.697 li
247.88 470.697 li
250.238 476.498 li
252.582 470.697 li
253.783 470.697 li
250.238 479.208 li
249.813 480.233 249.096 480.629 248.158 480.644 cv
247.924 480.644 247.558 480.6 247.353 480.541 cv
247.528 479.545 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 16.0%%AI8_CreatorVersion: 23.0.2%%For: (Ayib) ()%%Title: (File searching & Meditation concept-3 up-01.eps)%%CreationDate: 26/08/19 3.31 PM%%Canvassize: 16383%AI9_DataStream%Gb",KpKlk%qs\q7g]OK'Ld67u>=--..+i<c!0KN#^tJ2E+2;T@T:$r9&2<IB<UmkPedZ0De&tE3iNR-ARq999Q-K?2#NI)K"QLIp%"DOH[D_)J+L\LF^Xo3]+`@Q-N>-jF!b`^OpVbP(9g?ZTI:UM'&<i^10%GkcQ@K$PTL0CS^_U:XFPgp3pCK_1T'-sO[JUSlD-b68s%jcaSWW*/FPQK-B=oFpZ`U()N:\*+b/bWkJRi0V+-l+lq!5W"i"n]dbO*q3rsB1/=8iI^)Y;Io8#!PcI)8<=8'#:"HU>#fKb/@D7B%c%i5RWb&UWW`<tuL)X,ABT8=OFu5-tJKtkE0[:6n5OTDd/cb5\OepGg?6Fh._87L8fB=GWqa]7eX9\JV[B*Lh^*KbCf7*f&8-V,_%s4V\B]7sp'2"_>PPX@Zl2StL!Z=ZB#?Mggt@Q`U9pA`h]$E@+V3^@]6kTVh`5jenCO<aFrL8[`!".Zg,B#2-uZ]%fs5XR;KOA)l0%b`!0d!_W_h!>!!MiJouHg&Gi3NB0D^\Gc"]N"F88@8AJgW]/O4!\hrYS5&Q[9/$#gc;R$Fre'0##bHO?qp1if^u"<h9a;]SC$B+<%k7EL14:I]nQIBFJOe<0@ADi:k0U#pGm<cN^Hj?*a>;d&fqpUB.[Ikm31N7s7#Z!IU$b(:2ZeO2P<m3fs.[rjYGbd:+TRAJLDao?k%r0qGDI[F.V^@%=F[4`a2<Gt;RG+#OLSPj=7;s2cin+KX0F\E/[Y8fYV^;(Q7#El],_,<o+.X^^8H,$t]Tf,oO2a%rrs1fWi;!1Lo%m\#G@kPG,u's.P1oGcN!At&a5L=t#O^YAG<mgg8Snhe6kh>_o=#>EnSFC9n/8b$[%cRg7"rn/]gL>Hh?HM7?$"+ohb6d,LGG;LC,%k=\?,XIsBPgU1G*1lZsn"1NT$EIPpBUAA5,N#Z`^4Dhr(D:D*OL#J.Z3SJ>akZGMVUW.kSZSG!R2%705WNDUq)E#`pqn;O4pSK/K%5\+QQEk=8hrO(N?;F'qo^<%G?P]]fK@t]5=Sbs!5FRkQ#S2_FUG=?G%r=A&&H:R;]aDA5F:DV1+e<YiCh6!+6FiZat^%,@&GW[)O%jeg()m947-#?/)QN1=QGK'q6`4hVsY%?1*'9J%9LbCR:@7Neh/1JZ&<Y+R2]5TrW5W`NlG"PaB=J\jIe^>aHmLEcAJ#XuU!`l5WC%\LC-9EBi\onUC=/Uqd`ILr+k#_E_PY>ai]%^dWo#V.D(=UY*BU5bsp<pLhYSn-&,-fjeZZCkg#m)(J!dQjfJC142QA,%dX0%-UVF%R4JAmbYhS)b@\:9T9Z];)CM#rAcl2n*t/_N07WtALD1Gk@%a_,7gOc=8;%E(c&`'"c3-CCJ08j**+3T%&3pLH*f:>+)?[q)Shg/[%N\&u,_?Up,A._9HEFb3E-.'8g8!\83@";pZVP'#I!-ekGQi_0GEfPfGL*AnqTa4J>-l`p:$3LGh7NW6M+HXeOa=IW!K2kAZM@;q*%,*E!A*XW.+Ku-)@j.a!G"&qO[7"E']),3J\#rr"<Q[f8a:dVr3iLh=i+?JIQUOc9X$kUK(Oi_2j+Id),;$gc5!3,'FH5VfR$787k%=cdHqAWSe^60`_,J#'YhJ=D4cOa^7pBuk!;!*VbjS\fr,@6i:<!#6Yi5ng)+=dESq(1^b6A/;CB"1h$kOKqagZq+A`,tS^q6/j1c%@Y#j_TTT]`1g)O8RP6>9U*PVj+@=9tZ9V&$n4WnZ=\pl2J1/>=_b[RlPb"l3\2S0J<H^phfa?&0#!Y8i)Sgh6`[(2=;,`j(7R@Fj%+Wcc+L;Eq(W,Ma6!8r_7Zm;DB)CskW/m2-bajO]"0LS4Q"=a^c(7nrC(f7SRkXT)N<a^3=@p+m$)Aic)F=,1A^kee;5pbH&*^kVa%;5/W\80Dr=c@E2q_e^T%U]m3b3LUD-#h!CRKZLBN.(H4eK3nbIV$%]*RL+QZ-isR?"9U]BJdY0b#[5/4.*IDL'r7KH(M"]7KjYqt%JFN-oO8=smBFY.iU7dfb7?.rHW7o&l\d5n=mPguA"=FPHB*uE0"eGb@6[4[GF.d7(1oK;&JfE*m#7&$"",nl`4m0iX91F7b(X8i2%J=*b0H7tp.^nDYA1NZ@%rX<`gik?sQ2f/JU6q@fSB7!,)G"t$;%1tbS4mQ3o)Ab:3$3D)i^1ZMD1G<668O:?;5$>qaUOOOIr5eLT%j6mc//HP>F:_@Z/#)_c3oSB5d9#b':cGf[p"Gr'j;Mn"2ZAps**0\BPFXgk>.QL7r%@-mcY[433VFC`'DGWt,XNXO54!eAQMWbe\%=(kB<4b`3g!#QAhW5q=0)5589-0pj^s)M#B>nce"dWZ"2O(7*/#Q8,lPmb)<fOkc"hr(4Gq%'F"SUqEEGuM"dZ,[@t05B]<N@9T\%b_4tROULe7-P_R\:>gAWj&g7uBV6%G(,sEKY_PHA`;=;^YK1Q\mOE8i*#Iu)E7bb3Yj4^1RN:_f/=&N>dI9]I,:tQX9ojBZde9@&%EC#TS-fFJ0l+/L-oAVebXqThV12cXQQK0Uuk@0f%#E%Q>pK3e'.*PM]hipt[+CSX\?&?s_be@#[6j?oDoMNV]H\3X&VilZQN%(PV%Cp2)aIorI,;5!<daLFdNLeb3>]Mgf%"9d:)Xs6V%L$BDY=,;=aZ_!?EQN6q\L.Zb[Ol%UN>6=cHnHEF#kG-tRH@chJQ:,nd!,mKU%(EdG)JCZkSP3+3(AJt8<P9ZW_5O68]&WfQ::(B6&%"g2](,*?TW#$@pK3]I9FeCN[FF'YU"9H?VJ@k;(FS9@="$=qN?jHT62th<e%=#\WM't0&9F9\dSZDV&4*4q"<aWU21lom1J'Z`*E^fHF"2AAH,+HrYS7L>:l#uXP$<`m^V4D%b'1gG?IE(i=m#/AhLao+`g^o)Yc%rrO6?76Amohdd1c/R6<?K,jKBoZW<ebfm,]k^X>/%4WuCOrgC`q&Ms5)^o!T!M:_KIZ]j06#H,L7^6)#C]riUXrE2^!oq200i;5r%NZk`R-5l0$V=AqDm'V[p<W\j1O.ABKc]>mp+GFH"g/]2?C)K-@-%J-L),FJRI\hkn+ccXh+<VdDm"SCT'XBram!oW1oaSSuU[0F9%5?$n`R!$34]\leKI=KcJa"7QJ`iHG]oqr[.`2\P+3Jtfm"Gu4UXkhtb!5]M&!es3b!=S1^*YVoZ$[mT/YSS_nj-G8Rr_/r'UE^A2%*6>3VatPgWl-5<dh&I<`0$$E?_/e4t77$?`^f;tZ=o*FJCDH'XeL2Je!kqS;`14b;.?nW]E*aq%N`_%XZ:"]J'*`hA#UI6191([,%JGVZcLW=H[-ZNiQ$Xj(\ZTJbQ<s%-C!<W[`"mdlQG$+lnXU&'+O;.J$N5u2k:?4i@Pf0r-5aXr1,WJT@F^q\]'720^$r/1CY^sY/%-uUTO9dG8-#4*lBarbkk\h)-QE'l'[WL)19H:\NB`3YSF*[HBe/*JYU4j#rK4s'+8dE[iIN"!L^kA0r<-s)$V2R4S30E>uk6ui3<%+W_o!r.k^pKsN&3#<:"K&-PeC6jhjgOe"D8'.<bN$'O#$SNq1X-jU98)eNOGAH-fN=Hm71=E=GPJ)/OKNRJ!;L?j+g"GSu,r_H6@%QioO(Z@b7?)D)=b6\k^p!?OT_":7+A$df&COas22jNlTN65n=j%M's-&tiVt$94FpoHCG+0B!<bEjR93@MG>9jDdMK7O^`q3g?o@%BBKL)%,$tC8,l/9s.0N;8<!g#j[R9.d7MI-^uXj\s5YR<*["u!i(/F<@0$]<#jgn.fRK64&bHseF.h2'cu0UXE<L5nL/Td]9#.';%,2Ib_lMAb+$N5>uQ@iMBdLT3F^r-nB\1pK<Oq@.gd;4(j@l.gTCF4S0:1N8"?78R#B/(5@B:1@=#TQlY=R6/!(]o]7i3@OG!Jf)(%*5&"JT>5Gp('EnmpLt$q!Z_:p@K[ef\C!Ku;8HZ9[0'bkJ?XXq@Yash4)PBj``R6p!<U7VNu(%IC]H8Q&KpJB5[Y]dTO:LTV?WhT%W<(;6)R*5(JC,fSjJFZ;&^n!F/gN/CBKR.JLR8A9!Y.IA*0d=?R$p=$&e8AB4/SkEH4,Y8$b`>3[a@B5*go=50fVSIjNrp\Z-A5E%@W8b=J5(s]8\!NpUi/d`a%H'mUhr%GY,-)RJn$5+lN=SdZu)VNn<n83505_kTD%iWph&><'>V^eHh!<:Sgf<j<6iUH%VJ9p\P_h$%KdU`Wo\pO.`TD%5Ri:jW^>(t6*u(j1?BshTfcF.Jc=281GuMB99d(2^_!<h#V?@G>)*(WG'EWrEiOFEu:WX`BaJ0r172_.fV-k&a%1%TCPkp4JjR@\>N\-r)3^V9(b<!E./&p>\iJsb;!RR*s=E!u0!X^.'<74cJgm>=u:aI[EHA(A_1!N32;7>fX@c(I1XXhd8D3?$)l%VFW?`NTA_1GsiO8d%6cemZkT7%iJ_cgg^,p@B=d`$7o38cV9[AWUT7.iR4*?:r/l[(D#jX1/cD@NY1M7HaO^V?`_MWFhen:lQW-1%!gr:aC^AJA,iHblNp:T3h_lLrLg\2Yf9rmI[sQ"n#:;DIn4gY!27SD7>Kp#S$EZ<#TQtPJMM2>Yh>j$Q.?`d\SC&N__7T9W-O@H$%G4rQ8EDh`<_(LO'OiHr;D$(obG\_+^7%#lrd1RR>`N+U_:h],[^`W=CBAkAeN!s(PkCJ;Rh^"R0W/Ak=&.V]'O_QNS(3h25-4VE>%hHGL0,"t4^7!`lDG)hK,S+-iuQh'\o^;_i(N;pkdc_:UpRO8,+%4&Mu:M!>-lVG1b&_e'&dj2GX'3b=dKN9b&eOsT7Ph&)h9+$VO%BoP]!NCm?q6d)7]`)T%d2Ca'm#6kfC_auC,NV2rX=]e`Z3.2>(0A%9Xi"Ol"j[C6G&CRU97,6f^Xn-0grK5[i7d1n1jO4!_`I%(%%4mcC`G8KZ^c_A+b?7uGo47]Tp9(qu>faIA`ZN;dAmRQF,1ASG6EdIsKm4OSa9<m>"E`XXJQ19C<0Ku]`hHpCU2SHlRST`VgVcf2V%C;&TfB[43s*H3co;K)).nLc`oesGbq3bu]ebJ.s3JA"gbs1!=%7NNPYTp8jaYMC[QPuaWt_55`I(0fZIZ+;58]X0_7q/gjuFDtB(%gqr4CZKBmf9b&O#SFf))9nn2j/6ZY3CR"e*8@6h?Xd0N$1;T'j^U/[Hn*H+BQU$O.?gt*tJ+YQ#:6r];'7dj^8JA<f:!cZM9_\a:%=-?M;.*p-g\0^HO(l3_o"$MasL/9!HOD^/MA@A%MaEWm"K5#,H8R(qPf"HHR3oHg7q^"$tq@Ojt94<l3PeB`:c"t!VqC<f^d=8a`%R)J8(XjJ7kO&fo/kmcQ^?_lEkB??JA9uDOpU:`e3aVo-NV+#/RrJZ<cjpRQX-XRu"E57gZ_&WUb<l!r\DmmI,'o5*["`GD+E2ne<%em[oMJXnA8&YfLL/p!H$Ase#cb"Y4-Sg9Qa-D>`i4u:J6%?uAj&_1M(08$d8)D6pV1!1Vg@'[GufIPu&]`R'6gY^+Gq8rZpeBK)^%H/9_4c43.E=ll2`)^=#qEHakEpY_lf7&StAcEli>(Z8\>aPE*BIdDLRXA_*Vf_Gbr'9BiUbLL#ZhmnYA9#/RKg06D?G&[RGGCuCN%!=\D=+5V51Coe-UmA(i\/FRJ:=.GFnMA&GN*%fSf<5A#o>U]JRrnS+:.o*[0mHnP,o'7K+Q,NpMbO9@M+!'tW#*N4iDck'WmftUR%J[_V]EQPATPOis+`j7K8E7\^YXNh6XcO@CZA+q/O4T;97\/!CoHXQ]^&=pcEV<=:>!t,Oa,7YGNi?Q[2/4\[gNWFRq,dq)kO[6,X%ANMB:4g*[YNEn-%(.?#7*YBAd+g8uI%Z)S6-$p(=/j[k$J9U[UmJkD()S%4g(qD$[ht`At\K:524Dn[T3"_]?bE_LL6Z+:TRLG+J%Zb)`HQ<BU34p9:18==+_q:e_'K@AJu&kW/)P.(saGumf<43AF:k_asn3umMh?*'f0giYTGh6W\a31'/*ZbNUWfmpC5B0U+X?\K_p%?nF1A6W_)S,He,Dqhra`pIgKA09&XX^"k@'9eD@[085sT/Cp)pdkPTKpGWk2H]Oj'V@?o&?3Lg/WXt6FbEC?C2]];k<-1d+J&r'C%b,>j&07t].JnK)+?K>6c`^gWf*,2#QOV$ki3N*:$f24)2-h0\W\3KH)=T[MqOloR^5VbpB3IHQ,Gn,V*=C[=_Jc/?uGI?4^;^4iM%^6QIgc0@bgZNA8*AT0eo]KSM?1!:KH<:geaW^F1C::cPp7fM!nRW'd[FukpqluoaZ1q4;l8sZ:`eL8siUMOX=FIrmepHc"Vm\)k9%TBN!/[6TBN7t\pAVI"iro?_9Z3`tnoe`b^Es#7J4dc.2HRKT54a229E@kBg`h"V&RJgl9^?L\K_5ar8h'r8W(d=1<@:<b_&:@0\D%;,,N?[>o0eh!,skPI1?8)6KA(7/DU2014!.^d3*,*#/Fkq<=A$5@%PLH+I?O9i?Epd-NYc9-*[Ic+c1,2Yh=G2U-V>n!)\V&UjH.%\2HAOb<LLZD*FP<'*RV;\t[p0ZBk4<eX@fa]KF^/_]eAgXeK/./Zmhdr2WW&qPV-Y2#s>=?c_T252gP&q<c:f'.,qIMgJ\=Xl'l(%rer39i.EJB2nN*^gU3+3nSR$L^.G(Y5CqYIRpR6MZ_^f>a0^63dr4`P'nb@ja2SRMM#'Nu_+,l\nR5%=A`n!U"31CjViXlb8h`+5%!TtWa49YTNKn.B0"<7H`N.lerM)Z"H^Kq303sd^(!/Ei:Zj<mFW?;hnM5duI1#P.uSB$0O(iUMur[faZ;r8l.,aiQe)GL7[%#%0V%p5`hHCMMQ#nI='jV@fJ>)^6#VmQ9-Ap=rL%@:-WF<j[?ur:67)iZ`<9%gUDRj)C1@YBb,[j<<lih0*"(S+=0Rq%Xodhcs7VDiMr4%P*E(Jg03Zf,(*n>;"h*]bFanZQptl;MY*NM[[TFj-OJ\mVPTQhL2(<!f.rh!e%`]2D><WBmBf-Uc"=S_rW\J_L*$mNR_ie5SLMmV%gA@r)ie(\0]e?>?[45o_bEl2GIsuCAd>%g:T[41^1T5t6U%kDVDRRLLbPn"9:qQEP74N;C+FL6DYFY05aE%\jIee`[f4Vlc:'8\S%*_65F=!VGDc-F]nBpl`"X46^#9g!G1_sDY=hpeGs$.`1eWo%k<jgS,6hfq0CX69[Rn)0PXIQ++m/XKRf#C^gqP#J8B!>*f0410go%nP>TVdWJJ-UoF%B7rJCuc$/VqW0cto0+Guakt*NNba6l`[!t@)Ddl%G-]Xc^]g""bjC?H7C'^$\h^/-=,l)fYQu>+`QP+;smu`A%%00O_McF6p#`"oD\Bc=:RBto$CrkIn#W[T@gD>.--c90?PP2l$!5PecLb.=;C?YGq*XFPd5Q2Qp11NWqkn9pf33pN^1h_)Ok5L2bV%X]E\'bc5S%piXH>DtaC`>c3!qS`]t"R(5t]la5R-0Ah'#=]&r(n$DKU];TBB9K'9oq]q;rea9u_2\aQ`#^?a8B:fdogORT3)$*2+%%`40lU(9=/i9T\"YATbUoA$ELVHH*j61UR3:"Rm,;`"!5Tp;L3jPDfmE0`T[]q"`,5e_+1nT+<JVMNpSjkiSkq'Jg_\u/+`kqS>M%<;;g;#3K9/B#P`=HFmae-*<ju43))Op2!XSG<0/51g*2"Y'dGPc\+OJ?YmHdDC0sQ$,3qq#;5sAN3E0"\8Lu#Vr;`1:sOUV9;BNG%O*q;gQW/=G1I\XEpA@/(4bMpn9HcQ+>Qah8]YC*E^5DP?c)0r_O]j5W)r:8?5<\6"2Yh:n>8hYjI=kTRlQ,qr.=g_Aq"XN(j+mL&%*EtUu3'4,tQ0,I>J,J=b^,;X?DXR!A(]qIj)f53+OSW!A*Rhc%Cjor2=0]u(s)#HZo#F\J[nN(cT;?,NrGYjI]rA!F+%@]Y7d8Rt%s$2.5_8jSK^8Y("miD&8/nNZ6K[lQ+2C;LI_jG%_]^]]uM;$Gu;g8\"ko#c>55q_WrO0rVo5-9j//7[$A@%F3RFQ.1r_L4sn!b2[%)k"HInZV57q8Sg?=f@]SUORF@1uC:aL$[99j32`#3)fZs)eZmGcLW&"c,Rbk.9-)/h`0Y'ChCX+c2>SLdX:*!fCqeMn&?79^Tqk!%^RWQ+lC7$t1SsoeR9A6'1PPIKE=M-(nRb3#r6%`$Za9UC$;sXBPb1@d)*Y-@M@F9@@a+7s-*oss^Gh5"S\qos1/chU;Xf5o:X`l$%^=ajaDg=VGpH<63J)^8gE'2HO^\Q;rgg%V=p"PGh2rD8/f5Ga/QEfA'\bl*fe=23VqAluugj>N+[je`>gj,B)[i*S2F5Li;h0`us%n$:?iFGo2:9Zd)7ra/g=SZ,W+\I_IY7/VO;LjT:h(S\GOGop3;JunFcAiA<);sZI7[.nTalp(+l0i3QarI:8u1Xr$mdlicfc1Kq<%5*JHSQF2V,I.ua$hT^C!:$j?-*&lhjn_ru^ceOr!1O"4MKNUNYL\-(2aO`Z2V;4J9]D.(mI^[G_SaA`JaV7/H8J_:<626duC\U*t%2hKrS#m!\7R-uKqs272]?cA9[:@UC9=a<WtA&IA'=Y9DLY5t2K#QLP0%".]MJ$[NXgCT"-G2JGVg!^F0ESD:rSG2/)RnIS4\KEs+%KAiGu)Ubd-c*gsRG/qo,Nmdgi$Gn`alMdWXrY_U`W0Z;>27/BnKeRilDb?qqWum#RHc;]X%[VKeO8RFV]X,cJ"bc^"g>JMbHsT)%%Ddl=OBDLSsXRQ-:`8?s&I/S?)r]FP;*jtu0h3j2mp#l/Io6gL^^A^6%J,ZXQ5L84=1+V\:fJu;LckMV2b#+Y33R?<IkA/B72<TH:%h=-,DE5(K4V37$R]i++'[C"TiLU?;Q2nWl!Fn;fF)Ttp!G5"7k%gVL"Af0Y@^[N+e[FTp+nIdlieMi<%bs!+>LP<I3nbQ!b,((Jp%f^;oX[A6MEA:olU3rdH395H]4o+]tB"ZK5nrE22%^VQN;4P]iT^[jSCB6hk'WhjFS'R4.l$LE:L2,jP=VP/-1Q<$bKQJ-_)<I170%Rj[G!<!*KAPJHH:^!Z5[o?L+7Ed-i!31"X!@F>SZ10&eKe)Ji^5DkKM)FqkHJ+DG6`=>h,*2d3L"i,U%g!WJ(-Wlf:[3-Z]+rg3`%i?p09:(-153OcI,5JaqD'*Z^2>0=hTr+V]TSXQ!6X8EpIWHg73T$3TMF6:T72fR$*3V-e,.%o_ES:=K'UXY9ob],C"32\Q.k*YaN%c9.LN1Wc050[8Kl?d]b59]_g9H$3+bh`03e%FDh8aT%eAkkNnnX+-;@Rc39e%)%j'p%Qn@Z_nYSjVouQT.2NZRc>'(h6^DS^AP5U%rXXRI+3X3)!;R-HbOJ.No\5pS26Cfde]m:TA?2+PT>),iI<?2a5M>>&RF(cO<e#enRC0d#;ltLY*hPNLDf_r/J*Z<rHqc2^5Q9F+%*Vtd$(\g28COU6=Qa/$GrNO'*f7B7FdAl%d3WJsZ%PoW#[am`4YdEt#N&E0n_EY#I^Gm'3rE`]b5=l6Q@eT[p`<a43EO/!]hZt"3%$?87AV/CJ?1(WBYGRtZ=fs"gIp$[ccMC7uP#tIRAn4g83H?kAgNDAl%LPYX7;,*Nl,@.ML-RK<%_I:i!=AAR7K7D1q+.jS0E:`_B%9_r5)Sc02_l&StE&H56Y:Odc%(7;!a^7f;6Va%m)?0:C40:r1<%j_Z]38.6-fOjju=0VWFq:"[g:.lW#T.-?lp,;_cni"a?8+2]!%8bI>g3E3V`)cH_rd,s@IlQpqN+&c.n>1V,.]3;Q%h^oj`p#,n:I-6>u-$Z@j.L:]I@d<rb+L)m_KZkJ$UFGm12X#QlSsph!NU+m9%?Q,bJk3"Dr"jk!Lq+FXgk?1#uM+IDj0iH'aDtV>Xm=&%dZf++u_Nd>*SGB]t^4H.!F0Xl*.K.4:N`P@I`NB5FGQq*+;`Lpeg]a=B%On)j=,A!I$S`F".kBkQf/=fHIheitY'G/O9*jiYDIsU;2h\k(%k+=utFr-V9%2naPN4/e9p'M#oc'L+FTPV?s,"BUcPk9`((n]m3%c>j=Q%CaTW^j-Xh08n+<$CjV;o-eQ!"jU3akh?937tG#+$M8`r_)r)&H;U>Rim!+k+jdt'::>Eb3"H,S@Gj6VS9c76-4Giso0@9g%!^ZP7"bKZ<1dciPQ"cPbQKmAQI+]oe)EmV-j1t,.-ACpXBQh^tph'!cRHiK%)0p#TCnIpd5@F-\WOr3&#ofMRG2H#lrG1SMI.V%>%BjT:Q.rnuO^_O?96,-__e5AFE[!si8C.[ml>b<3;h!Y(sr9"uhg)p@!kqlq@'q*2gRa%EpI=Jji*OgH:Hh9Jm_LHTndoV#j<Z@\0%RJr3rDhd.fkkj9BkImd-Z\`&GmbdUWDYN[XbNT^d^8+N_3XiCkE6s'`VDuW3E8GRVpL+=i&.UYrE$2'+j6j"9j6m[&qVFQhmTL@5%UeN4HK8mT+s*`pK@7]*2U"*LrUH?Gp<j2LXPF(lh"I`r<Q`5#kSe`CX(Y7?5H(*,fEO?K$]+IQ^X=sRLdfL4f0-!"GE<^hUhjj/L%[5[]lQJ'cbnG_9&r4;<g44gH;gp[aUNo49$+K'^5o\:>^m`sbGH^]:WJ'32-4&:@NH-/4[I!33$DetD^"157LPeQ=,_0d@#f@17a%hT;bnHQg>o.>DcO=jOP^;thq*p!6`K;_>[]CM6YZdU8A_h6^nK0>AXp4#'T^Vl#gLa=f,1n*Js%!lB>!5i+L]bR4\>2kb:+qYP5[%FmJ:!Mp8Be-X+jR$L,:9"nf(&k8*]jBnQGY"eD2`p&(YLhoIVM`[(A,o9_\LR(pd^G)nobp?1B14\fY`ijnOS9#'7e>*oad1WsDm%m6]:qq\pko:Q?>CFQNBbQs#NDl#kjLch.DIVi84PrSeVuI-'6R]@B,#(,S_NfE\$t7E+efT5=E9*0B_C%In6V.2)Y=B8W4.qe)P]%^>l8tI]1>3:<LiHE?$AuN9F17L'RZP*H6CK-h_oT"T3Z_52QqH_&C2b1O6=$,"V`P_Oa1$r-,OFXB=92p:q8OXt,s+eZEbV&,Z6I%GBT:IWM&^fXc?RA[*.\H9*9#pSBuNQ^RFop,i+XN2G<5>Vc4:VO9j.bD'mqQG6Z`[S1D&djYlpu2lbe\#b@tlYgd9sir<j3?\eLj%#^1gs48Np2j.FWG-_L,UjjXgLbqg_sSMGFKSn&[f>rTu&3:qPiF&l0O1V+%fDp70a?==S7p.=6mdk(6"AVGSBd4\9CAhsZti'VnO%p<U$FeXPD7JWgk\,M73\7Ml&qiqG>7,#[)FC-gP<[VN]h[Ad1a.sPfo@?-Q?"mqdneM-WqX^doj"k,;kn@)W%NOYO<"r$]@@.j\$%q3OAc1GbEp\>_pah(TNV,RFPP6\VhT_#17^(@=2He]FRrb1hL.@FP/%`*Yb6,?!!,"t>j,X3i<1%9Pk]#Q:F.<K^J_GFR^NX3DjQ%R]8<!G(m$8An^I$V[@%k9>.H[qi3^bgI&]MQKhE@+KK@me8K6b*B;cSCI*1#Nu[%@@TTsQ-<.Y^d+YFPqO.M1A>$]q&`=e!WDilh%:qNBEE)./h_Dnrnb%lVj)j"`VcF&fA]N_gW+Tj4t#:?\4D!PX`G=h[E#M#FE:tIo67.:1/?Jq_'^`gPSi8"JI/Aofck5eha*3b,T%(i[+5]-kurg`^u)6IFO>6iC_KF[[>u%PeQn:p&"K/>pa)\Z9rP&84B`#[LA*H4i+B(Rl4X/b>%S4>#<+b!JJfEHiCh!fnVDUKdr5%7P:-#*L;=#WF[+0U*.S3;\`.ed^*;?%*DR`/'At@o]@h3\J$YB)d9TG0;0eN4.D\4qJc)]Ns-ejbkt6eFjV2u%Hm,6UD416[2$lW%cXEuF5!_'NR`PE]3qcongUWXL?@;I+@%,*jE-$(V2`Gf!1H.7BceS$6gtp9BNGEIBYAJ4?emb40R;iu;?dgQMn>k8#3Y*:VP1LX)%USh72;Rm<7U2mBQ%mZE`-OLR(#N:8I(lglu[(m8)>k#,Ad-)6:o+[+3+XrT97!ug+@dmRlcN'cc!(hR&L^+]cER$DarI"4K8aDm]%BUt0<+j(N##+cEPMSq3)UkiI;$2=r^7"SrOhO.j6mMsri3u6],q[ga!\Gd3[r]Q>n]gZ#`$GZ04ht&uTC+#d#MrJn<pRc+`K"EYu%kC9G$;CtF04i<9=r\:NOY@K>=T+m"6B"*I8LF%S`.[hVS:^$275mr9p048[N-t)$q2!"k#i`SCmo1^A%mNr6_j\6A:,i&Ljma,:\%J&F,s:3mS@"9.,l^V`d/+<7J'4=;hm4&TGl$8,G3i#*Fc(^SX<Zr%q?%ctJlZ%>4q,J"V:^!Zu"U-;\FV((1M`Gl#!#6:Z9F@!NP%Tq1Uc(@XYOkZ2Z7AHb\6&6t/bM]@<_:r2]B7^>:CW&KIj)&BI`6N]M+*;F8:^O34lM@slH0M)ICKcpSZ6RX6?E$+TI#u]hTHm&h6%&Cs>AgMT$\>F5YTQm"b:K]mq9cnq1)!I&54*R?H&^(=\@\6k@CG[X"TXP5DQOZ!OqJRiSSn0Dd*)s7ilit*DNL1/19h(`ek']9OT%7Z&B7@Ut?9KA(WsQLAfJ98Ulk%V`C>OqV]C,Ul'qZlgfPjR!6\coH[R&R7X/2PJuN8@]`R!lJNZ'7b(cF"S:\nOWFlb(p2[972:^%1lC\V%Y<.Z9F$FVAV)R;d?\"a"]TRtC&^DL*j2;N/PU$Foq5_oc(;`!XM?&#J3'?>A,m%RhO$hB:U"M3Sj_X0(H*5b)M&%B7OisY%.R=c=3=>s[U\:?D."]H$ab*J&0[Y.Ij-7J3!"W\fSb2VKM9mi6'FhskL`fh)F$)aMJnSKkXW1$E]ICG).0>*8=)h(GlAkubb4(`9%V&7l,3aa)H<_4uJP/_kp$ET5J?N31NnE>IF49Q'\LbKAOM0.oU1UPEl"Rg"+M?A+i0!XR1Lb",R`9i]L&;Fm#@@2(t6%MY6E<%k5%p)lXt.9d?g[_O:V2b!0T8T:G4NduLB#/dr/$Oi8:ZN(3dYttb\`@Ku#lgUG#Q&+T-ar^6:!m;2ZLXeQj,"akRcj;7\Qkaq[8cm,j%3RO4T(]sH]'6aJAZ`Q&tO`ieF:d`H!J1b$Dd.P<sHK)2liW\*Nm6\i,!eu>?D#KP?"d6l)->8j`_G.Z=K-$P_h62>o'c9=BGCGpN%KLfQuZ8A:]OR0#PplS'eN]X1`%Ii:M98+KrJ%sU,@UW*iL6*/+%X=>^4P'82hZ7VcPC'Holg[ZTE.8!#NRp+:j([HZ^U$:X,j\b2%T8fRZTPjb$B,eqMO(14pk,OfFD?Cjs7I@%)n5Id6%PB:.k2"_ohtt$WhVK6aGmLF]gP>cW(]Qi%A+oSKT-eF&$9ptFS*d,'<3)RI%^9c&hlD!1jA*UTDI!RS_%t'jDlnltajo[>m=fQ7K5F?G+Y'hp-7D2iYM3:&1"6R[?SJ)FMqs\lHs%DGQ6VL2-fbT&-"i$(h%e.C2%mo&hB"hiE&GKe(a'(oDU@dF'h"qFZ+ccU`u&(fPcb0;&u#9r;s*WN]UjRGeY?Y(_E5t]ms+(*Y=J$Kou%D=Ua]"#630Fl0uf`=6a%UfBIRQ<qNlinpU'gGY\)PN*q-"I&#;3W[P+q-r7-L'5BEpAk#_QgniFhZ_$!puMOVC!Om<hhB.Rq8qF3Z1#R%dgnE&^P&l4>0_S?%7Rl^LT5O&4-@PS%)HoW_KCe]4o+:q@*fFSWgYdjX4I'pH]47tEG8nA>X_et^B/s]$_&6sZ,_Ne##'`#]<\S:h+)4Np$K`lKXa^"S%/@*Uud_6P\f%ROi\_?IbQMq8q9R0+6>L:;RMplRAea:#uL2bKtC2ugZZeAE[=tjTt\uigFC!1<aQDWA_(>em+6X#)>=?ag$X<!m?%cIA=(7$bo>f?c(PBlaMu(=%t@X6q*5Z8tEQ[E:eo/T*^bF&A$_c93L)hErY3qckoak.*W-Sjs8RTEl4NG=`%34;[@"+<U!L+\,qT%mER_q)-X$"V?fXjE"[4>DqWsKJWXa*j&hUZH\<&bWf%bmDY,%hXBM&C([oq_gf_<pZe1HWQ=;7NHr[3(Bb+10@J61;:bcfjjn;L[%b^rq*XFITb62P":Qmq>A[AY$ja+9cABS#R\m.+pqD>p<=oD1,,&VmlWk$4csWF]^ON7/0Yf^ah/riOu('0U6?-`7mZn9itBZSPR]%Tsj8M,pDX\V/F??$(s1inIXP<kgB3lC8#_=JS9?if^@97#4UV%S7'$EQKfg<FVQK<%-lc[V!psY5%QmPMSYV4!mT6G)dPfO:`6#T%VLr>T3u[afi@L5>TfoIqGN$=fgL\lK_/'8_[;M`Vgi&Lds2!UNDJg#H3R'moQU5G#(GPV`kUCq[Y<dpom?p3NZao8hEp0cne!a_;%R>YT'eOtO#mrQJ3H<J-B/U-rRmCA4WMB2__>3ZCo'%/LbUUoWkgp)GZO:s+d4c3/X75>Nkme-rDI\&GghMKYpcgbMV`O1%kICEg<%XpciMj5u6"H6u:DW<\`aj,2)#F#7,^DkDT7C("^k>[ZEWYW$D[C<n(`dh]qImS_YcJ?[\p7PFGMSAYq@[A6C=W]RES6odc]rJ#[O%0mLOBHUJa,4^>$`O@cgs<BUI&%i)6-%+]ZniTcj2FaF%Rf7`Y0I(.W-/(+pe/NU_sIl+3;l#3@q2DhNej7)oNmftTh?0+%YaMBk%%WlPGLO0jBn@p%uYe5IE)JUKeq=WX9OM.!1Ck^i.[oVNDjJ:W&/rD>H,G`uS5D7?%5ZJ+[/6("J5e;KD^Jk-FoDmh:cB=ioW)U1pj%.^1AW*GmV<"!V\lp='SZ4Yf;KOIO\l3$`#!!e)tA?h)_>hCbJf*ZF]WMBfS('&5:7_l->frB4#<_\LC>^kC@[j&#V58@lO+Z2%dt%W?Hl`?>r&6m_Lh]d2/m?0%HiUXo[BBC1*c0jUAPriOsuuh*FZOX*@,0cK"d&Zfr@Z\)ut"@,o/Z#7orb+@Ud.N.P@Y39Yo?\bCD8%`5\!+p=)b.Z2!Y*&=@QbX^j=14XRCl^JXm4s6d*oh.j^R"LH*m8rmc=_oSJ?8$AE>A<1'o2r)4WPX"S$?&W6Q@HGs:M'm;kj%tqK%E#34MjC_eL@L8VaK+K+.dh#XR*RkZMWnu;.\<G/7Y@Uo4CbVgt5$6R?(Ifn6Q5c'UXt:M']6G9Z%(ufc/m?p'+2gKGR#KLGmmgI^%/M%ke`;]jCJQlAYNP7>*BX)@^HMr!49h4u)GJ+U!XLfF<V0mT=?XOTX7F8!iY@!P"I<Ri-56&)L'RU*<!7QAPfe_X"L'c<kf32IT%m>VQ;dfDZ(9I>J]p%D#hO_K&%ohbX?Uk0.QosD?b/3=0#8LY4_d1J.-#S,>i8!UuO#"KkiR9Y4+U$PhKO#:dgKlk5&,@D'A'sOm#%@.Y$JFIFQR\^'8o=\N35<Xls+`E\J_D-CM\V:u(=8fH,\_c>H6]i>1fY"*obATDDp//iH6jDZCQHo%h*RJ>F$Trd.@@F5B9I3;G$%liYt%IUErcRh[a3G>6p[oXGbRohIkCb%$eBCprk7DcIbL6kK`b=fE\5<?K7o+'ZFP>4qT.ohgMdm(D*(JFTjo[`;mbhr^IjD>00H%$$EU%d^DnH4>j-FaXSY\-jOH_hb)(]%WV38W*8TY5behDV,GdMaWrSRnTHdGne*h;j8kUqB:o4:",Gu`dU9r](cfCfL>$s_bE?GF%-4:0H3O>GU,$SD4gGTk/Y?E]_7)Ku;N$Lgsg_Mgt1p31:GqJ$2,lHVrk$*3*;u#f\`d!.P*VAihrtb;lSB6"E1Tu=Q:c#4\P5p7I%2Y"]WjG69KL2,ZeiabBA[C0CY^<:&c\(Z1=@RuXXe3QMaQ>fg2G/EI`b!'@Y!5E.DW;gXaa>\\0SUT5HcdrZWZpn`aOo4?`M%[?O%"qq\4G-5DYK&Udr@P9T1Ef/-Th`(eimMMlqPkK%'*8NUDo[X.o6O$E*-L&H%;kr=@]JRg@+Q,/[16QOMhe49>!:SS<s.7kH<M(In%#.M52TkC0@K9702%_:4ZCbajIP9['^:*>V1WO4+8Xj;lJ?=n4P6_C#3T`Rj@i2k0kjTlUG<k8*&L%YZGi!LcO4PN2V[Z`]JJb!EU%&b3?=3RlMg?31)24m3N;X]=UD9+qSCf5ZBjQY<.e.l@rqo6^">Uj]s-#PU#gNYFK+:*iBB2KGaEbOV%EOU_Vr@g@mf`m=Jae^L^8%G&"1dMPH81A>p'>ZS@).[_]c6T[sG%Ri^t2TW0ja]P'7e380G5aS3h>.?*U&jATuI_=4CJJJ]tg]rGD"eq`e"qTCke9qpg_q=(FH%P<>g:ZNCh=FPTS3h0EVsU\85NLdj$:/ZW@SOqI/];bSgOfeb&opGUH:*P=Oa661\H\II*6g[b8QP^D>KJ9_51=q2<t"r0f2B@HsW%_jq2aPAtJuB-D2F6e/[$'CF6O(Ya-#>=PTa%N/EIjm3?l0<mD=h\B=JBr$t@p'(,H35%,QX/8otqn"`BF%L1L_3%fR)Fn6ik#l]2%o/):"_-gJflZpA70fI(YOToHA->]7k>U;ZdnS!29)DJPT<1KMnYug4SQZa!:*qC-Dlf(XFT*Yqk9q:Hh%_*Q$h!Xse=ii+;f6hnF%7qd@L'/GJh+)-s<9KP8Ro5QcZgt;fihFF\2g8'^"A&6?8(TP-un>sV35R^^7M6G<,L;t:0kV-0Fq#](`_&/b9H1`9H(o0HQ8\<Zb%[U^5-qg!JshCJi^bTD2C/)c[iYb=lAdhQp/nl+aaCPu5VVgDl&X+m`N3F=dQ4JGb%ToaCcKU/%>o:>R'SW9X]O7.Q)V`3F8G'Wh\%p$:55:al1AKL2^i$_^DX?m-'sfV?[TYPnbQGc;_LCnHB=,n#,Q8Gkj*J;`n7r)jSSjW/1ScY'eCm^#!A&$Jj?=BWII1XDor"8"I)%^WNpFg.#FFmE1.;'$;H&PjhaG329\s&QqAIDb*4_V#j`G:%Yh)#k+oAUc#Yg7?nY6GJj(e)QqXd;!UeYD\nT#/"S/i,gPFe\;6@D%DDnV"YNY9UqAR[BDnSWeKaN;t<i0V#$\-."LbLWFD=m:0e!5^5?ed6bWb%%k@Ni@WFJT+g[(T)Ta`pQ1]XG`2N4_a`Xs4IFimR[o%;H_Z\.u.F,&YfaZP7E7#nmg*WW(&65oJ*0nh5q@:QfRtG?d#PtCPUp[oI<puhqV+t:g?cH)I"q_*[p^\lPCm&,2Pc-+l6u4f)F'<%GKBp9/1r&-a.Dd]cl.?s!&.Ia+5uComabZG8(9PIJiikmrRpb/>NE-g[Qr`B,fj9ek4W%@05iMeRH,QEjqC<c?QWe#<dcd1CgO=5%b4j\t>[K.fmC_<>ZA4_A]q,:tTmf/_Q^@$A;T#SZZQ%Tr;iWpj?)I;>^%GLipk[^Nh(J6&bYe(eUR/Qg?b_csK>UN%X(1Z0L7/A5%;LWJ\RF\G#:*@b>m^Egdf&#OF\!=&-Z[VIC:EEPG%,\Q>08=([SD%oMSS!bt>$!bt=f_TL?Xe%\4M+PcbPNf@Y\`YCZtuu*,0qXk%'j@n8qdcc\4s9At3'2YQO%_"[%Fnp.L8sT4U_SsXUfWG:&5Oi*Q2!MEaN)>*_^)X(q$Zf`YL$aCN/&1b/IsFtpKg00jba)1[F1bq%p-Ar.F2=PMFS0&c'Ks!U%BZdkX-gp^?(lutZ&o:`D(uta"l^>B'fTS`m:]Kb\)N4Q6d)0WjbNNUigOm#>,#KF:m_L8?/@\TJbN6s%M;;!=gUIV[1O1d`HC.<X@V6'hB^PB\1).LL]S$p:GVkYdlC/rkOZNr5D-dUtMk-[Uh7_`5m./.^Lg+)2%.WDB'bY\Ml&_9Dp-S']%TuU!0KFSb.D(]2cTrkGLe'RgMAi6sE,\&!CI8pTMmhVN^R:U._Pg-o0K_E9bqp>=VCGBoJmn08u2>e.LfoAKg\RfYCFB4Xu:k&G3%$!e+o(ST%?b<kFH>g%e<T/LI=b5Lu:+*p%*mR,;(FtH\+4O8f*f<(lGV7^pbWgRTL<*q!G6B1Z-f8t9HfF>N[Y$OJd2/7%Q['+Wh%(0gA"_Qpha]F_&J?S'.DgVcFk*I_<;Nn)V\9cc4pi<ApdrEqoN=c"]*eslCA>:]!Y_N&d1\ra(ck81FbLWmX7_nNBpFME%2E*>G;%(=%oGk/'RMZES:85X5"+Z*<_^%m;KY)_c:Y[8/C<(XPHXZ1Y?JapIr!8n[7;>?o6R98h!;G&8t6(U"V7H#@P_Ui1oTG+"@B$4XDV%\FH)h/FK%Cgb('(#H*K,Gp9kFFB.4'bh\mGMhRMBpu9P-FCju.Cb73<3Rq<_WqjZo$[)4W#VS*^e$[0gZ;b+538L_gXfSA"9<lOn%g(KN/Hs'oG(QBa2ronQ>l`_+-8h8uFdN1!ZQ]>QWm*b]5HZSF$Z+dhlT=iB"WU#Id99nPTg/@m[h-Fc<Fq`h2Wk0,SLR52?Nl&'h%b'fX>;4D!s,K7M=-d,_&RAf2a]="tKq"Sea)U@r2Saaljk;rNSe6g,T(S(rK4?_lEX\,Rt*%J#5nk-TC[[^H;[$DSY+gntS,O^qB%F=@h.0CNqJLWd`ip#^:'H#7Wup2%4JX:dS#>h.K=jed'`=RO2(="DJ]X8#:l94"eUQOeq<e62'c76WPrQ2T0ZGpR[L[CpUW7p7F(%h:hBkKtE2D1lh:%<]]oED:!b_>FV<WU*<o630@F+Cq^1G81'h;NZ<[PN"h`VjiID6>)JOT>"9/l-FcT:5$WoHaBC$]9ZM0Nroe#G%])C8V7!E"'Fu5PaQ_W.;l)X$S)*3`A>6PiiqJ$<&C05b@XX9A&(0A$Oj`P]mO/]>Nd7`3Yfs7T[hO*$WC=,lH=6o_#h.juX\r0"P%eV=tfQqt!:hEiro4;4"4adQ\WY)]]fR(CWSa'Od[7'*_6c3M4%Of(WnNQU[]XDPo#]<t<oX08([g5B`*%lns<oLroK)TDPQI%a]A%a5c-\=I``Z96'4WodYE(<6Y+`HV_\Sn#qc3ou),-hQ>WIM3r[7SD]]k7Ui:HJl*/9Q]\>ejjD(G69W!69,In.,IqbYD^=B+kJa5n%?=]8ambVIEFM1$hD_DSAPJDujnhp/D,U*h7K:jk5lbk]^Ar2.8DNVH1.T]%.N+RnnN(\p",=d;=8Y/>6jCUSZ,PP3tR(P+uMCap)%PAK[K/ue?@/lC-\8rVIZ1BquhI_;AW<ti1[KU"[mHF11K8!SIck*Y?gSS"KIkSu5tck#-a%fLEI'ps]U;^)cbP+?]Rg"bMPR=h!]%!cu&de7#_RV)Hf"QeH8W^=m#7.t3'*9rGnq7Ii:XQJtnrI9g(=\^a]*RhNm+4YA64o3C6:s25Y3Lr$c^2p;-a4i?f![%%;H[ek;o%c!P?cFhV[[X*hO<Cs2A5Q*@O&f+JSB1*bRlV+q0lE9BYp4Pc]!8it7Ro($?b4Nl54`+NonjB^D?>@5p!cIUUR$R*l"gUlc1>-538%(H.OD343jAQmjAqRnY?S8ip$L*fa.[X+Q[:7jY;rLr^dPZ'0Xa2fc=Sre;oX7lOa)\'LQ6m@3b1enR4VH(rk^RnoADLRYCJQJPg"%4g_XUQ/]^4al2Oaf$j"@:k,OB\!FM`nT92+lbn,%5&D>%[aj`5Z>I!KE@6%CS(s-NH=\HG$&<]HNI"5)4[.@A>.rC]9_kP8>ue'X%d`[MOP?0[-0=#iRD9.Ja_NH#&h*nkcQ"#;`3cVGtV^:VA/"Q-N%apX%m\R42h(:/Tkt,)>3)(Z_LT?l>[%<?MRH3q)Srn`WB]e;<%,\?Vu`_CX<lD:%G-#6u`7&s[*Ml3->DJ22E\]`!Ha5-^X$&l1e&2#!l^;cnu*[)T%pQV1Jhn-%&[e:W?7Wj3_E4E;/7ADO5(O)_J%ren:%*CRNhaha:O(d#eTC(CQW95WuKEdH>$gq8'J4G6O5"F[7nNZs'tF0ta2aarqYIRRF'Wa4Jp*(S,tjmeWhViM3%3d(?EVa;ac%^03U\\BNdN't\^2db)'2:(t\$e>`"0:oALFh6k_`9RS3We^VRnrq:b!pXFKTS:r"6h(p3i/tAJiO`2Fj<f(hDo11W,S8Zk0r;!1N%gcfYH>TDggg@@[]2gJ`R5Ft>KL![\bX<84c2[[+gaD%@%W>%!d9:(PQo%i:$`GL(em(t6JlBgkt-@'lAgH*'M/8&:lU2lh3KWh1d%jl5Q+#VTFcQ*&7f\+fB4I2\$>Y,h6UdS9(RM8)n//rDRuGEd%c;YA3"HL5DC[]m2XhDR.:UH>d0?G/FrX,hJda5YZuFL)[m:P\Vt%qtji<lQPn^=:U!+;CCeLLPrM:d=YRUpd[g8(*?=>\!9IS?bL\V>[1g2p*1j_<4]6OStjMYpGq%Tld(W9SW^Rk?bBILG:p)KgRVSU%mI'/_MQ-2PY'=*`bS@81id"*Tl!+G0V0ncF/")1iC7/;,^6Hr9KN2nphF0<aJ7,e?k,k^&l-t!4hKphS:9Uh4Q$R"sY0n#t?TlXe%5?7#d1K:-qR]0ICfsn+$Fj&4$qe/Sd]3)hsRjU_aID0[2df)o=51Xsm<VJH<ij)Fa?Rc[qDniYY@j?%A(cP_uCFi^L[Mh4Hq*sD,%arWB@,2u3NZU3M-91`UA>iQJ<o3dWn12Fk2N>=sQ0",frVrs?`$QTAeYJTlHqg,ZR/m'8XTijI6LJ-rIQ/?FK_\LSPia[bl]fdc(%422e8nAA?f4\RVi2m`"NWb57Xn%?oBg:F<#9seuQ(K!]DpkY9%N<uf7hek%aNiVQFNppA^U%.#.i(\F[qD\+ekfp]dmNbF'4oK9d%C;3m^U/Pnk8Ls6s(df6h=ti`b-.FqA25auU`!T[\2Hq1`))@T=3\ZK.;u;k.rA#g[^hfVqho.LV2HNfAp"BG[HlA>qXPH?_^"Nl8%A4(-pQ*d\@g.U5??A;ZhhmqCq3bGhPO7$)0GH>\=cXs+c+UiI",`&o"U/]a#V4H+G@Wc<nXju9B+&^3GGUIVJZJ8%W*P&b*G-nTl%BR,F([Rs.9Yu6!+e5?#G`oE>#Gb)V*m3jUu134CAK-9]_%=HO%`O<:qDH:23Y2gC/jXLgB.`=VmA7nQJ=Q(pZmd?o<3cR0/:iF&?%LRjENp0hUISS5s+[;\&Dfe$8,@>q;So@%DTWB=GU-oekGYK4+H]#NWj"6au9<_DH#lco_0O*3`Aj`^L*qImarngfSN6ZQFV=d&@G%`MPeRCUMq,KZ09KXHY0=B9@:qGtMpE@<sp\T<(2N_"&\=f".ndQNrF+Lo/Z_]$b)Vb#-D)R3[qFDs9p@lh]X-=Z4.O.rd(_hj'5m%bHGUYd@JcQN=LWPeE+T.e1@^Y@[kE;,_XF3qEU"O:A/ub.0o655T@J4nQ.PE?J!Xt($J:3Dar`%RV_K(L(1uD;0XJ%^Ti$K=VFqo%9pPZ=DK1S1Ruah6bOXIM<Espeh/5*f!72Lj\qimta'E[t9n]Dr\K9kl%VoC:NsP;bnQ8A_)p?o2m++LuE9P:dmKHYuKSe^*5(g%K%>M0JKC?$dbBNJ!5AY/;7W#KIn=SJ8?D/Ek8-tU$%l1B&)\WJAVS317Qp*L4HS]\#i$<30!H4tPe:OnC?StemrK7@AuZLWZGNRA@H%GK[[aUk8.M;_#o,f8Q`4/BM/eibW+#H.nDg[8KN;/X;?m!_!4a-2uk8&_`If1Y9t-h&_GiXrUp!a*PKV_+7[T0#;F!V39/h0g;:8%2&b4Q9O6<c69PRjR3sb5.5TQ\fcA89>qkTb=50*/!ioNF&8u\C-Ca#T0Id;.pYt#JP>,0/'mQ"Kc#+f-(o0hFYj:dkQdG,K[^`'B%P:CYiUr#Eqq\GGaPk<ni-2b.c6GF7#O1cl^Bc'Y%F&C+MQ<VaYNB=o"'T%fL7C0'Q!c2qX2\?uL4_,Q"8l#[;k-g9EEu%@4@7&Xs%iDj+UD1W,jf>aM+qC!Fue!1#d+:jClCqAE3_9-g%%<c<8gUuhGc#o&^5M.J;D@Xo7&;F>$Voim?XMI_G)`[da<7\7s\$I*X=+[K\%c>IEk.#P8DF#&E2e:-/RV"M1A+`/+3b>H[+rOkBo.;aLD!KqgO7I5.:gH;u/E!NN%K-$fHDYRmf\+<R:8GVEN-)kfPZ??J<Ps%kl%*1PKLbJLu^bm7t6Jac-faP?O:dE8PY-WG8W>JCB2GK!7TrjqG+J-EkfD8j/8[rMW:EH=Q02d39=H=uLaW4s(%5Hh19Ur/[L'>4:X%$?tr'm1f?We+D%'JK-?]X34+(>'V*l!U&/&;`%Ik@"?O>C*6DjETjPmI<<4f?tha*=2B^\R[LQMBbR^qFp3JG]bK5TjCiqm8Q"bc%AHZ0B<@K>OLO8RX7YZo^]*O_fC=B=l38Otb`W;2e[(>SH-SK<%X3Akc7e#b]o7Ar\1c"Qu//*eL=gG4@DDjqn]&&%re/e!rA//P\%:E-4/l81V^<7>a&(V#?[3S_Vkm1+YrZi<Es=fAfX%Tb<@>m44tUQDU:GC$3N[i[_)6Q,=/1\k@8K6g[?An+UC9b)KcUYr+Z0QE0;%/&WD#Dbap^.Qe&Q4cCRtb&7MJg;(3aUYm1<GMA_?#G'<QW-#9RJ*nR8.dbB>4"_:-c9*MZnTh`eiqDpkojAX[e-+2p6&6[>?s%`.%TL-7CZ='D%ot)dl:BTgblh/$Hr.6p6NBAm"$qlYIK<Y+o$&670EhROAHG@<Fiu$f>[^ZbeH(jN0b$1H+UPqX-NGja^(EFQa;<<p2%`Ot/\\Wq:tGm'LX)eZfi(PB'a[`.1]D%-o2qL_'g?$b_=7iA,&NB>Xb4\*<+-rG!RNg_*ln1psP$`5&\56\(cnI%h^obQ\#!7#<-%,CI7c/V_gJDm:JJBe5O@!V"`=maSqe!$O%483s*`c.3a\n/'f`H_T#Sc7@F4E%;H'6O#n->TPf04![r>KQk>G:Z.PC&^KF+FO.fC%fr%SRFXKW=6N'.P[oTO!kdKkFSYkLRce2ujXTuT%Bsi%>-D$)Joc4aoaI3jublL``o7V(Yr1lpIc"K.D[^PV?d%Be"%5a]g4TanA%%#hK@67P%Kb0/%\;2E2^bE^.d-?`japD2(6;aYb?_b_ZIlL&(d3S4`l%0^HnWcW55nb6gGaB">0i\:^!$ElgYH9sDc/li^(201t,%O@'8Lo:4$0;(4H0f]"lHC$UUXWjlBqs)#4_Go$RCo3ZL,"5tEDfl`c=BQgVL6EtAJgq:XIk*_8]U?K"A4A'5!go*Hl1dJmRirU=)%*bL[Nq65o+M"f`NINt$I)ohtbrZIBq)oi-!]gsd4pBpjg('Ag8]2oJRD?Uk&>/Y5Q:trT4R-fJ$"#SZ8d=5A,N2EY`9\\P%>O#s:%,%=h>AA)0^Tgm>do8@SD&HE(O^uldU<-TaYgG:JZE<:foZC\5TV'16INh>3PgW=$%3?sehfNTi6[JLqfG`3cG$T0d-Tp!(FgP/pF%C\72>eX:L1>UK5l\!SD#%Z;o8>]FM[>c!8De?`sJ0@N<X9^h_Shn9&%eroc<VCN>@g-n*a$HPR9k]6DGM5eC;mm`Ak\"7lZYc7_l%lAR)om'IC<Z0b3Wea93KUWh9IblVj6/_&g^Fd,]_Q1DQK(\$0</SaGm,iXYuX=Yae2BuL"K>;B8@c,h@[C[9r3'&G=,&%X!Rr(+1%ANXuU4DO54HfRH%5ISauS.,AO-[GmafuJlu`GDF)IAXkj6g47rn>2l^q(/uW+lc;W`6"et$Cm[J0/:Z/)`UH1/KY^72q.Y]E=L]C%(7,BmMi3Pj>`H]XQe-Se^>J>EhBnl>CufP:7ta)L%Pk5%1`O$0SXjFSD`g!W8PkqaX:uO(5Dishpf:s=0G!42bbt(;_B'XU;18P)%]sr)jXZjKQ]q1''ktQf4/0(!dTQR_376Z$t&_[%%HE]o(4K.-0"g+DD><ee?OeH[+dMoq_a8!$:<sH%MGrl[DjXPZl'lQ7WO#r\$%SW:sBRtl]!-(1Tn$$,KT%94hW@M6e6PhiSkQFb0AN$mB(-Pn[+p'2TK2QNp!Z#rqMSReKS\W59N?'UTpV,+I:Y,(YUlot$b[6!O:%`S6Z[Z0g`ojJA1ffEZl*=C0bLe;Rs2B@0G<<D]A`ELib$q.1kaS34X&abI#4oaHo12]3o6"-`-eP_8\_=s0?8lkQQ_lW6Z6j-AmZ%g+a<7\14pQiAMlA<a>!CZXI+4._/6XYd-<!nk!dmNhDa9j1M[EZVuFr^H`"?EdV/.p"UM3p*:!g9DRr'ipn=U;.ADmHI,Y)kN+\[%f]4c*LfW:t[[D:o^!:Ph/`X&1<!F3,XK//k(;p)TEH<?pp*b@=\$)0J5h0O*?*..c'&<lU!:O;$hL]@k"+La2AAjJifLg<%G5(]U%6krQWP+a/l3%i#bIUE2A)&C$4/BA73rp%RR?c0P<,.%C`/*TT<2DW84D/08mJ27Lj]+H9tS92?63S[3J/WY,>g(uNX(>VPF>i_Qa%\G;Ep@KcHOpUIQGL$hjN!aY"M_%%%\>uic-nYuUZjtMpC<:`*a#C(L7nbNe5KeUs^XHgB69/#'YGJ0J08RIX/ceIF/C:Fai+YJ:?%B"!8!q&?/.3MT(%PMXuKLK_deT@PZXL(sr]jhBV(<8ZR$:&`4*>.ImIl_Luu!qLBB?/O>fC+4]fW3DMJ\LeP74gUup`<D>HXh)Do%LoXg\G0FJadJD\?.RG_0SL-!.m9\r&7\s4R1'NLNc[j-P*::I2LKF'::`$nuMg(!Ha)^3^MtI=Sj5pgEndH?sfVAY%AN.Cmk18iN%RJ,W%Q\X1=595V^B@>Wh[U'mqB%7IHZ`"<A]$cjs@]S4L24OFGhE$Z&]A^s`m6Ud7+WVp'mrgX[erIXcULX7U0V5_=o:+=Ng<IX+%=M%pV.>J.nqVL?t6OiPnZB]&7?-:u?h+RQ]U$K4'g_l5'Q*s6:GU_6k";R`FZ'1DI`N#"`:>CD'MEEV3H2i$sM<5`-V5R;sW';[q%i#Hi>FuD8E"lTAsJQl;KL;fK\oc2Z7B,'!339?[p/FSALDP'A^oO9I(SXZ*E'"abcijGb7!#Q"9OapJ-jGiA$\-/rXZ-4dO(?oX=%HDkH)gF:DmMln#;GoSBb!@Z)8TH?s/`><=OHLrVa;U\shfuu?-7`a5>`93HtP_t\+:SREeq%d+kFc"q$fLH<3VojX@ZT)]aj+rq4%Sp&.rZ.tK4Ms1>C\[VF(h8ko9IO#Z5I4sTLaS7$#o846bBJ2!&Y-p"8WTU#cjm\s/B-ZOVl)cL/%H*q\--$aG4=HsfZJk0Yn1N"t%n`F#K(U`3IFuuknmp@`A:r6&9NQ24eCc-JEWj&pfS0X87`fc2eWAauH<0SCM]2ROu`W?!A*qPifM[BlXN=HR=olrsd)_(8Y/tH[<%gKTnq34Ug&.>@'c285Z1Yt$MaPupoao65Yg2Su-*5m/A>aDB\,)04ESnYIq]",QAsL='>+mML!=I#?N(=qnML;@ZH#iqRi8=V">i%XoV*f@W8`$GjO8YhL`&#o(_.\SX#J'.sJmm,(l&7Xrk^J4/l$^TCj`jQ?]k;RQei`<TX'sC^J)A.o^WTEFV8Ok#YuOKb[0]gJ9'[%C7nRg(dY>pU<]WfcLj?IPiZI/G17V%6*]'HkB3R*lY+WHng!U,]A[S",o[:l(f\P@A5.Du*g2:"/@jlpVKBE?OGS%kBeRn*k913X%Aq6-V0"g[^9tOId:S0'&>@\`7eDZR2Y@OKkK:S"8FCK3RZhm0FbH_+_0<QFk>('&1B*QjhV'VZkPKTHib.=S=Qd7_85pVW4X2g)5%C98X*>^#iLKV/+2]U=AnDh.k0F)f>]*n5f!f!oQTZEIU'[%l4\?si+&:dT3G.tf#nNeVNUKA8%cGj72L]%U,`/@Vjgf"K\GXk2+I%YkI?2Y+EpZXgFk$g.iIkZj;=DGPD=FmjN^c4J_e#g"b4s/Nq,NWPS7J\Pu\/eCC(*`6#map$Hm#WLS+lIX9GFEq3?!AtL0V28$gK%k<cE,Z8'@=YG@NjD^M+$mLUDhfuBYC?NH`N,#YaLm5l]u4[)c'Cq?oHHhLatg<f*V;Tc>,?*)(a_Hq*DgkS/TJhQb9-e<KJNWALe%eNh37E;Y(eNa[iZ9>nhAbEJI8N%;)J'L9R;lH'Z`#_t0u2Upcm/t',re\:g;_n8V^a6gru9.H:(e&+<`\NVqX%htTJH5W&4WO%:P%ksi9XWE85?P0CQ=OJ8^e*j9>q&C/44"sC-#5B@X=G;$Br-lcgeL\gF?#)ku4.5Oo^U9&_^NTtn4s"*k%Ir27_'p/3egJ%N7W63=!%*VWB;IpB%+U27#RYD;C$8<XeiotNd&_p[j`FYd$&YAa-Zp/"!OV/ZV^eS(%s;sncnT;?<bA[$\SqFWN>8n;<g<*o[eDV%Pmqu^@a%LJeg:R8S5pmtX@1[JGH:DZrtbHXMtUeD_fdDoJ9JZe.%i\20N:?AAg_APHoWLN;>=4]"ZdmZiE$L%%d]l20^"[=>c3cE1G\'EJt$%$Sh4$qr)f:Z'qF@%YuTTQ_H1LIG=oR\%_XqCV(0/5/f:t0bL36[K\Kd!)G%Bg&fS^Fg9_*&hc"a94IS:Jsl!\aPD?Q\'Mi0#IZ(-%pVQTI..Y#1n0"R:<drOias/hbNn_EqD#U1gX%t=T;gY]C>H=LsIW(i6U^5;T8c=.-OjblYe`K'h,Y%4q%ASj-#;WF>n"1"DnnE0P%O"mPCTBq2dZ^08EK`!O+]'MRSC?-6_DUX!BLmjdWc8dpjB)H_hLcD>aZZ1*%=TYhs)7bK.Rde\04&F4O(`==uh`ounS`ehb0nFg9%\pa@u^b`'%-]-/h:#dH^L?IcA8GhIroGVrO%/<"I@T9PpmaK\G%[h=1/Qd<$JU03K;#=A]37$k*4GSdn%c%L+:IZ2Um&5,'_'Gh&%W8L,.F@2UGNd5#&5/H^Z9aMNW9u&-&]la?m@J65e4UM.U@2/<'dsdS6RtCbi2FZdWkQ=?1:E0beD>[4?-pW+2\p'TnF/6&_K]&^p%)"EZJ6esnaof]*tB%LrXBr"%2phqqu%:_)Q3V]>N@5V$R*+UsAS7Am>Q>44Jg=.p#N]>"U&N<_GE"BCN7\)Fl#4)0MkRFM)]#Qs-%DEN`riO6ruQ:-6uB^6$p,:WXF99*iM;b*J7-h%$+I=Bb?EefL&;KqK\]6;0Nfs$Zb_L4(l<3j`Bg,W&\C6K,loQcVpW-/gb'qb=V%W$*+6:Ar.m4o?Y\HT$!j#a:<R+*6_pe?@(6#q!$ldYd6fIm88-Am_c[n+Z00"d=d53iq_T-C,jdGDtZP(C\6.^N\br(_#+uHfl+?%XaC&miB7:.$_B_RhPi!>F"Zb9K_7oLeO!7?q_?C<WUG$lo\P-jc;D<N2TlYg]PiJ=a(r*<d3F>`Lf+dH^0mk9"eC9mJfn@_e_9EK%O.+W.[T+$7J0YB5YloN'95UGrq[Xs_YB!2;_:G;4iU:/e5L")MAO%IO$OmCdoSeO5];qrX'-2kg)/(T-KCtZk!HGr9M7P*L5olSg%UBV2#-[MBo!![nG/TU5rWJ7:ZO-90^[Ft#g*j#`Zn&"G88q2*!*UG]M9e\sAhgn)8dTc0d:Qr0"f9[M'm\'Si^AV_p%q[UUqU93&%IR0."Gn5%eat"?1E"I(X<Ei7sHf=&?"*E0eU$^T2=g?Hu4jPSM2VLmuhFTs,,'YqeqZZNR3$@s%!/'A2A`OMEYq>[;O)85>P=.0L%*04sg3]+FBR#SFp\p*29GD0t2kj:],<\!*H*UO;5PmVN;e[nJn2UAp;-q`rFL>p=?o0>8LgT#1FU*mEZBW\/LXli;#'^Mpb6Yj`o%8gmFS;abZt-A%"c6g<ePe#(j>0KGuTCnEn0dBZ"Fgb%-f`D<JkbYJ0jZ1k&j"(BC,g+5j3XcnC.6a=<NltouRZK<`[RBc0u$0='l%;oiiKRjE)TigW@,<4ds'h)nNP61-j0loh[Hl8c4q9!5;G0"hp,f$;[.%*e2dN%q0C-13@u$r*B8H<=%CQ)t4$W(J8e(3Z\E`P"e:%\n_l=jVu1Xk>C!>;XI-Ch@L0R,a5]7J=fe_]+oM,fC[?k,Q\Fs-CW(k+3W5&H?CT$*spcUeo#03O#B*KA"MkQis'o7N'0;Ro)2u%%#2OZ=?WUIMa?^oYgYB;)pD/`to!Ub2@*CFn7d."gG^5Jl4m:S]b1:n8mU4P;YuHS5(c*RE$\VTJ[[H1'YVJ/h7$^q<*]`FN[`g>n%kL#JjK+ckSQ-p`gki*VK>7B]cOu.('B4?)TpA_JnSm-&RbI[0XkT7fJU1`\CD6V-jZ&QS-YRQu\n7$tUCS1:_>l1LuC:;WT\m);@%p,V"hp/ki#'eT*;2(LmKpTcm:W4ndLI9&GNlBM#(gHVTelZRVqZ=R+^Zc>9HgaSBHfin!M*o8"'2t,/YFShZ\^=jCl<bA=0H]).T%(/d2B^7O)Ys6%;@@pZ(2pW!s-qcTIj`p)=PoAF490\gM\V[otk9O=Wdp@dh2D0Di'8#@=S_hia.'K"CjmJYLX2*O12o^sW5e(Np1%G4K5`N/mmcq@[C_$4^PV^O#3aT5S?pnAtHK4Ds&[Ia%*,>JL.8-F_H\G98Fr\C8TFgKa.)V75u7oLnn\^AmPZ?d8'.;Q&JZ9;`;a%)^ibu*`f0WSQ<b@>Q=0BmZ,M6mG$0;;l<t<]rfnk6)QMU1Yo_?)qsC"S(4LIFoC?`3sE*0lBXMkhQ7fjj`Pn9IJEDB2nRPJP@*1t%C:EphSPh,rmI!%LB$HT&h:f)OD,.!9XnV)QmW;4%:QN+l)dgM*Gii9*]uT$@SUS.t5Q<7;e(<IUn`4.PVppWH]+n-0:CY'Gb3\bA%FakUEe'G4pSrMlTqV1m&pOYASp0?Li^AMX=HtFk7e"a73GIa8N/c;#ae'][kO`%ocH,mt/Cj)]uAk29$LqRGEqV<,bj`W\*GW[e.%&ijI)c\I;En(5%Pd-5B$U%t?gcAk<=c`,BI^TBW_8_raF:9WXpmaT@,me6*@G^[o/P-gk8Cg,c]mFd3Ja#.s"f7$U^c&[ALrGIBO%IJM5Ne$\po*h>pfp2OfTKb]Vp@jc;1o[2^9RqDB`d9Bi0>=YU!G"+GT4F&q%*`Ap%:Y[BjYm)_+0jjl1SM$nNeWrs#5/$b;m(k7?%D/H+2eW2Z,HKFZ:SU,-/h)F4@j8U+#5+eNdh[HtHnGW=>Ca)lgY?S^]f(&&Jq;7Y4f@@mMD,P1nn\smfgp`.5:>G#]l`E=bQqP0L%]kQX`>;%qM-K":$1&.lA:F?>'?@4u`s7Y:<T:bf4chcLYeagKRn9">!rjTN:ESU>tD8j0D?Ydj\Dh$KOrK-pDrSsDCK\FFS##F+5%$i_R2Iqq2\hYtidVu1HtO)9pmHlII&C91OWpRAouo=t7`J"=jap?68V6fZqp'g&"m#Pi9[s#e$>rK`-6iaUKJDT.jrYFamkrM'!q%0E9egf\67Ah_1GQJe_3+r[p=VrH;W/me.q#gYn"B'gMNfjM#KML<&.&?7"L$[IV%?mB'\RIs]dVJUu)4e;_f]B-f.d9g?B;rq,Wu%0qZpcAbYHdS#*]=Ykd;-lBPOUSq$?WFnG7Lmcr6em\d!E4Rkh32RZu<5>JA_++.;-BNT3&_!#;rMPUa>dJ;ZQcDG:p8(NKk0C:Ud%^AAL*q-prc\ej_'e4^ZKbp9^qk*fF'm$tu#4uWEn\sXfoptuHf"Q]79Gugi]d2,c"VekPWF;g*=`aS*O27dYio^H(&Vki&'RJ]fg%k;6%VF18AqIO:V'r(2,/I!@^.WSJRf0CQ?Q;k75g9T1kj--HAdJ%](8e>`HUgAdf3:@7[NI]"FVVmRk"XLVQdrc:+HH]YW7ml?p[%T&b&eEuEXJ$ZbFQg4)kqU`,=iELPMD:8:b8qO/2prS.;K:8(TCPL:;^SZ@7?3d#0!`I.">kPWc0GU6Pc^<\@C.fQ"!QE4m[p][0Y%<o.Qb>YXeS1u'jEn]&D&Sm:hm@p)L+_eX70NW!AZ+8KQG3jV^Cf0?"hiC?#bBq-MR<.B4;q=`d\N.F0p_JcZu4h!*ll@*Z@rgXg<%Sc<CNks1J@f0O.6gCneQ:Ng*BI8@fR]JoibGiPF8];^]a:1NEedQSuR3=YWB?hmQ_?]TuT4TF_fFWCF?elQK2b;2XEpq!J#a!Nb2%$`G$$*Xm=6D;>(Gp[0qT:ea;\Ijc;bW1)I>F84q!e+oQ\`Js4OC=/BFf%q/q])1[_@'sEC\'0oo$YF(lT"WrpbV4BmpnuU?9o`cO%+*PD5#B;plVeql]q*B;nCB'fZ,\mXubC;/=]324_@\C8:5$WO(e6"//^K#&>%i\[;?5`3tZC]T=S=Gmf:T[ajb+IH"k2^bO<b_pe%pTRaOXCpqTi_2/o=_k75jQtL]hrS_qcJ:E2@"#gb$]*WrY"a^Mf"Q<CYbkd*hJO@YajVO*p31TN[EFL6n>SNVdmm3WDmL=*k,B&E%>fP9n,?[r\4-^h`[^>Po?,>%O$r'Oe)/9SUR9L`Xh:9hRdB#7_::T-++SN3]X4<LBV)a%i$,N-)ds:m/2UV='rn2;^V4G\gf=W2?%jKSN8Bj$aVPSW.FZ^b?nEb+e$h0^u#EU%'n[eqG#P9]X(;jHnN``g[Dl,^k\o=8(D(&<-QY0p0XSEZs2F#X,GFCC40EBK=-,>D_-%.%(9c1=CG8a(7V:hX<AV=E!5NomPff?[A'"Hh2)!4#>?R"FE3#:?PAmrn$Q(MhV_m=L!H0&P]NE9/\hF@83gno]/^.6U/?<:c$;p%XCj$dF_*:/@r.<;=4(N_?n/Frr*pZCnPb`UU0]VIVaBcbUQnWa0@ig#m(0]/k+F=snmpk*qIiJ1#mst@XSf;$B)is*#Oc$)6J#)t%:]:2@*q++KRNkk==SpX"&];=24D__)hq3>H\11cAjpc@MeDOA$%s#W_Ik0["Z6Q`eG/O"9VKXb?\lNX4<6AmpHMQJCPB17`[!@&c%EG;qiJt7<>Ir7/Kir,Cia/-$n%:tR?B%#?&_;fc)X+Sen[#?>9+"LY<n+-*]YGA/%P<5+p%O\g:5ai*DBGV\EOti%.#Ie7e=h5mg%V+%l[BcsC=l=,,]Cr=_aa,LK>[E5T;&u5TbdS]jW7[fHTEG91\SrWTtQ.0K.*e$;=V+&d?1>NkU3rck<26O8[lf<T'/0N4!ki$H_%N6eebo7rRR!:'9,8HqGk63jcc`;jq#R%q^$M8@E^/F@q5-i;?DU=5;*l6qd!WA[85J'C9m*p8m8L>j(s5:6COFQ(QeZ,qjr*uf+:%`3STTZ"s_UW0CPg;F`j=)!HK/`Pn.mRtm:SDT:\JVp7b8#O`:P8?Ui,+7UD"$"e!^C+OQcQ18aNMDqXifka/DRnGYto3]7Hf&1nE%R[n1eXm&gI3B4;KdOLOjh&H$t[#hnGo@.SSp,&K<YA)BlZb:I7I\/P=gb%LZWJl%'Qlc]7?V:)YMZ#EZ@;'cj4>p?DTZP[0X@ggJ%X3u31Z!qEY\mkt*WjGp_RiUm8?9/bMh:mOK<(A[qjAB/cpc)EnDk!R0[ngk7s7::*Q=XH,3mX,51mDu[Al_?BrjF!El7:H7KN^fN%*Wr@"kBf1&RtdEMBY?)">*bg:?=I>(l`tH`"C3&pO-\1)&Zf`mhtSVG$;Xs(oXP&;T'_Xa;LV8H!,OCY.kC#6eA=S@o2<H_MT/sb%p<Ad3G'aWq[-S^*4C&6+gicjGL!?`!`_3d>ncWR4P2u=-4+0UK\<V6J=3$8A+o,AQ/%)QlKdb.C!k1/+]MgEY-D&bF:JQhC$?O>Z%H_E040]E9np<Vho-UHB'j3(`Nh4(LBbh/8h!a<[mp2A\G)El:%BQY6Z6Bf4<BT;!dF0s/)oh&Fd7IM4URbE(fN-Al$AN1TVYs$mO%VKB&o%nCE*IG2.2E&=rMcI&q2XCF=tF0rNUeC%+l*"B"q*3JY<9SZq<2W?^L\j5kA'j8lr33<"sZaH%0oMPEJ4km-d+7,="^m<3T%g,Qb2a,Ed!#\ZReE5o3""Z4aJ0$T7AG@n0pb`lZp8[`KeEF/P9/`6%HH'n>sFtnerRU'+aX].p$dq&kSQ61k9.:lD$*)1V9;(BFe%Ulr2Fet"%$[Q/i=<>p>`gF`s"=k?\s[`&J82W(^W[mFoli2M@J='cegcDIP)Q\MC_B>#@YL3u#V4:(nWFtH&sFt^h]:6C!4<f0a9%IH^Fi<YAP;QjZuiSS%ga:DW(]H.'b&EsZP_/.7qWI,Cj&):J#ICcYIs/8Sul-hdem0V*u!65MV3UMdCeP*d:nH8-?D1='I86Cj_0%CQsgbNI*rPSo/<0=,@$IJ%!g4"`!BRhi$>#gHK:2i%6J1Q#V(i?V9L`B;oJ=S8]<["g7/D1@s/$Ud5`oXIWA9<j?c?cm"dcQa;I`%\9hX^Ai_-,f%6(seo=@.*X\Efm>">^9"Dl\35B?7C94o.:$/sOeD%+AGY$+$9)4[7SO>+k=bt_Rq,5>DgfTSoJU@O&^^&U^&_Z-#%Q6G?f"R![E4C3&Ih6FabCk^Q.72&iWr:0GM\GBcbJ%%34ErL'(C[M,r`CW92\mbeJ9D+%20m(A?3f3A"O.e'ncnW7T!#W:V"C3fe%Y]gL]0nQP`4r=]60nQP;/_D;&Xr'Gpgi=MS\mbeJ4'JjI$sbT>Xso:%%h)_uK!%+skW\ZiU$EQ!llSUHP*"HOYEKt$R9)'03h*fs%]e1CXF]dI5),ddTlSthR81VZ(U<t=]*o?!h&M.fq4:EPS2T+"uH(AtlgXT>=hn4)g(Tu7Km2"lQ[B<G'9H;-ZAjP=G>"#,7#K#6/%Bo_`V6Vj9DY[i3R0dB-.\[(f?T@.JDkGjG/D])GREaNluV"CC*n6?^"QYo'0H"qCI\[H)(;VSBZ5r.8BrJoK5=DJ,P[VSk6@<K(r%Cp)4&D+mki/-.'^0X]&J=32S1@(-Vss%5ke>:5JO#u<4iDLK-s%d36eFoLq>P94`l2FFbuGr7hFVM%[mS:WWY1tX-$icMkt9jW]?%XLB%[)'4r]AhO[o/B"pD&S-3brt[%TV&X+Wm=H+S+>KOJj/b7sAlIR`3`!JImK]L^d&[^\3Hc;mfGtGQ6g`%Ph2XJ/k0aDrZ<#!8%`?"G$+Pj"0d'Vq/a-I_?0#3/XdV/'1)I(h!J%7PQAe/KNBnd,p#7kDik.UE_]\"XP`/&<a7:X;:&9=5^b"kK:`DmJ\)&Hi+^fINJ%1"5NI'neob?a1B,f%hTU*5@PmIlXF9#sGVBE87#DR!l+Y(K6F^CrB01Yidjj#qacW5Xo#FE@J5[8@jZF"3(:^i6KLNJ&e"QU-0HB%S&NBR&kscpTl.<Y0_8$;]E[)r#RY`9(DbR&@)G(e@XNHCnkaiMDcUSX:Da(LS^2cJjX=]W'h!=N:i`,G>@("_k9cbBNoteeU`Pp9%lhop'CQX;fX(FLM+6h6GcY--q#P_.$G[*&VBi?/?e`Wg\o&Y.@qUj3UGjFljl!n"ipt$feHuo33GF]df-i7&E#'-e#hOT"k2e60)%]W4>@kE2_SWQEWT#1\u/VI2rs2-'KTVc"S(*%S#A,@eaQX8-@gbaYat1A-ORR@(1?IbbdkDc2li&+H+]*iQO]ja7jji&P9TC9kmZ%2=/KO2gp$`!(4qO4EOY#ktR3[R2/1??tfLbA/Llhm#fDjES"o5r3!gqQ1;LtQT)nQS?BXfR*3A?@k/%3BlCXO2GG'#R<6!er\97J%b@WN*Ej"u7QFjVSf+"cRjFrXnrPR"Q;YJb<=HYue4q<oO?"g.^FQP:N]Q>oJ&[&8gBf8o%k_Q;*2Kujj9#AH0Jrk)u`PC2\V'rlb%gA4c<*-J`3]tSNlZEe_b%e]Z&KSPan;C`r/d!3(gBri+5>ZQS/ODKQg_tB4e=rn2UKLd+'*Y&tC+HYO#Gdq@'RFbQUGdr'"NKR+t%hXGJE3Ud-j_mN_.*E2f\^r(:aes?a0XL-M.mM.D+7o!TQD@,gcTQ27N)J4(UB7KriXSuOjdn=Lj[RYJ7V%qcre7VnlDPn>&<@Qg#%*uOmnIR-%A6[9\fOYXGLkn(:&e*9-Wq=(Qc(t,bQ6^X--;!o0DPLGUtE>n>A6)5iK;s7dha)F6n27Zq.*:)FU);Tu+,:Ph.s"Qnl%/VgPHlW)['"pgWPj?bs,QFc!T3r<@.WV4bB?J%-=&k.@YH8;6@0Ha\+*E;9hR_u[le8KgAJk/ld*K$e[8#3/I<kGUI7&h01AW>%\%7-a$XAI6^XZ+BFM5`!q9"%&f4*Y9Ogo0<kdT<l[*V_#OpppK5nCFKAAPd$73ACQ@rBK:ebAY=Ung+*qHA[?4Y$\aeTD!"9n5saIU%W!1uZ'Wun7AS,G)K#4eMZEs5\-PS2^XrKD80$C:LGUT*'b%B2.1DI!^@b<(QS;FB9Xs,uMiXQ^^Z`4$BTYu.-W0XhEeC]:(ScF'G%AIJg<_lVA);R*#1S/C5a%Q/fXb64`ik_FjYY<1]n+f-T]3?t8f*7W!m`LV":jQq%TDYqrp5DQ9u+&@XSp5dg[X09b;E:lr<L?m&b%nEFn:maj[qnB];:g%3peiORL0(&W\72<1t<G##CQfR5fk+(;9)!V\^Tnb_sXD*fZ(&\S`gj3F6W9GCbK=0!)Zlt2mUT-&,8%7Wk^%mf%UY"1rt15hJ5YXT)4PYl!s>2n.6Bp#b<tYLADAKO$)HCO%khBa`R1o[dZ,.CK;n(B9D#f4WfpYd;f6\Xh.M^W8ptH0_a05,V>n%O)O2b+6VV.$5%Fl2S[_#\aTET:>>6t]:94Xjk[sY/*_4l1:L1C0+WDf_msh/IX+oke?l9CERI""EZ6aHo&\jlpNM#YP@#@q?/Ka?%0c9k9]QWe<j6unQNpc1TH3$)'p8UOr9gUg<m3N4nTCQnlb"B3]X/4CK_.LWA^92W/qqj$0oBrm;Sm5'PZ1go+=:agDk:.S-e#WUp%bdeY19laCjD^q&0TUY!X1[^CkeI/ii5"2b:*sVJ6c/b<u)0pYLpV%+''"QfYl+/cZ)D_)hj,GPUo?59P`as#+G7BcYdX4\-\`ZC7%O\/dM]KGM)O%Ml2F$6&U[(ZR8kupR_^N8:]Qo6d,Q5u&h(5#!'AN@Dlmc#2lRP)eFS5FR;:Gc?X!_@*e@fL,Q/1b(5Xde1pFQL3e%rLiC1RSs)a#g#E^ARXh\Etisedq-L4`+qM,1gQF'gajr\JYl'l<h54^`ErF/dq)tPnh;<%UZi[tFh7S)T[@ja]A'Ra#DK%u_U>h\%'Db2IARXhj_[I5RQaM<j?3Z:al_#[9#YgZ9<,RAuB/Emp;k<@kmM8MUYSHK&'6^]k]qO\2<c#Qb\h#C<BoH&+1gLl(X:-(CQ\D9:%FM,Vu>;TVLAn7!:\h*2Lb'G'>R]]$.f`@f2Z?E1L_%$lJ=448<'2;O>Gon/t0'e`<ef`+48hhU+WuXh)jQ;CnIIqJZCGl0"G?ML+%f1MdGDhbl334Zi&[8u4%#OS7@qs(I$Sg*Qr\,5H2[#9t=eWjF<akS&9@S(.^WO$&r8HS;R<usO&.da.t0Vg`[aJrt3M(Y9Q<9>m4%O=<VNlD+H&(fJ4ZBMbOdF/L0ufl&/s9U]NN>=:+c>:h%LW]J*LbIPIc]B7D@=Reh(h5KD&fA(MYB-_Ek]=d8YkI.JSMsblo4Z8=>%n+k)]>]Wu.TA6s?Xq-n_>]\N+8$UQ$GEl'?./dIn=3lSAmpoaHf6=NUBROf'r<>Cr_nsHA-Wl]p$a[2VQ2n\.Wna"^Z+%7m^th\$%\fb(J$Qr`]k1rt=2=:3N[q5?@@!&M*^)er+.t`B>J4b0XRs*Fa&fL$5J/NNM_cA-IdHSb`MkM\GV+hcP\t#Dq4>>sJFd8N3I6GA^%-u*QpfhgGT-*s;&@32<oAaY:(JUF!U)r/'BBTD>F^>&2QStceNZ=H%<4cZE$T#BkK\!*)ulp=XY;V\Q'Y]dT`mN$Zn?r]I,X<cYu%;?Ck/W?a8mbHC!(Ctb56$!lhfS<P1"#\9m#@SZYa:D\o+Hf\L^)uD40C3r=FOEg(Fk>#/=c&J"">.32qL(@A]Brn.L/S_D7gb\N+%$[!XXX)i1j_-Lqi!*'*1SM#I%=kOhN:A3dQ4TH@3?9N);"/6HnTu/U$c`7$YDrn-SrDN2'G.QY8*58`9)t$n7Dl$3(f/MLXWf;4H%_d+GVZ1hb\e-`G1K4q.rSuD!MH2Z]Y)E6d>+2e(r\BEqe-#^"?J&>P&<R$)Dg*ol=UD"aH4?-a9B3')Bc:dWAg<[`=FkOBu^]!Pt%5#hsc=<.CGQ<ME$Ap'M_-1,gA_//_&90<(SCT3T9\o?KagMpM*IN[@@ejuZ18JopuIJYapB:]!)Q15L-OCn/CpS.=9+Jra"[P1^e%CjHC!e&d%(^@YZTNZ7;#[T?'>mO.b*gsil`bN9NI#%L`_:@;2qYUac3f0NI\-J(oLT_^=;T<aV,p%#q-[2%`U>3NID`R*G*2`Qc^%@2?_f@9I]1EEtc<.ScF,7;UbnjC;G!ZSm+Z:$(YF;.GY51p[fUb[D:([HF%Mb$OgE=M4_odLG9K`rqMc#`NOd@7PY2ejF$ZM:3[M%<#V?Rqb/_8&$We(iOP/1:W"u\?3U,2mBD"W:OI*[i$ri#kJcggH>n^bWI^Q@>4D@W<;tutdIt5>?I.bLmO#tln'ZfjkoR:4Za$(%%ZmFQ;:&@t5j4nW3[o73n3V\]dBk:O%]"9]C:@_e;`s&#O%/]jkDJ\)MVE@q^0YGfJ_:,kUBNbEX0)G?`-e2oORRSgI.*#tMp@;U9%ri_`VT4dT_5^<+G5?cp9?BZ(=`VplpjoGsEdIF:5rNj.3:U<)nA3DTM[u`IK#9s-BAi.!GiGYL-?Jb7uEMk5gGOo'H:UKI<Nb4Qg%k>)BeoBE!fmjd?.d>-,m1+eN6GVNI_GP=l\=5tb0M,85^g6ipdH@'P07<B<5:EOa8Ug;0'"teQop;D)H4K-MKg;bdWG?q'SjeI=R%V:@>>0e7Uo=2u7iP!G@%H1IY'?):T`C:[YgI%iu[Bj"4EXj_H*!a91_ADoRDG.bG\1b,W>e>`QMfPDp7=r6i'Cp&#3ATN1uEQ^r,%/2=mdN"lf%f);=U&#h#<USVF(GDkkulF^ZhC"4*Q??U4&$aVma]4nl5KtY\4n1c$1[GkP>nA28MjkM?"qrr?B0QCkof8c*"=Z]<Z%Ya/!Ts4H;c>sEe?jGq`tDl[H$],bh>bP!Kb\7IZ7?r'4)Rq3ltbb.QdU8`I)<e_]nm$6B!)^sHV`N?VF9P6hq96$?JOb9P4fuWK3%WNsToIR*>lZf\i?"KZ7$_GB&A=2J\'*,_6_:E[1"aJuhuio_tQDN"((kq,m[,*dQ2lE0Cn8Ch*sX:P)'Y4@m]UY,(p'qc3^Qepd0%[1_2<o:VQII0V0.+V8Uo1Od(qPk1aSL<B>390kRZJ3#!4TbYDW1#%)^EF09r\cXhiI^*c/4"S+\]=SgDK]VH5`B$C>]:#JTBS0Hm%b?Q+Y1*(k,`q&f?*#)d`A!YG6cR?T7(r0$L2=d1aIA:-IIcR(sJDL$bHURtdqs/b5CqbJ6>81IJ$t*YZ*u&*c$t,nb'O]VeA;T(t%$Eu&cYgl52%L#t-/ETFZMG\nA2!qV!E@G8\/HGg=9DP#*\H?TIk=bW>/;sP\V0n\;\:J#0fBJn$_-G.'("u_2Rn_@_?cn`$KcB6P%I$p@aJR?PYOS^Oi?HUktDnKa["hM%!VIOJA^@1_F^=@-%8?RNoL?a/i?hrDPrS6_jR+_OT6fm1j=6pZ:eWY?nf<=sM^Rf1-A_cTQ%ln6K!=*Aqo?h(7IALP)gb$s>3I[O3)Haq\2?R45GZ5"CCCHt.\]Nb?G]>$-$?GA,jQ@7QSf=^8mDeJ;1?GGna<-u1-0+3fm3>\jQ%Hi6!&nmLnY.i*5l%\^;9p\L.?V%)?h^BD<:IB-_UT>0!)rOSo3?LIL0Jg1a,oA4ku?Z@Ten)Na..bj#J^-UQ?<t'J[8$)R"f<70Y%/\;?ap\4M!>AEQ9f"Ko*Q[PTl>Q$VC?H_0j=1jcW87I)Cq@tA_=5(l_hX:(&#*h(pgdCD0I_!%$QhU@LF8!f7lW4@US4t/)qeE%=%MFSKWnI=CtX33]qokUpt't1,H8U]I]=+%'@SGiHUodf_N<5o/aY?r?UbH65ILnQHhodc%]BC`;Kme,lmMkKfkrR)S5mC2rbINMoU%QYRAma4J?d9XTI>fOsl3qRq=]ri_'(.9>h/h!<Qt7@dcRod_r!lPueJHi<7)X\=7:g3P@:P0UYjY?9'.I*2QGlW8J7hdGm4l\*,,%HQQUEhQ4_FI/VmeQaDp8_X/i9.cXjMEa\Z9hfo\+qA"YAjh@Pin+Fkdh!S4X4?h?`]mdr0qP>D)IGO3jCpn!F9DA2W(#S<.LYoC_%`QDaYp3EiK(?R%fPM#37I[NR'>Ml!Oc'Q,qY?`kVhs-Pd(%(Qu^Pn.HZ%C,CDK]<3.6HDP<t'n%dDpRIf.RMieo2]IH5+!$f<7!A%FqFEE'aGQ'FaNtqf<9We1N2s0bI?j3?G@\A89m]507@[j6+fP1IcdE:jl"]G5#U1A`O5#C\9>V&\TS>nn&94u$s[%UaV%oOqlmeq%s(OOf:tb+o`57nt&kk6MKl+*^gW#,ZfV60qD+<(7M5Rc-bFaRSg$YF.aiWYerV[,;]XW0-3&NgI'ADEe"`Jg6k'$LZY[5t12uDsf%_Xd'QMgOOVn%JZWl)hY61Z!Gjp<m/03nj3ak+6b/X`4*:\+TF;\bC"(U#t`+S+ODMPGMi/n"6ooDh%??Qaa`+rd+HcDoTH994t<^%d>+d3hU,j#^cQgI^%&h_m#6;KT-$i2?hqDsH2mC!.(Fc:SToS_[.*k`@J"I58'Pj=:Cc(Ro6,I8QlLRa[lgh2WRJu4mEtkcT,,Ib%mcW1LZor\!q0dH1)Ys$f]K5q(I=$#)j7CH%[LNGAN)+=tITrk->8.%`QHZK6p/W3Js*Z^gro*U`*EMnjNdVgO3rSqO4?WM]IVcRs%EpJ9p&Y+:K]Xg@+/8MM83G?8ChY24m+,abmqs<+d]ACu1\,PX`]!jD?]7'\jID0)7BcW=NVa&G?R'6'tPTtcO>[.)<rr1m2m5$jD%D,JsIPVeEHietG=P\68V!7'?1'fXf!=Xu4J[/P`j0b<@Abdhqi%u.!^V^$`E^;3%[E2D^jE-6Wh(sB@D]/IF_,0^sWCN00-,Wktq%nR]YNp$2Bslf$CKc_$82=6ISqeu(E5^Es?\qV1kgo[gQoV@S)g*+Rn\A8m#?Xbu5Ik^RrpTC\'VqjWfB:Uls(EW,,4]Ks&.B6-O]%^Eg)InE6>=F/;pTT=+NRo<W60#FcRT2m]l@\%M;/FC'7aMfri`9u"SrhbH+b$*>k04FR$AC\SrXc),),[l&M=s.Yt]i]+TPJ'mKK%La:6k=%Rl`<+B'5;]>\rc#:7^BfoBO/*`Q"q8UQ^lAO,rPo%OYYA4,.cHt9nS&Ji2'*nL!M8%V>r23]O)l>j/?d;WjlV3nR8>N0L%]\YGdHnLbRCqp#q:eX9tkJKI]jMO)PbKY$u,lP9oc-D]]q"g-Pr+bBOm9UZVpXAKqioou2T$-=KF\o^Djq"r$ohN7L]mQ_X%_bnD%k>.^G/H!/Kgfo9BB)cSd"in56%R-a17u?u=*_dcWVD6r/%&QI2:JWU'X=!=/^T!/^+6.$ErT3,%Vq'B8%bXI\3`$-fI+""6f@,4E%7b>qhrl4So;d5mh.J<6K]+$k!:rNL\d@u@So]P)DMnIO%"&GJ)]q2)s?^8_-q6OSE(r+Y/=(eEXq/g&U$+I<D45=;1'eoLU@,ASD%p!l]!*NR]XT91V3[HPVOF^\0T*"SMP3L/LZr>g*'\[i8Qd[9.;7*dKHVgkfG$J%Ems+s4?'H=l.FJq$a:u`Yf3[B^eDuT:"<q#\9%Oil^hV`*&J.Je.dP"un*nN11o4#F^mJ#q,=e)Ts?pXa&T(S?EYeWG(AhqsF6/?6t5a[>:*fpMGHYDr[.((\(*PiC&k.F:t1YLL7)%H>=ZEbq@*sVr)ul,"=RaI.M''M\Kt;cV6'@b2Ab!.6VrCpnhl\Mo-uUMKEN<:%=?==P3&4qoS)0A8iTQjg8m0=ArUM-]\RJJm0E2%r:6K'=m!hqdfOUi1&2X$R8*P@n@"([-hZQDi?R3(Yfo*cgI]S;rd+S<_.-4;&ARBDAm+7-+'X)Um8G3pqYk?Tmc1?2l6R]nZ5??g%2tY03J]/G3WFr+RY=TulXtWRG5t/Fir\JT$hVbCrQa`dLL&7>ihlg?lV"sf*_DGrd*O[RGb)2Fbil9hS7(`0a"24S<KS/"RBsD.9%C\$ZNfZX*@2pZD*C?:'qHu(jgZT%S7DZp"pHdc-t950?%mZb_.-EYX<-E=>YA"Q`XSO_IMrNW>J"*>4T:eg1O'BdctPeP8cL**<7%l4%Pghngr0c-/Z%DSE^U0#hg18UJ+@8Lr/h;*M1@D9nZKSr+%Q6bAHV"QR[8X%<EV'.rrZUP\+.<"j$F?piJ(iam?#M9]aR^\@Zp%`P"-0JO*t-9]sO(rP-I\_g>Lh+)Y]8f^n:`R:)HD)Ct8g/X84b\!(U6T3^o1oBRdApu4Q'WV/pt_SUOaUlY%?d7mUg:0Gc903!o9%b$Rh</UdTHUu2'uZ3M`SE955"kU4p-l:;rnnBRO'E&f+GhdLSKNp4Q@*=UiNY=ZE\qrP`!]MA,D,N%^`fF8]mg@eBfod)T[,tP%N%i9p+2,()s8!f\S@#ZoEEm-<'oQR9*Cj3NLq-VIk1)b[sm:F[gL;^re&0>c/SeI=/5BX*sh?"/,[e,%VNI.g2a!oIJ'eGhA\TS$\M%n9(H.*Is;5,EGECH2;B+&N5\b,QI*VMbpJ:dK0!gl!tMF<#-W3N>4<:I!R,RU).!d15n25i@$aH@:<oR6j(_\c#.!e<pafDHOKGe%WU+I\TZ#0@V.m*2P:kqVRTLH"c"s-8;S"V3#t[#B7W4m<l1=Y/-Ht(+.S;X>\)MNM6[C13j/o)TNkJKK`5B[9k43?%fZ_RkHh02h%]8bpee*_GGs/<s+`pNZRmk'7cqkPsg!U>`c[VW'13^8)Xoh/eY^S^k(1%/_cHe+[(?u'qgd6NT/RTC]h7,'PY_sWhrS]9f@^6nA%%2q5ju8F(8</(V'?Kh^o.c#u=+ZkQFXa0iIlG(ULQC6fF1N0blkNOsmN#s5]^)gZ@.e(Cb)Hb$GD1K?J2@l)b8rJZ;Rfj*7Y*@14S%ik29MZ"Y:qHd>W#3'/2M+9P^i(TkX/ce7"N`c).kDdU+r4r.2rj-JuCqP)P4\LEb1kJ9br,56?#c^.rkV>o?Kn1st*a1YPK]79hA%lZ,V6S0"^_V#ROMBB_X5L$.\bQX7Bss1,\SR/Z^;el)@Wkij`^0@SgN+1t5Gq<*!jN>QTj=&Z3b-=3I%PQ'@?0$Tt-X?N1mCon\j%M+=,o_gbf`q-h""FaNX$+bc=chd4Pgs2-6&mMheOkatJX("\H^Si]U;_rZmLboBtgouZ@8*.%e+MgG$bX")]$(q+$jDa^])`:$-e%&7;4&fP1>K2XKNWrOFWJ]E.A5U!_#T7h:sQ-_,!T>nEAf/)tb2k>]@Dl!6tW/L55ZKpe0BT:3UUbD&CU..*(!>d(!<J3U%hc94Mi%q-!/^V&"eb'tAeOc_R3#9q<Rp-@7uM`D:hXs.[LK+#p&D3@&*BFuYcUQ#d9`mGQ<Ol*cEV5fNT`g^&!E(S'SDp[2(jP>2r)`Q*8t%\:E5jOnjgfjQ2qnHeb]2T;d'/2c&jQ$m92QS57\BDfP%'1\C7^/:Dj"=oM@s3V."_r5[CRgXj?T%>P"s'3o\/k/;f?k!YADS:g!9%>Kgicdba!(XV^XGQi4tlZ-/-%0@A*I]2)qOf=kL+,:rR\eOel75'f8=kr/P1f[QIl2XQ(IX%QmWdJg]!$`I,kY(0#kSkhZVT;h4a%,8eb!<T5J)bYc8^Hnt@j<Z5(eG)]VP(MSqV3B?8^s&+n9I.?Ko;UhSYlf6mEBYKl+(TUVIM9#615FK]]5g3DMH7YdhWW2=FYKb&8%a"O'1qdZsHQdF6iA-^2/)ZR<$[``quoT*aH:<g`L#;#-PrH%`OSs1Is1&"hKJ,/N1`A?6c:OP&Af>$brY,oo<e*H=8n+NNp9mc8S%QY-[,o9/t's2)LXs7'=mJ(\acqnEptTo%8q(rg<(IcotAjo'u3h`lVJ%*_eD<T[Z%<bh*cicb;"o((8ks*@q`4b(&W]QkK#(n,r^%]CPf@jKDm]hd0Ot1!nMO*i>Gd69NOfDY!_g_B`03`#DdIUH:,(=+>IMMlkk/ah(>uiE[gr)(tN#<;lbV4K$eTLSm$Pk4%Q-pigs3%:</+@e],bNZM3Bi(_oC+"1@sqq4#$MrRQO!`q+s@D)Pb:WP8Obrq#+=9D'&FgVofNaVaHc>I,>JEV^rZT.WLP)T-#<^@JZ-Ac;1-%FnF[-D<5G@k9,#aE\[-*rpffRQh(_(cdq.(X6m=@0?s$n03^An)h7Pl^:i5/L<jJj*c5L4;el"UKMbL"nMjrWmqs&k^BOe;KCt!q%dTjXZq,egZPoNG@B`6XqnjuQ\9]0E2?Mnb3Zj8YorX2R=82pB;8&nu9,qlFIf?^snNgEN?3iNM\l1>c`kZ*X<0>Z8i(EM$2lD5!p%U9+2Vb%r.,6s926=0-$<U9+26a[?5H0h6X7Q+7D/U9+4,A^u*-+Ng\pUhKCo5a57j.c^IU&7sCIPWI9q!`>K*P(\Y`o&8q=*BKKS%B[[!ZV/UH`i`=gAcc^h4M-J9,cGmSHT((":-2QWW)m[Ai5L:3"QIb*$SI;aE7Q2.`Na6Q\/2n01p&'t3f8aLkGi`>*NkAe)Bf>e/%ra-4[%;UpA8lA[Sfd0C7+E#:U+o:B@>mn-s[G3[1m!mj2PKh'h]]%996Mt6k5#Fkfk7VJ+Z+'3[1Wtn3Z>]-BO0??-k;/LkC^*tC%$:AA_"$`C+/=Od<'F=M5)&N7K3qiDOSKCT_FU/B0fG^aRe`tahdQh-a2RFE9Ci6=U-!s*"c&JiNcTcaaQLWgQbVRoJeM&`894`U_%EN1T.HHfU#'Brah-Gq`48Wp?o2[)m(?)]1`9.Jcq5I:#"S9I!QcSl"krD!(&5:1s-qq:\al-aILJ_/fAC2!nT]0dA.:1i)B&_apW%&FX9n`;<!<BaO<UCX55HA]9HcabuX5C2.4!@^?Z3`gTGpH/8WI[.bJ?f?qUaD9h->Xo<.Nrf$P^DAO`=;^@KZ@(iPnQPMq2.rI:M%.Vd!T9L>(9c(W=&r:[?;I`kaH]8bN%3IU`&^68$@N9KY&C'hW2S$QW3(0!>:3PG"Fi]((o>19SahsK<epha*[>P,e_s*FG-8Qp#3%;g3B';.Bp2Q_HpIc1VsjIegoTJ5Ap8n_40R>q-F/o?rIVN&+1f?.,HP6g)J).2Z?g,KLU'jms@o0<Is=4nLao?V`8YFLP`@G@UMS%CJI2&RVjTF[((OIF"GHdjn@e'<_<AFQ0E#,N2;tF>5<O"eAU`nk:pL"AWh/M\:$T)1i[crBYrMOGBf_IlL8#KILf?rhgA"PQ?iu<%db*t^h_]NPfO*@W`h25(Bl*gHD]1^Mm>(@4")%@2%FA@K<oQd"1k,,/PRSPCHKoE-%SuYVCLt.`'5)gl)$@K)0/FENr,*MRauo2'%P*5I<_J*9J8_AeW:CL%cB,^NHB-Z_QaP"lY`R@A-A,%f?g0#WcLMr/!L*u_FmA?@44"Dlbl4UX='PEb^40:o+1&OY+<&;!7]+SaX%&,gOlZ^]7^Bn^Tklu21jcd\/:kjn(S3;r%9kXa0p';J-6o]DD%P@UE-$&=YUkBK1Dq_`s=FDJCtHtXh.o>aJ*mN2Q!6;T+85ta+b%/j,pb4rAf@0g*AXijo2I1^r<J+jO&k[iib[nmO+fGptP]3Bk6E>.S@PWqj]b$c>;/I?S[,=B5W2MhN`XNK"GiHkNaq`6jAO1gg[F%/$fZ]E3YGjf@>V8r&!GMaR-*u?pc8J*71tChXOu8-k:%AT*NfG=o*5=F.ULYg9boS+26m.S5#b`%R8Gu;YtO."t?32CIk@3q&f%K%B=/!%7B\<2H&WSl]b_&,YP'<7I:)db^:emdl.+$k!Ko!`SN1kECLe"+*IaVS_g.[,hm9Gq'OF1*UX+,%231sJVWH:kaM,G[BZYJO%O#2W4h-\AQ4DBQjqVk:gCX7J+Jdmjlkc;B8$=bL<[:k`<W/'W;BiNL1WD8"2QG;c<<Q:6+IbMAGd]_!YbUi.`"$GHU&dLj1j<'/q%Bp=G.HCh"Ra05+$6DSV9RZUB]hqlT"Vpr3uIi<dUNl.11"CJ;js/c2:J+ut\J,+KV^^:Q^d6I2YRs^I!V4%*A5/EhM"R5/i;;HR(%-+1KLs'YTX_#umMNIS0ZmpO"r]C?DTmi<+X9m?TQ!q5'Js1MN[7_J9!;C?6=([3VcAUL#>ls;k>h;JV<an"Q>h`"c;s1Z.LW$+%Z%nc._.0HO+Q)Uc>qJ,"9"F]Oo6I^S`iA*:bdqpjr)XddK.ao&4:a49)1O2#UO:@J3G["(XOn$_prY7<,m2?!I+ckMJ]4/!JSgM'&P%:M?7GeFT_u2g"OroZo&cECV*7<4nZtHu&BdIIL2Mb6Ml!&$Zn*JIN>X7+Nd0+!PS"TnCfd1(A!jht4r.qX>"YqQD((%D<_WHK5N@%TYm=X$%npd5a/g_<0ao_H-:V:r0`%tqC',ROYcTp^SahV0.cHpSj/h'r;:Ur4Z'oto,H*;h8fEM2a<)ml`K(E]%m7,H?Zp(Y^(P9%n`TKBrTX!O/5L&.OlE>4jlrD2k,&q1<bQh5mgnNnd.bDoh]9f,I*^"3g#hDbT>)F/rTa"CMoT2qUV*5#gtppnhX?t@r-iro=O?VK%1Go..k-=<_YA\kSr]^;Pn`f]*rq+5'55"d7?`/C&?Y$?HlKt.sVje(jimYZIQE$E_W@kfG\"t=ua1Jpd.<bT3\nA4MT"CP7o@r*p%SK;uVgM2Uqr(7H1q=`UZkm/p!hIc]\cgCPYJ,Oh8D*D_shqP('Vq2I4hkp2-f!6uB@b&\kX49mUXm4,6K3<h(dsk9.qSVln[?XP"%V&4@R\%,bt9=XU-51Y"$jFt<Wend\1nqWSr$]k!\*&*HIF_k'1CNm[kX%LpL:E7*K@oJ:"EOP1j$>\4;GS\6*0IEqn4M#.B^o'[\%Wp*@/&8F$Y+5^cQe20aPU%=-KC<@nfY!)Wp(\pFI</XEeiX(#?8A%?J7#sHeCOr;lkqt,q"i_I,W4\Q@#'rfZ;_on"ng=*jY"]bn%=5)$T7.d>d<%WtO4>YJGaY=g'>&5EX:T/?U/0/uCaB/.2W,&X^WCJW<!B$`/f%AOf8\#ubd_*!=mZE@jeL7F$StSZo_n9JQdO;Js%BebR'CS%ERdud]f!@D2@H8UY[[4%i5@=>540-a.ia!!%(M<U_=[Et[c1RaV\AkJ,3^IC!3%N/'m6:FOXWI#<*cfr\&W.b6nqR!]9%%;E=Y9iEk?KJq4]g+[Ar>,6;"8%(mfmGgoE>SU?_%qCd_7+hT8+@_^3MPqof;JD-QIJ5.MYsskXq49>3/>@ne<mu'ld_(HOmqA2=%5;4iB57XqG<U(oe'dae3rC"$WeGp91GiI<VIY#L(?hp'IF\(8H2uT*l0=4iQJ=;Zb,N>H:Wu>.M)o[&S`ati3(uNnR*)4(<*u3AI%?tFVCNF2;:!5DI0(5C=@411^DBcBuN;q%1I5YQ/]iLS08YKf_mgUV_p`G\Z[(o67`2F>lM83!>bUeOr9\j:OK9N7]NMkTKNiula"%LtMX(ko^Soej@:G:QCU4+aZ+BT-ZoO&-['s@A;l2IekTE3gM\R3(pUYb+l9WHZW)PeELLjIY9na0jidqTG.m`(3iN?RPpCB6pi7A%'C^B_NCdp(DUY$D@h=L*Zr=5dL57ah%ac5dZ.KEc)J>&R>"gtV7$^76Qm%hjKTejN/2j&4O:D[?;%o()E<9+a(r]")BNu$E25$.n%")`KIl5F2%$Vdtdis4$+5s[=\Zs\[o<>78\,Q`*+qE=%mNdPM[DX3(=8<hCrgjJsu1uB^gVK)I4Zq/1I;MU>0$`k>SqUqXG#W:lB%oqP#O&da=f-]c9FrM\uA.?I+hldRn?fO5dLP<+(Nm_lWPVUL;Hp;:"1:7oql'O[I(j+e?ZJgbLtIYO_/[#Iu(&&bP#Nh=jNbud(P%?5H_b![:9@"6N@+^6qdVPfDY4oJ8O91^-71nVn!FRsI9e(D2/`4-iE*_W*L7!cc68.J!fc;e$_Ag.p7FAbh8fp!hjC%4Uoc6U1$2%NBf*Fac'r"I+?kB8TFQMq'V"^U:;%^_lQuQ\X7o]1dlbt82sp1%JSd!5:.gLPSu!ArTfOJ--a`e6d+Zf\Y=e;]dW'qosU3tD+32F%_D':2Z(Wrd&Z9]bmP#8D.Win$_:6,kjlIK-#/u0^=&b'^rM=Q;U?0)]CRX<)$p&34k[AZ[#\pRV3ieAZKC9Fs#t_#)j3'8EgI=<M%%^"*YXLmu&7%fY%<KLGKj404s'Z(^2^h5,Q`0UPbiXdZ<(4Zo%8U4#*_uL8H%(_>bitJ\$$bhn=M*?dOI*Fh5%1nl&V8m-1&MZII%+,6dPC_N$%#AYK&bNopP.M-"jiC?fNJ^`#a':K4b$L&2p!msdpM>WWrK&S&?%Pa\F''`R>4>@snIu)[1Qj`%M$Y"MG(\GGh49q%V%UlRo2!>Z(0'qN`U&!;0JRBPQgT>]\\L%o'fBe?),?=J[VMuuZf=C_tiUr.r*J%0(LJe>pLa`m.GeH\mV6_n0Z.cdRl1a,`u]/$16%U,SfeBUL@cdZ'(#nq]hPK=[t:qhPAbJK3.!iYWMK,CU>2%42)rK=H$]<a;m;UrKt)]V,[ZTSUqCnaV;I8GpD.:#bWKO]Jn);I0t$%o<m[=,D\+$7"'t#K-,fu%icf?iTV&_!6gF7=Gna!%B4$7#Dkn87=<"1XqoL65c7$D6muL/Td$2)!^BFEU@Aj@D13/XbAq[B2!OpU%<N=QJa.0R-KN?!'0c#tsi`2k8Zp*e0Zk\.D&8F:R`JfjK)"59n(]s`4o4!P.B5g.7H"kaCW-sa.>X?;;!]S8`BU%ilAq?Y,G"X2B%o;?""!FgcMOF9Mh8e@K/<gfKjO732pZ-4:Vee$l'?P`BS85mq;c(bs(UZkr;=A10H7m1&'46Qs3TRp;\j-UbBm1,pDC%K9,=imll%-=\#O<]OZO)kRodG:$uOE&_LKG%ekiG_RmpkWPkX@E=t%.4&S#:4jG\=t#i(?pj!eTPlQ_j9^s%KAg=.BdKtB`)tY37ei_?_e*kZ%?nW@a8DlqZ?ug(ld#"PGHt8'+-ngT#?\j*"2R6n]UXC$T2X$OV4tG3#n=qBW,nDAX<#NYndd[a=q*IGK7UrG0%j^"e<!4e9a$Csf%69J)B0pFq8L-A?QfeRZ@Lfm-__a:;N)XA/bJZpAOQ!#:%L'YU/k!Nl5/I7Tr81Q:9LCR?QO._=cUOc8JURF/(,c;9H(_bed8OLm-%9-m6lL%*H(R&8$2-rO$K\kmm9K(``rrZmmsA5'!ED2a`$89^gHJG8mk-itetOe3Jl_L6YFTGE*2H.iQU*ub=:c?]MT"._&?K?\0U%q)A`;hYS@r.^_jM#pk^?"Si&P($:*MU*Q/#f[1U?&[^%-M*9#h+>MJ=7'fC]C'a*sNEEBj&47#!RL'n0;uNC:Zd@_+WCJdM0dtMS%qWK*YgfB,^0.hXr1DmRETh,nC"%#;"7A4aZ"RW</C-R_!fq9FKjqr8RK1&X[Ehe;s^pcWLj$lW',P9)K&O&bO9-icdbhj%E5`p2*%O9??@c`joZk&*T/)Z2YfQZNEU3"qT>pMUJ#S/s4#I%pXT;Xd5nN.bZ^=sI&RS'>X/#XnD.c]iP)f]0k`^iASc^PI9A\tO*-R$\(V%O4'U3*YF/s*dJ@d2]hc<;\/,I6mQRa&4_QP:sf#mrGUna>0,<D2S7Xf6P%9O<B0:g=H2e_T2]BN6q0c=,Qb<(,p!>mL7\Gu"qA<Q%+!#tI8PJ>TlmG\>kYs;Fl^+CV]@n7F0b@gbaA4t9!MFRsp.0E!0Qbb1kRk.Hes&`"5Ss'p23+/.G^eSV;B`A#U+0%Po[%#8K/NML%9>OWE:Y=h'R;^Lc+]`:'*pMft^aW-"!b0MM0Rgsk2Uo4WJ;3PDO\7Ef>?MY@+IVj1LfB;[VO3:hq#oBfZfN(%3ICnW'E8c7eQDK8%M*V2lV'<DW?m?6_0pi)-qQ.ieLjf2["D"TfXc\@_aoh;Nf['oGBkQ)8=RnkZV1Ab32C"IK8<[o7<bbq)BIU6\L_(B(CCa`>\6@^<%jJh^dEZl@BYbspDj-)J/C_ArV7KYA<@Vpo)#D`%E!/K2Nd\VAsn`ZphKm/&tQmJca0]#/]`;\5K[(`R(F?in<R(EpIKLAps,D4Q3%KRfbKThBN"%&?LcP73e&LnnqH[J'k3(22#1+lN[5Xii!q$K%m3j@YStXFFHk#$#3KWfCo:F29E;c%jS_YO<%h(j^^2J*?b&+tJm:%2#mRKETcojpATZPRiCU<D`M4qmZ^37^ZbWiWKgPg2]UY$qJgk3/RR%\%BhC%cRr""]oM()hgPFsT?EG<Lmm,sC?XRW"K=HqA;7=_%eI720VM>XF=$1_gHk3P+^-`[<q"omO.e"Tj#(\*?Ld$oL5\Cd.!O+jR/B!gI,$\1l\B1Uj7L3/H&SiVu3pmSOVLY5'F?lrjMW.`#%n'J\`aQ^+.bL>q$!jb2Z9H'iZnAb?_ogHG"/h:2HMII9nAOp/h5+WC^$p;l=qbT/T7`c56+[oFV"qd9Nc8m3a:W'8TWX[U*(bspq%Z#pCnJG;"W@ZcjB:lF8hK7h<f*X2_)S46/"_sCr0jBM.M7BiH(aTt$r/(V;Qb]f#5pn.%D/a_"\N+%Jk=D,k?!Ndeu69<,,ZU,1l%h.Lk)_ff(Te&E4_ZnCPqbS#OnQm<Z,@YhpnG$J.+D^Bqf/`@6ZR>GK44RaS(Ljg>Sn`q#eBUU7g?XMqePe\n6P-2(968D\SXI0k/%@A7^mj'lkREN[+QC1M0qR3Q?SCFl+g&YN!=$Z*a64Ao!=-4Y@__lUY&Oua4$PFtdqL6@;3AdV\qOi=@bl+il*1W:h%Z4X2NpB`)t%JlJ*<ZR&Yg"'37sX7Vr/i"JsRYu'rI6m>*0UEN+ZfqRO>];`#L*gD)]Dhsa#QP'.8?K+?ZFNh<h?mOAiF<q!Pp)macL("(BC^p/?%6nS.i`f,S:Zt>3c@3\ok1?go`Ajn,".a3Gn37Ftm7Mb,64J5P&:*QdAck'@=Z03S?FqeTqL5,Sf("-SqUiq\MSV[poiB/CX8h(Wm%:,+m*(hFh=+!.n0GYMmV1iK0#B=lM28Z*tWEt6=CF*&50`?Je=icQTcbUoiMh8Z1(kSLrq%/=3CSL,:d@(LB'/W/>Ya;JDSSKqrt%g"[ud4+q^k5h%K^!(6iR41&+`1\-Ln81-=^<P^e7@$l,%a0>kB$O'TpX.'b!1PhLpY0Y0=kHkVaX>sB$93[N@nf_CGQRZIE"4ptR%2ESiD:X4deQ#k]Bf&sB28g^K@$PN]`3V8.a\p-^Jh+=sP-ap;"M6kDk<=h-1$AAEjgX2`MdFc);&ON_m5Y)<G)\]OFC;^`1"Z''%%U!Ebs=Qi8/=NQ(RXVNDXfj#ll*f5*h,/tN.GIPFNj`_P%=u50G5]Fk8d]8Ph*;(3t`\B;C,D2c*'TY38Qn5,-,ArJ65RT<^jlWEY%'A:LM;5YCaJ/;%JNVZ%2$nE3!kO=G;kcM5QTb:oXTfFOY+oJmj;%[fQLm\lq:+[GV)f6Ve,2O%pef?a)6cfu[O2dTb;3:&2*'5-+%?K':XE8QT;!ARuRauUi9G9/7KKqaVOCh^$+Q[luhbV5`LnTqP=)Ig]Q8ml"BjMXOsAqr=Qlo4N9G_n7])bs=l%1@L'*GLC#!G2;$%c'UcU&bL4eU)>SuOH0So4MV;TX<V.d#fcD^`m;T`KV(OlencDL$:-Q.WRD3n_VJX/q8Ts:1bT*Yc6HB.`gMEOT#Vo[ESptVQipPR%b(V@+V*>WNp6kiciUt!(n-O[RU11UA`&io&59'GohKao^K%L-eV`;KMpaiA^.Ha@ucBsRD%#&mUK^]CXY-;J,U7R?%RT&PX2Gq7P%Z+(L9:niNWQ/qbdpbV,uG]\U-`NhL^NgGu!$N*S,8C?LlG$tnpG5O-<PR\?M8?=qPn^'Gg-57s"1UG%(!tg<X`tj6Z`T"T=Xk73$%e++-fo+6bb0bd>(O$'%1/SrsnH_oP^):5[C&R/[g(rsYLZrWT^?R7&:?'+7n:;FQ+m1DmmTWE5.,afcMCeHbQfoUCRU.,PrnPm1m%6;m<l$"&4A\*PK&i%UHcMBq$al^1I,N]B`T>&OT3`_h0"ZB-?0ALW;]+lQ(=.q+_6&W1gCT^cJdQmhVM`'BVG)f8cq0^LTJFoW86%pmElW?JqKhprjjJTYp?<!,=[0""Y)S">LpuUW90G'g*M1*&Te+S0gOb(-AMWW(F]+&l=[=JHOqhNY`W@OU/]K&oieVUt>kOJ+Tl?%*NL\M@<,ab,GZLb-ME[dLB`],/..\X0FN8QEZrsmGfrR2+#49lI12:(o@V8Plq]STXfqE"86;S)(h%;'3`S?RI2>/-A'`,iA\cqb%)`slkJl6]&<$8(J^CqnMK!K&6<cV[h]%/'q1A"3(9=":)/E>,lcc%YR9E>NYfW^hhjsZ;sJ@(/5OBr"!&;N:fN!7Gfj^'6Vk$d9`%>^08%*0XeTklLljW(M)h[DE\_(dUn[O%]uF(IGO*1a^TSEEqHfYlOho&bFi^inKYe:]jcK8BDt^<"!X<`.LMtU_BJa+*qV8;UkfL%#T)J3T=Q@$fZ)2N%#q(K&AqoM'cpNO<E1n3/gT\6\=Mb`+[E-h-Q8CL1^TsXG`K+!:ed'N'Q=JJ_pZW9EK=r$&UL,3P5Gr%*ZX`>%>aJNMM$;TS3XDuKoq2h.cM::)fcdMl9E[_<'dV1h&`mJUJ`ZSl/4:c(2F@Ds^Gp_c>,4OGa;YBu9J#<7)U"*gR=s_$Z_^-cJ.9Q!%d8!`+E$JM9`J2Plk$EmMGSV?(`*Hit^%1*U@l:TMgb/-r_cOoPJ[?RqNq"5WBd4+U,XN?;niM*HOYJ(Xb8=OTG=_Y:aU*[tN=KX:%Zlb*GMJ,%<6C58YR='$Y8@>8jY3JS*(lf=N$H[eRA(%N:pBC$s)\:F$MjV1-MM7she2HF6121mL;\Vnk.+FmkK@*lV"V9'C\;%tT%/Ksg'O9%Ws$?MZE=/1;`J@';>3rre'G0B%`piPK&<o>Dfo?F^=Q`hnH8iE`cE/=9,Y>KpUnsMV]@`>l&ji2&O^m3!s#aRk+(LE@P%[38TNhrDW?AV:#4l,D\i`_ar?Ypr.!Y;nn.F+p1E^aoigJt,MkK.g('qS9g.4>N5_BOK$;)#)Afq:L#=R?'i]-R*5!0QaE?Wsmbf%3A&HO4O.`kbi==8M=AKY#\`:=\3,WSRAb?FXq>*(d&PHjF\rN/;#rH[ihBI?K<_Xn%$ue-[k;QlPQX2oI9ACZH\a)%T$4CTV5r]X%U^6Ju1##a!8O\]m1dLtrdq"T.'2/*4BgXdL\>-K-,8-!a)Y'2PCX[6+#eShs:t:W7j;o0u1nCKW`k6@HN'jLu&cX`:X7Dem@HHf[%jKD\O1qHL'J?_'lGRf9>/KUK!R4=U\bfu7^BmmH9b#==kZS]WG&j#B<J.`L:>&%?hFYlt$ka&Vt.!J?LoI(1Ofi0J:"6/rTEfiNt%LmU],<$4T-,0oP43S_mI'Y%e>4>G`U&lt#U)Mn2]&cku06nR#\M2F8[TNs=WL8)=)"JI.4'INf*p?]=[1/jQ09Hout*@[n]KRR4@%X%;GD\K5-ma)611Qpr&DoGoAp)nZ$WfW`U?UXMJ%P(;#QC&b8&!(lo=&h1^nH^k-G>L>6hUq-=[M9cE#>]B8=/kcV@MV-)4T6W2]%#hg#c.4>C(fXAk-pr\uF,IYIPiJ&tC)Ci753Lm]:!Oh8J;.J7qNf`ZI-\OnN3Ki'"EB#281J(2r?-3o14Iifp,<siu1%$5R8,6*g%M.03V@V(en3CW@5X<h-_/5@t5@IK)'Q'5OF;/Eq!/@Ci*#oM^tMNt^hjB2UZWH#l5**UJ*kKsn]1j.j9Qoab02@+aZr!,u)jjkgm%#8Vb'S"ri^h5_Tp5[nPO;FK-e/fck"]Z_Fka3GYj)Bl47GcI*tn;7r^AAj<67#PY>d7e'9ZmH0i#@>>hMa;0Q$6YHm5hNo>Ym)8I%;#2lBPp=@HP,G\k%n]f8T0X8o_Knn;N1@]#8n91_5PGN"kW'Y'i[Eg\6=ZQ85U+5b]f2/q.HKc5;BppnQ$.0*&<9+Yq]e*'U`bA]%rCr&%Y`>^b\0pbqJsO-o\aha+9T*N$Y6PsY8O+gtKl1a!_iL<io,8sLpad75iq>r#G)Xj1[M'Q;'(O=mi@`&Uq,a)*c$YKaqB>!C%kRn(7>gjl,6fV(i6Vc.YYm<JNYNuq"8&W7Ga+ZZ7L+uD_!:W?R?[P`>?$IDFIbEX]fJeT>H'6fhM0:,M>B,\:Q)#lF,U"Q-B\;$q%R83W.Y;0`#6nH:cO+@$O^201?+^5fko]qE'j!,%3+Gh-e<c78MW8%5$`0%VN2usg/'fsbNP]e:H_]LYI(bmOD^qocbe09nRc2reB%_6\KE=2XcAG:li=oF7:c)JGnum/ZBA6#t&"Y-9Jj1'0.]eKB*+'JjZ:XkIiW6=`3h%?1IVr"O24#<V4]gil=]"c9O*"i\P,.qaRV%9AIS`E?q'31[?!XTc$UM5TU:H"W=dg1E*a!@[n'pF3Yn337e!&OiQ5rV_OFK/3*HJi3q/)agW=J3ub[dC;q^<+L!"a+h#nFb"!RL%-kL:;:hIkd!"GQ_Gc]ia#;#r-K@CYpr?)>";,>U]jC^M_n5h3%P;Q!LR5f:/nmOaq)R9G7n.9&dKP!3=Ob`B`)$eM;QkhDg7n*QI%o&*haY"<GbKa8HW3.Z#cXd*+.cT$Xe]2Y"s0L)M=0`2dq_V<*Y'NbRJNg13;iX3FLmPV9dIDO?6QVhU6I^*lnHGlhA733Thh26#@%_!,mlDGMSo==-6LEeaB5Umq5j=`'kuP#K0L"E^rcF+Z_QNf(b0_MBb%Q.@1%A8=m&-D8=(Wh<#(adcJiieZ@).J03D14ZsUSmbq7%58:e9g#R@iO:]a<m\'&45B_?545P2m@[Fq`fp$_j7/"G"Nb%H8j<_Bo-TT^3!qN(S`%fRX#SU"hRa?hC1i26k/h<]j3s1%Iq__.Z%$32F,Fm092!Q?=#dtH_1(O?\`)Rq%L4:2schJR!AU;`2r&TpL"%Dn[VkQ6TfOC2.]=FfX<S@6X66^UoUKd1)"]N(C$$(Ua%SYck3%-[U_2a:,a":L";=^3Yef_ia*YXQ4)KS3TL/6tLE>gatc`?56<I`GmE&:>]]G'F=k=5<3/3!J>ni(`/"XfZ'0`_KiLi4>tc:r#l3o%MuY<"A'e!L$Z6Mb@'2Af*9P/&fG:"!EW&IjHF-SD"!uA4&OE&M3:$u&:_(d%KDS@d0Aa3<$]_94TKt5fKQ,AW@7Bug=83[.(Ha,H%i[AGK^u5/m"U:2'PlRj[cO`ON,)ZL<n)2OC3!QBm;=ri20g`ppCbQ@,1S8-D9"mh;V*s!'VM(=qX<rTqG7-N01igbAM1HMR6J7D)%[Ns6bNpc\f[2UKE`),q=)W"d*P4=e+#l5er/L!S4(:P]s)*]981R(2"s(OtE9g#6Mi(u3SooMju-m;L-UEQ7>^j[IbS.gtY"VQNE%Jf(p=QFGs5>%H:'*'F]rD]Z="HqlaBWt:CR,f`2$maN94GJr5Z\;6:cldGWi!aF4#eFGpl8sC0f6"%dFKR,[:s5U]fJ(8ZHe7IVG%M@jR:joeSVW?`eq;IW%n7-Q\'ap4Pu`82'%?AtWbah=rXSitA56;Ec;3/ifJC(=S2)eU@VZG?;c@^j53@Bi95\qh/9Z0Dqe!V_/t%QJ;c,[_m<r_A*14^iSI@b<@8l(8o&d7I5'u/I1&3ddf_b=G%1l,bB'#1peZo.=jI93#0XkQC3aIHfE..O)=5FrA=(4(FKPm+ojpq%1<5@3PbBEOLsn%sMCk=Fm/B>k8XtH`"SH4q-cVZb3QMlD7m,\nnD`3<Y8CQhVMY(&ORT7PB5OnB#Y:].X'*@Fb)O[++[H@!X>\#-%=OGKeW8%g;:u\BMN"+j?+d)rBMh2a6o(R)qTI9nP)G,nC$F3jNOZk;.]]']+K<8VUR8YM^&=J+h_RNsl^e;h9C<6NGY)s>0FFZHS%)I%;KeMt+<7))j_:.a8t76W,MSh[`Gqud;+F&Ejt6Kf]jM<;hs22HgY;1c2dHK4o2<\PDf))6OfaYcT2R.K&UU*inM6-]NHiN>^L%9qZDlaoc[$6^JG(PBM*Z6eFCnMGY^r>q6r+<4J$NJ7`XnM>@m=Z$*`OMDIJM"lbB@*>m\17+oqC.Dd,s-t,ZA&C61T8m386b%e2J%6h(5NR";H[pl<8t!,Nm=2]6N"0u[:?6J*K;p*5ETi&6^Rh`q/E5,)/2G$"$Dn7>$N^`8cRjKKek%)YL2;=YNNSeEmb`&!ZuGuBA[%-`A.!8GXMSL(H[JJ0[W,3I-1oA/0."N8&a>KYe]3Ra7s"ciud-OrXUu0hPCd/O1eW(6N@U^GB]$62/jp."t)@fJ/"DE1Ckm8\d]6%LaR:_-'&jZq<fZ@\/4o(1%eF[ep7fe#$B(\GcL<\7gsif1]f=oKAaU^jft'l+A'RsWJj,rUBS],-Y\'lbA>6BDoR"Z@0_%\+r`kQ%njo`j_GG3e,q*,nF-*/7@o)ED._3V(XbRVk/_=/kV?T#8jQ(m`dWYnU.5:oU>i(uh7\%SEi493N@L*fBr^<:Xi5hU<3^5-P9*j!X%5G)n7TT=M%3bbOErWUG>FDq#:F[/)1\p+P/90N/)e7&R-LA;-LR=i2K:'GIs97CamMcbU)`ZaRjB\QPF)-#hJmlV(I@7)=E''r.E%Dnt1B4X8"?feWd6:Ro?HNdf'4:5^KQ`DpH=6mRM^>\:N95"ZPe<oZ1gS`PeqHkgF`1[[>i)ig!3GI`(7e?Rul(05`mTNbDN%s/H.%Tk<5aLcmqa:q7/lU9,S)m=^iqM@Kc?%dR"_@?KL'Q>f=/rYdCRTqlsgba9PMW7Y^4*#^^dR"`QN)[!MUI5)/#-k%>2"bMV[a8+Dh%$G%JBg,L6G]JX:aLLDi2`*#Q2d!D')b:Zh)Nj,N&a[.s_,.qI/-'`]^X+W5\`cp\,b-C43IP'S8qc+n30bCuLd(^aq"1$.hP7P]j%$Cu3)CVtHTT/p#)XS)^nms(?QK%t'@O>tH#8C@j;#5?=T-T;V+c@St7!^M3j,i0\g57e&Gf?js/-KRf=K=OkG]ZgHgdL\cT3PeLn%fP+suGP.NE+6E3NTZ*;NAaoqGb_L_UE63B1gI6,<'h(M1b9S<CY63GBidi^4%2n#clAeD6^iDAcmkID1nUWiX74rI\//L]*W]4/D%`Q7A*=VRQ'N*pRd]`I?16,m[#?soE(8L0TJZA6"_>"Y2J2<7,XJ;NF2;7+E9bOI:QqaXmn44g]Ks5Q-:&X6W5OubDVF6WrlaLp:V%7,n>(!$[1BL(K=[kG8BD%u0$![*!Zc+=&L9&357Im0&SeV1R2a:]+CI86bijXG#++"D3D(]U<Nm#\6YZ"e/<$H'5W!_97_46X2Wl%r_m//iWY/a4$='!T:Lg=gH[GKOK9Q^e=;[U4Jmes%Fph3+''Fc3(D1rmeHq^Nk)HTAmq`fjW8CCX[8R-nZ\eJ:>kb`&X9r^m%&kT%&4\AIc=pcZ\Fs3E,RD=S#joM5G[d#m!Z3d"Fh%,Qo"*Jk.0gE`;,[)iC/u<6ia=kK2s-8_A#,TPO'+!YejAYmObbFjkP6b'cH>(T%d[3BNBoZN-)-?k4]ld<sJ\%eOhaP_<c+*tCeQ99%4]0:.hFQE<b.EppK^sih+?<0Ug@[T]:;jPJXSAKS_dO^VQVRpe$-!.MFj(0B%Le(*:#Utl)UM8;^>elFs$WgVqj>Q`RW=CnJ^&t+I7?,)MS8`cKq_^W6^(VZ@@:KF(@l?7g_R[em1*5H-C&8qOW6ejRDD5H^jpD.u%dGR8/<:#\P*a+gVnHeu!F.@!ESY+@<Du^(&Crj6poi;&(+e]GAR&a&VO_^[&#Eo-!!:-$;8qh&BM#&29&0@L=6AU"lkOh^rf,I#P%ZNTgE4r3Dul-!OV!TjU3JYF=%X<HZ!j_ARIYW>RR+ghoq,#)+jIXiUMkT]#$&)8'Q0[S5t6k0(t01Kc01M8]s0U[WLEM>>]#pns*%8ZIj&Xql[].Iie#W*Uke[MZpnjapG(I$^ScF6,G)k_(Vrq+Eb*&okmEO#S8FBGco0SIaOX$l5k`W=0Smnm-Q]`*q'i6Qf)L0tI8d%_%cT"Uu1h&EqIduU211Lpeo$\oaoK0^dU^LgI.u2`OH9c"Xl()p;>OfMEh:ZW^JQVhrV^1H37sG&K=ehUguVr,0H/_YUI28cs#Rm%Bn%8Z4l=dg#uEB-lHlb7<'_7j0W/'sd!F`0YB1T`lh1;[%CDM<s-1V%T+ZGL;^0QP5Q<;]npXS&=)t=iG#nh7@oN<qM9FAB%&ts`%6;SI`r7;[LdSYUeMrEYNi7"D0!j!5Z'G<ht4ImVn&;NT3c:D[U"<<JGO2OHHC8%/g@l2f%j-h.riC,M24llRH?"g`+9oR4;8/)XV%`4/Va(UK5X0k<$f$BLo8FO9$/Pq9#/Z'"YWBdP&q2OerUke(kSP7S%?eiAHn*7^LGL2rQM@O+a\7oAR!$A5GaD#fY>pb2e<]qhlr%%kman(au"%a0G$1KX<]E&%f]2jaUA51+<d!D@G,1MQ1%rQ01Km)I]@iYq.f'M@)@X6W^k>;k-RU,Okahls"NdLuGuR7W1^eW@3[$%4Mk0S%jNI>+P-s_;PP*+Q_Z$C%e(FVOZB<gGUOM@4P1[;%"mPPU^S>#5m75s8L=G_(5JiB\KT'"\-%hV`&AS"DK%iLf9$H3)aFFd%`7-5Z-`@[cB*Q37a!CVLdNFtlc&h6+GZ$jPq2fuZ)I1piGR-T<YZO+=&]/f40a+iomk;&J#g+?YZnFsGJV.(70Yo376jSrbJYFN%%#%:of03V^/n`IAcQB;E53ms:[c[4qu\R_<DbJ$6AXY2ZDL7YW9?giVB\$?)m\@B3E76MbPIZhg8k]'1c7)/)V/)f<)HtiMSGKtkc%bOHqUAaeC\0:1ZooYZh3$GS.4U[ZHu\J2a44.cQTQ/bh1C;'-e:eK'hCA]>aS.G1<Q)LUU'6Z@"r%$+!f\h6-Qqr\<e]mIj^qd\&%jA@el'u$"Irht,F/-6ao('.kY/1%nQjs$ITdY=CuWbD/IGJGFYq@0&,c)L5X'\/+Ppl]D`[Km[fjP&sZ,/hf:.BrrQ!#Kt%RoY'U%S;8_!Gc4(6_WDau<[X;n>Xg<(`(9"R/R-*-E!UIpV;]7D%:Cuncf5Vt3XkmH6O3CG3"+HEC#iY?$;Mi\ZM/GBk"r#1B4(m7,oj?p%^u;pKE#97aC!f_dE11jS)HaQX75VAm/2G]gJf#@-/mC;)*[Af@#LXW5Y#4KgfjhDI0'tfX@SuG.HR(g#BbQ=qm]qtc*e)1Y7M6%/%hH7+LKV:ub&pQ]^Lq#^bOfWGfM^YP8^T:3"5UMSmLr^_4'%db]$-QnUJ-0%0Ll</TE*DuaZ<EREX66.%Y&kp>imt4q-\Od(f7$W=%03$q`M8>hf,KrST!nkaf3DXr,%m##:Ic0#Rg2`.0920b)PlZnJUU"C*NUtIbO[0IO%,7!g+gXq;=3P"Tb^DjFFDSH(^?>!l5#7dY%HEm2O-%.>r>QQcb8IRld6=?X7,ahc[Qjb+iQp='j_1:(@C^o#JLM)3@bXhnUX"5Vjrh=cX,cA)6]uMId:_MY_hup5MN>BkM(LZBE%/]UL-Y[cu\\"YN0,frf'<@81X58oGjW^m?d6LN<di!$DJX:jP'O[3lECMsKpC%:#Q^'adKR&G2M/kS70GSA*2kDCW9j@f%e'%D9L%@11&tlUb\6OQ04k"ZmC.=s/VD#6F:df_/P[)lnKf)d&S?h'b"3!;-j9a@Z_B'dOE:!piDDP#ru3?,DBl[)-Xq(ulTo>cS^>_,EWt%a[h-`,`mo;5T)#2R<,"7KP[b9&9FI5;K2bpn\JXB?2>(E(WrfJ9km`k,!r^d%RUe"-4=i^:cfj27@Li';X=ZtCgQ&J@MESq1%HZS%Jm0s7e@<sn9DL='s+F9_!0"uGAOCi5Ge"NOGb,KO7=c)S]HiT9U`P;1HE@hkFi\^-;"2gY[>C\Y.kjd4Ku(@>Y#85L,cQGLU$T$q%n+&1W8L._i&G)rY@=.@&`9<-dgus,l&]Ar?GJQcp=,Y]BL^K$[C1#a!2Q<L*o!+(%a&URQ[2#I(R8PHu,(TZU4G8.P67HX^U?!g!%=c?Z-ZHNCp"2!i<Hq13,7)I8H4')u7+kMbiJa9ihPfHk0`1/79^n'2EdmBSE3hW1%eRIoHZI_?f/4WQnb(2jk86-#niZO=RKuKjt%,-q[!C0ul!erb.'.ja;2JDtT(9Ot&oe-"WJ8]?o2\hR9YM?AY#$NjNRG,n8L7"KcErYbO:>9ALA2)r^q-utiEZ//A6.LZtEQ0"_q%5ZKg$Se=9kHDOV;U+ohEY<!glc7"^KRN'p+odH9ZUAm;g.bp4b;K#58g^Kt[V?>OH.[jK0hdLZ8jJRMX!`s#u&cSJ[7B$SaD4!#!%&73e.jnpQY]m(N6%U@i$=L9Og!Bk6J@`+cco,K(=-',1d)Q`.*;O&hu^_Z+2]:rY13Y2:L+QWB$8PrU5a`FaH>gc`Y2NbrO;5GlN%(oa6K3oQEZ3M_m,5k&'&kH6:9k\@>T>^Qe5;=,`U!K0Q^>TkL0m"#J.e0'=`N[6u\cS4Vc=^NAs7c8g`ne6B]jF8/gY4`Od"sgrN%KTE/sCT0.O^`0cek6).=L`Nr[>QiG@LBGD9&5oQ$1eK"oUCJqL<A?M<O$A`;J8AnDZ,EmJpZI'%aD";)6WTL%3f%;W^`b`)ca:jj%PDhiu\[!/PD`D;KYt'K&R8ROcW4RVIPZcI_*8jd%`/93qQsnl#8RS>fP1!U,_Y42$kfV80LDoCZJWpNM\GDCX\KNC1`i8>&+@6W>%.WS+Za!,sL-n-(Y7=NltM^/Y4?d49Z!%Lof8--/0^aU<SD5?0c%_UkH1$[@F-XgNs?oe>OADq?,WP\`n:W--?`Wb+U^]?`*AtCD0%#=rP?IM6GNJfo[+B2)2o_(e+X0oS:e=2c%*QA^8qNj!IhDn0:AM4VX(!^"0%H]^9@J/Jph7P-]^4S%rgh?&Af@@<cG,=VsC@/u1Z%='Bem]lHF4F0>?ZZ82WYo)[+r3JcQ4RIJS]1[M7'.Q@VY0`E#!1J\'h(LnN%8OQS_3"nC2Jh)_saIehEPc2;>Br+AaGK_IuN!=T*%T_k6F._llU)YdC&du4jkQ^!XMePqN\VV4:qBI*C9$o-;PV4KY#%S-:]@:Ie[W\/>j3HBf%*Q_S5n,Odq!JWrq.*UTg#LEf(d)'Hc%cDTV8(hI6j9$Rg^W]8Z9Gp?d"+pZ,a*<>5uP)KRDD$V@V-NsJak@pVChc5Po&uZOSKRT)U+D(A"`=H7WM6#LXR9bA+ii5k-+#d4^%E?2QXDTEZ7U$5CZ`$:Uob91Ydl5*,s/ErQ7U>IMO[.>b=H5,Q3+C!Cp-5MQ(jT&MZ\?bB&:),$WB='Rc?OTnsP9%VYLSF!l+.4C4%Re'NU?;ea6nf]Mc8FVip/UkXI`Q2mWb%\#EmfGdP*HD,KN@u=X`8&Jrqbn%`Q&)!O[0D^ZaU,GT@4Z\:8?CsdCZMcnEgdM&b/0Sh%9(<-c4Ui]&*r/A?[E!eci1brOeN!7K/PdZ2Lh/N3`jMpFW#^>GPKKplkeNfq\'Yjg/8V9+F29F<pHpJ(6K`?"D$iao8nrDc5]!Ap%5ch&1H)S!+9)<#CqRcnB5LP^h$l.>K6kE2f0M(?I8j?5;UrY%06XI#'NW\-5<9';t,7\nnU1"H+$PcBA_'r>P__b5Xe-7Or5!jBR%kqirj444g'KF#!1h+>Q1hiJpK<]bVdI3ZElA:#qOLQb"J/s5<:,DO[app*2:>OtQ*.d9oQ1m.7CA[YFQ<`2!Z)I\@&8e7K]-OBM4%%1`8N8OnBm)QF*#INqoVKFYVTWMhMMojU80[,`tl%Qpdg5GSWgJT+O&33<BB0&n)5JOZq,&XW5p,68G%kEHG6cTER"'uN44R?E[B%/7&D'QpX<`;"uo;MYJ&G1uG-j7%F8#);VA3JRtiXmMA8%XL9kQ+):s\!LKhGheBg\OK5lF(PaY9o(8$u*3]E.4W?QbTLJ0,rJ'cC%_*O)L%t^bMAUtHdG?r#9^g9;:OgFWtfief(7_"0F&el-9NZFh!1:)>1XhqXS;KlVr1C,"R;G<GTaH*/r<4XlgLHq#<fo,'?Y`?&a%GA`%+HI`J(p_(r6'%Vh[/.nCKL9*LPOeqm,1bI*33cp*bQ#X`)UAh.k*Kbi%A2;.nn:b;\B8^2IZ)ep;%tZK&/s[pd8RbO*ET)hF%*:DI*EfUgsBjAFt*[8K%3!bZWmI(r(("E#CKt&-.\)&[.pX\SLfhPs!$7aO\E$6hG:TJeH"NCD%#1PF$,s:TmA!0o?d[BT>cWZOF%gnW_ZQ[@;RUureA-X!Sn[3rWBZi5WEHdn_Pe_YEs]\Kh/KpR/;UZgg22(?2mP:f9Wp9%-KjW=(DHF6h6MI,[QVo$&/CK8f&O*VOI%mT$T6*VZ@6iSC*5/(pa?odd]1X+gf#l<20E@H^k;_TP+.=ZHFECKbtn='Z4&p8i*;TC,S6b0L;0Y^XqZ+TR:hoshg%F+Mg&Z?<_X%HqJq6:C0;3XHfMEaNk8=LWY\t>WDJqj7A+LikQ:Z#oH?k$4B&8H@Tf("cj(fV2O[2D.o63>Jt`=Z+e%#\h%<.c6jWG_)Qu[[FEsi%S$rGhYgu+#pjQ5a7(JNiWSsEkD(R@Wcn6t?.f,h'\gs8&Z9XM=#YES43dH94r"6s!c;SQ^Y$Ss+SWhJsN"#iu61cqY`Dg51nOHnF%>b`K'\[W_/EH6+PB?l8+>fj,#pVliXo9?dE8'5>(bmqDoV2)Gt#dPjteI".K)U<krb).o\WQ6T!P]:(QcZ@9Fjb=44ciU2&Kek=W%:WPL7<'D'$JKoHFm&1`t:,&&]aj*Gq3IW=:NZgoVdZ]6$4`$_U:g:Jb*pSY<%OVj.?#`DE01f?ON9in9S^J"g(/%d\Y+coG=H)@r%'R^5:Og8pWJ[!k%E^;K#9;t#>MCX&7\P$M<H[JHehb2/.<WM0VW%6<<,L1t__iWi^fO`%@)*fuU]*u5G*.@DjD"V(r)APm[31l*W%\IFg%laU3KZS"lR9a$tmk17VbEWaZ#>j4huT:"9(KIXH2I"<h!?X`/KOV)UW`.3p02@X=4HlF1\.2<'/2]SJlT.aSlLrLk4'1\IQ%@L+0@I9r%$nC5OWON_gLCrSL?C>_(\!T+J,Mj@dR>5Ce$EOc`;>B(:iE,fZ#0&bc]ESW)n[h-a.BKpMeMc%PfJ;.b'FZliC\XeRN%;TL6JfEX,,P'AEA9$:0+"TXHOAu(Si1/_C#i\GnM=&Y#LKj$bna.]hC8Os(+;<Sf6Ooe0D1mdf\I,*.%1"$?+DTgd,]t,5kXr9""%q#Y1;E'PJU7H@GGfNhd=X#O?(5E[<ZPWQF\MSZ&YdEhrS6>:o/qNI?m!Rh+2'LCd?M@cr0_0M'_h'*b@qS+QK@9e<GMqT@tTX[$A%2?bOqNJk>V!MUh/6t3+)"ba&t!^o_bUHnmAgZ=#S8u?-`QDFSL-Km(C0>0V*WAjp?)6O#\KTb^H-k5^[!!ltr/-2o>^i1,T8PS-l%Kf"]ilJXd.!H6s9B(nu?g"qgK$9F9YcP@CN"Mt<.L1I9)^73jN4U4*5RN*J-'e/k8ae$sZb/:I_0P'LdO-9r]7-T=1,"3?B>"U[`%L*@%nYKGhp@i2EH>uGC'dmrI2(R*ln!H%2)6liKE$e<dO3?o^!o>F'O;OR^,:ZY=ekccC)9(_uH0AmP+jBu*S:m+?n7X'cC46"s(%NdL9WiJ?lU;S!qF!oRA2Y''+#f<jqh.$,@jKqRP%P#sPf/J^Hn%*+;e;_,EO,kN&d(j;YWp5r2V4-UCq9u=0f(_=<UF9Y@KinEF6%G,r7?#SEElPJpN[1$\#]75EKA,oB%D]SMJrN)!J&"qG.fdg8@&lb*FKZ\a#Ci)_EK"jh:246K.D\2[i9Nt:.G_=A_%^#9*]%Ad;7%aOoSjE9RAee0X+n;OdhgDrn9T(be;]+c8]%\I;]QJI_p'gl3Z%q6=DM7_VM5@DpJ!PILp^b`\@^?UeO+EZ\\0nPMbL4K18WPa"[N%;i(6,^d:0H^oJ:3`g%^0n5i]3.-<igllHE$1r8uWXOm>Smb>:3HnJ7Z,?L'\$Ii7g;Fqf?7m'O3FF1(t(oLM-WQ.92]9l[CEWmeZ%pp^E%$=CX_p;CYgA\R[_joUL?UCh7uWN:,1,-t`c<+,$nNe"0r)L42.<[08fQY;tqPrbQ=@k4*VN;[-PXE"e0=-"qV%T4hL.cNoh%bt,oL-kj+paGgqRRCM#ipq,]1):'XeM`/[ZEJ5d`ABrehR<.1&AAl+7F5UXA:5LKZj!<5%PY9GEgHm<cT?ehN\KihDUrXbs?DKTP%0p61,92D9UY@a'F`/]%Vh"Sa6B-:l^HE:5sA[o<*>6\DC+<kGb;BV'S&r<8(`DXqoAj[^*/^P;Y8A7aIj/N7^LV7obYr'(qF.XT4%+ZaG07atT8$VsE\0OOtd+!1cO`>1`b.>omD1*g$)hu<Q2(j#)sOZP<KR4QL8i"h5$pQ#2Zen*,]`uIGb)2+otr]$$*aOnnD(F^e'%c,.mSr"G-nlSOaobAA"t]%[;Z4gKuV&^9S>pW/CfW0Se=V'Zo?Dj'eA2,oX=9g5@JU`5W8S`9V6Lc;q7ddm)TJ1Y8oOkLfjqTp@(%(>:N9oNb#Q&/2D7^R(OiomZ\'70&.JFmDUkr7Z%kXj*AA3<P<j'X)'s?ll>^&>h,9JLlQte&BWH)C19)C\]pJ1DENOjTYs1+Kt$j%n'hdsPqqLP@"5]CY#I/=j-'mEPE+NJYs>[5Is=K`jAK10gq)11BTSd+KhOr>U7sqsf^1pSDl>fmqFW*'dqs*D/*aV"kBUR5aCPd<%g0<]Cr'<5-A(.eZ^`O988s&/#qR^[=UiU(V%3B<FD$b)#972U"eB5I&hkD>492"_\";2o%B%Vgs(/*hC?HKj4g>u=hH4*X.`k*AZ%:JmPt>W'!s\M!p!)DaE?#0.e:OgdD[8:t_f`hY4FfZ?sone84Qo1Gg#28XE9h07!SN;''$RA^04FT34n%RcGtJ9Jh$E$/05L^n`4%fHfNE>>0cA)0H&r`ND^pM;\V%M@mEG_9ZLb21h&f(CrlSS1$oHFq!cB5sUQ&4gGroPR6PH*bS7efbS9&A[u\$gJoge<@i4f7lf-2%].jtf>_)tRa`Ldp!GF6!cZGQ),O#3>_S>PS&CN'lj-_UD<_ZN,8(Z;.ca6H[Cu]r=pt/#U-g?WV2_gB!AJG/890>SZ"os7i7HN^5%IAV6YM:3bHH),Za[=YAsL0Ymf.scUOrJ)+N5Um:,AaFuL4Z&Y1$\"crk:AGhI`G$/4lgPGKYOHUBD#-@/)AC0E_,@XE^fe8Ai(bQ%r.YG=It#ttPH=ar^=`g%!tZ&,R`A,ZH3m!A;RLHrW+&TrZ]pSYM0QTClt4dGr(:Zl6/egKWVtM)*Qc(=c8hWRUOdAsHUgk-Oc;7!%\'QFe)6cSj>MTqYZAZiKqJ'_#_SX.Ca])GiM7Bbu$%d67gLOZ[0qaJ;'#o(TSJHqf=e<(BVQ.3D&'5'odo,G(U2[d]8tR7gPR-fc%"R&UrQa;>soMr4,g&1VnUdP8c:?%*H%IJUZ!^1<LaK!1g,!Z^NX)>#+d$UkL@9Jnh,BdosGTel;'Lkf>E"'')rIRaJOfi1,]!t:Z%[WF$q?n7ZT>8QIs)OcF&fI.[neD"uElLru]A<jGGV2:_Nj\W7=g#D/2M=cJj-J^5nc(//o`$`(3&sbB4N)<43*&3'H=N6JA?d>MC%>`6*o8hNc?YfS_f.^Q:<*tUloJ@\r,\Wg(Ul1i[_!Ff3oL(;C"0Lp/f*eu'*H,@N@%#4:4kHqt36U=%M2=**1?&r*2_7[JhgXgS-%.Qu:Xc],&Z(E*@*0LJKZ&5A>PAY#/t<0(oY<fkmbZnV0R1^EX!pG<8D,('"s7fI^g%Z;+1j>h@K't_TOk'%5mWkp!QW[\#>PCn$-%r@+5[2;,HW:!:+ir$*tq<[,PZkb,3KSL_5Ve<I[Y%98nH2)\g0dq,3QWirYHfJkZI\KYBp?8<t_e@kdkgl(i"RJH+aH8HkO+X_L'%OTg;Z0k=jgL0V,t]bm9FW+<,bj_?H8c4E>K7PYT?#,@RRb`Bn?:(T/Y$_4g[O(k+&^:JK.*3tebWC^Wd3#L*;NtP4W3E8.pCF0n6%f<>2DSH]f6H]W;GXr:J[S0/:T7,BN0<V]"s=!Sukiu1<e70iI>4<4*\_5N3+MT*q-<t%\64\/;B8J@FLaM-o%+tsK`kmSe?^c1Ap%B"]ElACVM2N<?F$kr.gr)pgIc>#]^]+k/p.k80X,l:8rAZA\uF/Lft;;K?@):'aOdP55LWm'JGlr]#%)R`B_3"&qfMhu'oBph`:?%%PEF.O_&$99S>:Y#U"Pcl:BG6DO:Z(0+"'$G1D]<-nAb5eZHuq6Q1tUX*4!AV4$H_HCN.\%3%gk@[i8A9i[H)LAK.16L4,nIri,D%PuoamL#5lY\+V408AtET#GZ]#4eb9+'>K')/G`0,84VudeSg[[r)g8(!5k(H6oj>"d#m*`Og!"4fbqjaoXpOA.;ei,&b*'RFUtKe%nse=gk@]FI:N%L;T-]l,@Y3;)@@0VTQs*%8<#5Mo;+.9un8[8/`DrWH1!<Ub;e;Po5a!,4@UL+a]..#be2F[B8CHbVj_849L/(0F%6o5G3IEkRcC_cYGeiGFXQ@6r[IfHgj>,k1X4DFJRI>'L?1!DMiINi.Q+"nW6M6H2oM(nknq=UN"nCNu<,Rg;'Zn`$,P<:e[if[Z?%.ad<4h)m!l,J'g<C2h<uQb>o2,st<O,*"`&T]f<<M`<f)6Q[1RklbqPEi0mOc:XVOSJI3DL0fp[UDN/.Z1g/O*Ol0&+L00,Q_LP?%g$YqD7SGAU26ui<FfMo;*9`-O6/&2sMA_]1CV/kl"]L5%dG7]kATrH.]`"p?&t]$ZN<mIOTB+Ad9n_PPa60H`-'S%rLb4mKUSLs8%M4``YYMD^b"O/`=mG*8_'2=GUbmulJGl&@BfOaQA&#fZ`2QOSfgJgW)S'Y[rmB5=;Jju[i]@R#n'5KA(eu>"iA0'e+4:T+`$738^%9bO32?s"]<$rol3dalp@=%Y]]c8]CdG!ZXKW2#>(+,).mFG1f6Z]L$mo,J;%G3iQ8.;2q-9-S0-Wi:qjA+9hI@Q-63@Jc;T3O.a2%*HN@#RS)n%Jk/Y+TkS6!]gK#]LRog!X9(0D-+sPAmPAW-F#-d5(@La*J$6&AI<^l0]?+e,2SRVq)9G^_$7YZ>4ALR7C5J7h15j$g%bLSTG78Mb<hE)RgIJ"RUBa7J7L<-*e3CR!pqbT(,n%M9'(1j8?n68&SJO4R3.4j\+PU1LcdqY+O:3])eo>4U&!'HJt.96f4=ja(4%OY?eIl+%%:]ObcY0mD\5etkE16NL4T9#he&,PWU4Mf6HcS@"9R2622U*(&%_W.*sYEk_pQ-/WADgHAuHW"Lhl7h%.g!oE1BG4)'6%P9b4Oq\h<p-/-dj"p/6-GIbe#,PZ2Jo))haO=5fc;+7LL?/OH%"u24>nb85f4)l*B51co_HVE_;Y5[]KY%ESUb:G:e:E!(G1`^hV%W<E>Ps)!LJ/Zd<XTqO>B=,`*/B;rmsn>[7e&o9i:oFhk<H+i9^?qL#V?[uOb*<b^)FtcF.-!?H5ja0=HaW`-33d])%9^u,.DcL05%,,S@LiJN@0j-8S##@3)lP`o$$V0kGA9,Q2KN`%mqjljhga#Mo6=/`b6'rWa4Z_KdP,sBt5c4I=g`IX>/k8,<U7EUU3m,jcb3T<=s%doM@^7V-d,3:hg!q_=Y+mF.C-:4dR>c[8;\>b!@=0(MN'LLiZ,-W;b:*.&jE%RX*kK!IdF@[G=Z6T+RT\<eXj.i3H?Q^ee$THij`%GrWK1bFR1ufl(-?6ls2+RZkuGT1q8*jC&E9^Uk_Z=1EI2ANmU8Sstd'AfSRA[u/k4o">E*7<Pn;T<ik]E#[X4JUln3YhY*ZcttF8%aX2u!6AK_k;5HXdAjJQ^9IM=n<NNWP0Z.]N)`b\J\s1'Q<i1K4C@J"l:Z4h<%`AN9dgH_d:Fkk)[k85$*pEg@o,QFDd^V;HN_ZOh%'<Aa`gT4=E/dZl^^4b3u[g$#JbK7)h]]lPRdLU;9pY0LJ4@l-"-Tt[?GFUo&bYgeRaE7d6Fi!'1iCEG65>+%aR@u\Zpul\dUIEa@%$77am\?t\<?7bQ&jLVmY)L5OGI=gQi\H&sW\HSoHZ6/4T]7%,a:i(>=)'Y5R%h9&p;kB<US8JX\4chB,h3!93PZTN\KSogu]pr\`%4H]iAp$FFaff\]90WDKU@rpfMjfaqt%a(l?!*2fT/]J-8/I4D>lsG?=a?:B8<OB?NPDp6j?*?Y_$aafgS!lhQlDPE<g/_M>+JPsE%jk3WKq>+c'CJ0`@RUX$4[u#eJdC7g-;N5"V.lX?W[sX;@#dG(jS;L5M&%r7chj1WL!]H4&A/sWM-jM^M&7q4?XduZ\B][sR>B0^.%j(sp2JkuK!d)14,eA>GMhkkVI?qMrUQj6/4lFfGTf\7de(UeC\%n(@J[!i*P#]YLiH(>Fb:j>So$&rTn(^["KVAdM3VPR1T/HHuX%1Uib8MZcX0J>t1313OO!4f2=sr+^.u_usCF#;;eCn2[qR?c"C:pq5qs]DHGJXZ!U`'hXqK9N'GRYZuGYVe9`r6)N0C]NR$ZObgB8%GVM'7LFZepg-[hngOj^iOf[41?=.PUDH,':nmqJoK^^-L_i[KPUe'DZ`&:&\-\iss#<EI$cXb\O,6J.%2JnR7\ekq#V`u[Ch?6Da%o5&IW*851.bV[1<#m@B"HVB)sljYI2`GFXIS&BolC/^6pnrAZ/KIs*.;*,Q@<u"LZ.9]fc44Y.6<4A)X"k_1JiH&)5Zi%@+ECX]+%;\\A.C!PGP3Z)/1p,s5DXaU;5("P.LOI"`bQoA%cDkuC]^SG*'FXY@uNBG0a>L<Om%,k;,]uR"Hp*5[L<,^k&E8!$AoVmHkpcF-l%!>bM3'b@C9bYA9enH;pXAG3IFXi6-h<%f`,e@fjqe9W;ZB@*R(,2sVO\.1:_"[qO2p;2Af6&BcqX93s.kO+I9bpB:#2b%bVMI^4Q%,20$5>@e2JAt1mW46LB+WB(%]hU3BMm`(.$(&7m#ia1XZ>/dlEI`0X`.jG-2poUql8'SHa]@]t*0'ugS.5\I.XV1H%-r-L$A`%g^%;)Uhjd]L]jDk.gVoR_1^qfBYK/#N>_1$%+@8RV/:luJX_L"L-cl:glGimX>fA]a:@Wp@R0+W10\oCFui#U+_rW/7OVN,p/dTr!Ou%JlpQ-7,?J5Ec]#M6Of',]Z6t,.N:]f-^C@+2)ckuFQh,6d$I2qL/M8GOuk7pUkTa1#$4hE9Kk.=d>te:@5[I0S3\;h[a-jqCPS<=%i0&7/=R=G%eQT2R=uc,P8bBB+%(A.s<[>^[Pj!F(0?HpPhh?ChQSu`fRF$3!`OT!D9"m0cUCcqm6DUF2NWbOt_C<kInO(um`1!Ku%BsoF1kJ$;!%!q=EC#6AB\1IguW^_?3*4=d_#La8(juoIV^@]dQQm!uCg`!p$_d.gt`n':NE<O6cbGQGjlkunE+`j*X6Y&nJQ;Gia%9X+g@dlAC1U:X0Smh"BgQL0^nGg$`p!;83W9N!YBAm_GM?E5+[3c-IqR+e[O6"B;faj94C.kKdlfY2D<oLusJV'Z"l'mWIJcQtS/%?9)'N#Kpd)It2)kG/aNt1^1U]h%^$gNn;7sm/8d7?ldRSerZ[Gp>3.T8iF[[<p'+:C4`+%UG1*[`]9PB>&I4Y@UbU9BA\14FcC(h%X)?tB@c'ek1g%>SpKaQ44bK<OI#G@PFghK=YmL2K(Me.m=V!A[h;P54NlsJSg5>_a)ccrC.7g#fV)C\=c+'/f3Etj]`U9':@8ma`%aHq@e]<t!j:nW=HBA7E57GS*c4>EIheR"g=dqSF7a-@NN)IO:gI6Oh-Ui]ZhAk8840\;9EVeObdTu*d^TL;t!Q9U1Cp9p"[N-!0X%X>m8R.:C3:RN&l%m+XYPa6g:EG$X31m%(u[YklHWc0]l'W4=415+_DQV^UVMlQjVnC3iE#EP?XfnKacQq,[Ta!oM>h5NRs:NOqgM%eEuj=S1%$2UaE9''4qQuVYE\=rjN`mY>YOF>nW/HViW9DF3,"4CQF=`I4R=qA^.U[/d`;uL_PiZ_0"-iUFmt.DL-jYTX7(BU4(:e%0"\.sc!([@)9gnIQ.#S%XR$nGdSmA<o7`b!FWJbpP]L`G%;gu-`pW9mVJ0H8Ed'8<\V`b`*'E@t63^`5r"P^Ak]$LjSHj#&_;I63%H)hC1b4SX:.rmo^E^Q<P7k@L8lFWK"L>nGdI-g*c01@\9<]IeG0^43n[<@fn*R"f2A!;>eP=&C(jT3];99*n`F0%a*31nsb)AD'g%?\fEBoZ*-R#dqG%AW5D$Z;gZ/LAM"?`V&/2.oVVUArXFVgMV?,aMN6*(cQc#V2)*f6>$>t#-14lTC#RQk+Qnf\Z*S";BHS8Q1],@%.mat>J])]T6Xel\Lso\Q`#S'l#e49Ab8ZNl3hs<h3ZUEQI`b0'7[Ul@E!0fADi6/h`]e`d0Kin=?#If+8hqRgKa?H@K2DBS*$3Dl%2I`T3a-dSE*s!udQVBGkF.g'3!kP/#HHpY[9L1XiY2;C/k&ulD(b2,f[qM'^#Sa`tj(f+`iQMKoih#im'5D0*9PhGKG5qJ37JQ\$%8bh![e2+l&Vq$.IrJLOTcj[4rX-H+"g;fAf(^HUuLETo#q()qoXcb__H?!3`nDu1p-=a_1_A2rfif@iLKl?e?n%\^3V/W+&Yg)Hs%n12`==]+G@VY0gj?J*#r)SVB'jOS0M4[Z6$1h3!d#D^")Fgn=@#dhH`Z>,WT+kMtW735H'-u762FlLu""BNr`@KK_!>?$unL[/6[%T/+[!1e#'?jdAc!7/X_dX)1#37Z@W(CK$(78gSBUpgG)>jQNM%UuG=1G]9b50\";H+ur_l7S@;L(9mlREWQj>'cl],d<9`jON"Xl%7q0eOX$It$2@e(tjZj_efG7[<>>U?A:^N5:^+I,2E4ZMaUonQq*JhS6O/-L`!r>''X6Kqj-;Dq9+^s\8>7]UaEpRos'1Ka2@'.o@%j2s(E;qu3Gh#p_u%rh(LYCqmOK:]97!g_G=U/%Q;IPXCC(1040Y8s@MSK_!l>OA`-,<nsK6Mcl3*3PUp)1]en:^l7H1i&BI$U;YI%D9X7e2LBO<O0I@aTlCLc4E:QQ:'T0;FNT7#M"p-u_jCQefe2\J[]d.T#eE+0GB.U_n4$X09tp3[T6&c@FITjgM0f)5=m&;eCP$:.%2oQ1LLf@L[^WqpJE/0$Y]K6JVa!XUZ)Dd(9GVtp&V-^+F`BE274YZ*,VJ)KtcE=]=CccA>5d-oZlk8r8*e%sDI\l6d3:>k?2u5kA%`P+4r1^aFWpI5rRg0T>oCpOusFD_11Zm/ut-<R4U.enQ.Y./uS.(k]pA:JJVS')._`"=5u43]OS,=b7($-ops[3`lSii4I:r`aHH%BTQCM+>N($9kE1iMBknHdDo21%taOkE!!i;VM@0,]2(/'7V6$f6+t]H6cJkOn8ZKu:#2/T(DeTfe2g$&@$=TiT$]-$hd5;)F%[jq%)L"2-W+$Hn[s@_P[Z<tb31'*1q@L"=\E\eaJd`@3J$[mL[aPCQ!:2sQc"muaPKEtU7\2f`XAji&d:;Fdk-U(j_01&A_tuk#/uE[t%2(._k%DtOQN>4'<q=^!c/)RR.%>)L);?6TANFggKMWAhM_5queUXa8C'JO4&^@:TmL'.$i\XU<u,@Z7j:3?mZN!Gb@B]=kU'p\*S%INhWf$C&JE%'/_98453s8DZQ4,#Q_TGuVEuCD/7JV.JHU`N#tDJEj&6^;jAm+b*D$3C[$cdkh:"Z,k]ajf,PfNZGlL]cp2racnX,%J`X)4mQq5li:=#p%>X0">]D(7ffIbo%>6%?IoA>+lfak)Ml=)kR]5,a2NjuFiq^$E-TaLa!k-,T"=2M"olk2YDudA72-!@176ba[%lg-"&c^?JK29u[_m[/9Re(.XZg4qah9Regj=^n_*,pq&&m%c=M"iCel?s^QP-B^t'$58"q%*063hB!j2eC$q1d`b4PA\3'*ju[aC%Qf$hZokM@K,+-HPa+a_VhqCnk\$gL).tDW@&$`q#s.e1?kVgm%l:EX?:%)LI2Uj/*(Ddk'6@::laPht_bg"QLo^?:mUgL7epn1jb%>]=o9\gjW`e4R^I@c-R*I17.i^a<AB:Jm%-afl6)!Hl!<9.\1PNmrG/C7@@#ZndY6oY)bRjeKi*dl`nrAp(ceZME$J@g^Mc"B+\^%B`22jauMWNee4Y;b*#rIJAVU8.bT0ZV7..5?Q4a#r&m`Nfi(82$XJs>KNY33CZ=Va4WUtV-8`$(i?%RN`_CVXZOJc8I/$O=0\I$p%8C+*2X5-,fMSr*lDIUp]d$lKkhNY0Z0=$:sF<M<THuK;Pb>,R,@j).i$jnJ7/rh]J<RRh'TBio$LF.l@NN&d9Qu8P>d6e$W\ES-e%A1"'\Ca11Y)>]5I@pqskmrW8p:#,duA=S%i(tJ";3cJo@bq'8QX1B)n5ZpUAph*;!WjFhD_fX(/504""T_mG=BZo54j!OKHINZ\u%K'pId=Ct"k+"@+:qp/5O3\:/&'@0diP2o>7.HP*d&=>"1\,^lo.1Qkg[l)]gXL!ud;F-@_:2c-;mciDer.;c8Y!&qg=_DE['['OJ%4]\\8(aA0<,(e+5O>5+6#'h'EbBn(B$5_d0i5rTPTPFV)>oF]j`D*npSVB$]4"GhR;*LPjaG)juS9f$Rk5"ZipenNAQ'`O7nrrIE%b@6+hr*HpC$-Wj`]PI^h3Yl;(MQpbZM"oN+>WG+0WRY[gEW;rd0Jn^PYa"._@iG?#qYf#T,[[Y1j">-K.<PcE`.!)h4_>]tkTe<n%66aeD[E2iB?Tk#'LD&+SmmT96,rV#X_Gbuh%6&;E0UiG(D')%t\ooE_iVTjO\"7I<`+Gr<)\;FS$rng@eF489?TiFh_UXPc\/U_V%E^Hl5o^*r&B18IuE&ft`m-<rNh#.Z*ICYeQcq19$p7@LBr7BVFp*1IgjU*)k#tR;#-jku/7&mJ`A2;VoiK>N#]!qHL%i5W3^2]YZ%ZB+/7>]Po%;7]3Phaku/O7jM;\l+`./Y;DSoF1g+N&<uZPkG@u)&hq0:t=j"WHq$B_#Z7XG-J,emU3aXRGkF<HiT9qY0Z2F6.;Q4%Cn'E@/\q_U-e`Z2l-eg4L$$?FZ7@j_X;acKHT`TR9LJqE[V9Eb1`NIZ*LOVb>P21[nTLt3&6m<^OhWeP!!3NeT40#!P=rGrT5W#\%K0:]4ej=AT+$OqHRT\8ZL\\n=K516tDg/@XRN_F%IY,Hi=(_eo;K1"Y]95-eaUjQ^)tZTV;G/j)1tb[4AF44]=\TXVU.X8PWKI9*%X/K][EjkI<AiCb]Y.'#C(9J7VX#Vr<5?FeJb=KeP(X'Q9I_^2c9_jQ&kf7]G-$PH741)j;LWN@=G$Do&9Yl_A9V4XrC0iei'igK-%IS^Sm2AP`IX%YZp5M#84-4M6B3o`9N7T>J&%>Ju4'd[5Sk,dcE"rVbbVIR,f#>L7$X(")>,PY(SEfl]K'-T7gp*o-g4.Y=OEI@9Y%p""+hZMg8S89\SOpJsIcjb68XA$9YpZ$>%Y#q2(5eah3[=:QNu'sFS-X5!c1qV<>H9kJK'\FM@kmmJ)jVHZ(%dH!5TpUm7j4]U81%!!SU#QqXf/j4Y2)&V0an6#@Sbd4ZV>m8Arm!?8>OSf&H<2FuJn/6IeQOU@2WqVUV.gO^Wf@,qlFC2$(>0fZEq<)9B2D&8X4,a/&O%N]S[haTV&]MEdA]>+f*qjM<$afGt@,2Ft%lA:BdAQL7Kc1XQN9G!(e#pX-o,c#XOSS:QEuQB\:BT6b.90f31i+9^Kn8@A"fnXuoO%%(1I$C(h<XUA]&OXk%oI0i<45cs(JI"I@=n_?i),n3F#FfWK8*DO!Mke=MZ(CFC+AZ^^%J/<+R=o[Ma!7@Nb,9gn.,q%i.63iYZs%6sB0n<#>K:+$9c;73IXdpOhm,WaOhp!eD0(DEB%N26c\:.L"i"qiW?M6\0V.0OAiE#_fB/\*i>FDuDg^F_!8h?`P!*@]7.:e*CaG%0^]-<M`UJM9L=h+d0J1R)%<Y>ZM;QV5'rO#YMI=0b$<L[*tkU%6^edJP-n@S6TXU7.F$SlZ=\=T@-@2<eD3]Opd*BEQ+:N<e/Yf]%CG]-]Sr;9>%P9uX`Y[#-[lG_:#ea6f>u/:Q('hu:1Ab""[6@*9)Sl=oh/mKpM$@)l/.:cQ/2[lUVJq?,/\n#S?BnNr@EX:ddO[.H%f!0oM5*2t.,E!#[p0oC.dXF-K:LRfu6+Y?fKFOri's]2U'64+TI@E$h3XhMAUCrsF,C@NSg[\!IrB'O93PJ^JLs00DGj8^,;1^TC%>80K2m5iuM[&7uC*&A[YI',Zn@?.4VA;E`JWhs=EYNH,R@?Im3W7YQT]oJZoUg1:#P7'"D#cKP].7>_)_.OgC?S[1r%n=K7aGL`/%R4opF_KP:Tlu<6@S0F%AB/Y:PX\6T/gF#!r1^Y!q.;,H6I1*\<:-0Zh+4SJjr*<PoS$#2Qk?"[HYKCP$(n<b[GP.FnFZtb_7o9+.%]F'o`qX0O,]_7n[9nHEMahlWl,HIl-CZq`$^8FRp6sTAWebEl_&T%bVWQQ]Mr'!\k^:jiEf98OM3rV'-Y?(haY`Q_d(IO0#^/QMj%Jh:%/,J@/h<hJ$ZFFVC,(k5V/B60F&V*8@sk3K9n5P'm'k!Xh?MfMF1AuH[JgOAelYPh<FhGh1rVdp^r=1$n\&(Z4S;nO2j_>f_U%eA&3H]qSZaeA1ERb2C)Y7FTf7OhIrB<u59-bP.>7I@d2YRG"L^^j@d^BdB(u!5nG7)PP(]jQ!)Wg+s8<LdKm,H"VX<2Sa!Y,L;+0%YN2\X#Y([f!$+X3e3?50C%Ke[@BiP'LWau&nlH8NCQDKSDF[s+VH_;H8$g,Q"E`?2UEE=22]4Npa"<P:%HU7]2/1(@q$6"Io$qin%Tsd%(PULjQ@=MEPrmc'0@8ollg5*"[">i,6"IY7iDPT&nUL7rWAF`"X*&#2`]D;tr<:C[C#_ncn\Tq8om0lsr+_DHHKt4IBAl6[.%3SRJMW_HO7<=-+)G"PYX%_nFW@8_kVH2:rF)\iK50"9s]E"2moiP?#E!*O1HD?/<+3?gi`]<Yc[BE%%c2^d30-1_h,FTPX$N']t*%m7f]n+P=T^F2<Re)Tf;JJdn`r3969>i2RjZIqEV3W>pe5/LiFF\[67M3$<@h1^/@]K(XcE)#,F^DKQ.];4V$G.iIA\p2/2/,j&2@%Vm?P^U<Ma-VOlN$OYgKQJ6so'(S.(IkM,<jPB(s=@a"HWQHB9f54<5.Q=(.U+9`V-j)r@u0h4=/CS9"P#fdeoaEp@eVJ;hFXTp@<%0j(3lM8iJ:bZA*-!fYGcL/rh/\P;NB""[(u&9(oZaSa>E")(JM)j.<I42S5-@_q,BSdE%'1kp#Rc>^H7*cd=MbXPiKdn[5b1_Zk6%Y)o=u7=e4rUA&-8.i7eO**Sk%R0iETXQ:>MfaL59YH"+Ukd#U<(Yf*l@lM\^J]#`r<VT_iUA)(Gl6;5FBl[2fZs9d%UtJfKi4nE3%f.:i\-/?UH)9$M1\,ZQGTbo90S9P+Pm?]kNCQjOcI/MN1H]@1;.jaja>RNEdq1Sdn'T"TEX)M6!]I-4P0I`iG>)T5XeVB(0%m,sF%CnlsB;PGXs71";J"Q[L9Ve^^22&@/)e.Cr%RK9%MgY*>LdJT\Z/@be6g1^nU.\,5rOmP[?<f:Z:eN!#U1L?$qLm8Z6iM<L$j-t9M%XiUEQ-3tCOF@LghaTn9;O*4P4ada/O2\CX-WEQS+nu4OG/>o1]T^T+a.PbM7O[r8-'`(\Y['e@4F/mdkEK-_3b,WlgMpG*g5"-m>%N7*o7ms6^#2nLe%a,AX%'+f(%m4VI3c*Sd_W.s\/<7Jhj2Za#LlZ=IT>(-Iunie>Q%!)Q-B*OD%AtS_QL#pi0A=/3AM?Ur,Ve$`4%nkqG<#oK^$g?*J%6hqskJqR#>>(B=:f#Ot;pW\;=,P:Xp@,Z"b:`f]*Mlu<#Gb'-EdV4^'._Z0kD[3tYo]B8UL=+F).pb_cag%+t%]$;R[EcMP-0YJBKeUUPaR"`AZPJN4&aSBR4M:\WZ<QJsU!KUJipsOk,F$41bX9RRHdg+^"UPb0H:^^QC9F'FRD=/k4'K)0md6A<h%&ZsT.V_M8,FV\J]`nRJ;%6M6*d9H-r_Bu;ln7bpop4A%7D870?0!o/+,ss7_blJH$U+o6TR%*`iZ[9K`D&cu7=p"KWFD6:@DQ[76%907:P.krrZQH!'Z^!@]!>,9d"F-)#c,.['>7X,D/!R\f/g:*ge-@(X"hQ4g<=11a3Yt!9mSL,#MMHPp1nAM(lJ;,F\,V>4TZ']>$%X(j,X!`4lf@M90l9XSYRs5n?!!`?rTaS0W_9IcWN#.P^6i>;g#<]OpM^=kHo*9`>r2+bR2=X%.]np"[66.-<hQ45l-;1?'.Q4/GN%84*l'\7_)G4GHf2mbV)t?p1&eOEuOIM^Jr_"@=NLq<\Fir%k7$Fb@-&NYV_8?j6LVNZ#q1.&RHe/"4QE2E?aS7AaU#>RMOF)qX0e%>$UO'm"+]W))#d6po:d.G[5'_M5:d#Nhm"e(G7WEaJCQUrM[<pL[L0;mpRQ>4P6YbO'!g68Np*k:Y]#Tg<&:9C[PZsBd#3AU4@3Y%O!_6BkA6KEpJR$o-N4W18N+4%?O)t(<mkM#<A>PR[YQ2`4Cbfu'-pZu<J5-K"^D^8'\?OTFTSa3RsY3]Ba6?C[ZX=pSj!G\'e>*U%Ug$t:PnY0"'WKod87T8a3a,cOo4b`Kcm0>L]i=N'N#0mh+m<:H,78fW]R]+Y<hQ<=;KY_C`ohOqJqF)4fXlK#md(YoSW`d@+V4T^%oDR;",@>?&kLIi+A2I.(K=2;1I`3;1!gT[DaB/^>2/l.5#(oET$8d?2N&I+8.SY#FH=np[\9%4)</PHT^jUC0-2>+6KuiiGVlMSo%M'Pc1J.-0Y3g/0.iebg6a76B+5nee+Hrn?f>sl">^!0\SL;W.k*(lH7n\HXo%#nui#,Uk;k-p["h<1Nf4'4F9s3+YiKig/W2@8IU%!B3t_X5LQo=([m;ZpkYM8^Y`/^tFUD#ir+K7%g/gX[D![-*9`Gec!fT*(T1:aL$uJ>>@%j'R+doqId`S;6OW87_m8-;Zromab[CR%6f+"b;Iff_RB>lqO`hM&MDNdP*k>D\$G$UDAOj0_Q%!olBVOUrqTPVOpm<.m]nAdh$aP&`f._Hd$EeZ?&375a,>@*M2V+R`C\n3K%Y\%#Eq$k'R'GTBb^Dm*pdHrkk<S9RCC#(/kNC#4#Om#E%J_O:XJp,bUPD%UbPocZn\7@#oira3/1'\J^W?=(;p0$7qodOS9kdjUi%W):ZT.Z)NpQ_KQp_3+K\:r2V:q&TfLJH%U8A4Kp?]pFo*3+'USLq2BeZJNg^CSRa-,b6]9.&g&g0[HH(c'p/JAr*<5BLhsY-LrIs%[_B5&nk,kf'qc2BE2IS!(djed+f=]B)Y-B["0/I$"/=CNhlDo3^+$G:[[X*eXm1:EEJ%?0e^YnYDE16'qDqlGBu-._Jo`6.$s(o!%<G+oLCpKGpOUb\jdkZ<L&-h1'2MiT_Zd#u]@UdJ<4Y#u9a$F:q4jA1rdtn\kin*Zl/)i$o6o_$'RW1B@UkT)$5^r/!A%=X+JhjF8%g5G8ckXn<WFK,[S$0FV,am+oi#21V2Zd[p1"?01rY*/'VV]*]t3MfGpU&go^8!/b\>FQBJ([:4#:BBh_!p$m\N^u6n((;H/DmEC(%"eo3\D35tWeU4(:*g1GV;-ebT&DU@/E="N`#."CQL74b2klc5%2EjU-PgeNcN.3i/d.Sr-0LBJh5XUc=r`5hZ*!Nu^M3c1,8-2)N%J[Dqtl;jE!J)4S.p+6B7)rN.a&N!VsI*,Bp0fr<s,3l-iTn-K;V2kBgrN>sd%S[\Ljqnh>B;"3]G@d6r!IJa.8kJn!:W'$&.LZZl%FeaF9R*n22"'Kk*Q=0ZI&nSJbJk4u9rHk#nM%MZL8Gn.uh\HTBW@bV7E*n$7dFbM_h."<;h's%-Bt\`.4G]Y07puJ`MsMNiKOE^R%V7QHcg`o>WLe(aG-mDYX7bLO"jC4i42dD]67pqEP?t7,Wn)B^^B0YG`Tj['pD5W[5@?>?!OLS"$7?WtE>)+Zi'Ek;0V`ER7DbIlj%.cj^OQ3sd.k-ftD+!U[S)Dedd:)1]'96`f]3PJaj&lV)GW11$:.?Qt&GcF,M4qRl9rKtE#KYV1+dYXiV!$(d?`_.[<0t#gjl[hgI%'"3Rbd[HHMZltd2FX8Wb`jmhK/X)RSe4EQ_7$hbK2>1^%n7uEA]Nu3/A3W"?)=*,ZdpetL!T+)gUDbe<(6Oeca0-7\lcRG(?r3"K%_8QeCZ?rJo$#,:``mV,o#lgFF&@Z/T9WKM&&=?5nMcYY->7at;:YJ]sH@2k1..;t/_%KN^=nKM9-jJ)/hrLpjp!L[b$%pQ`e*W%`%f8pXC'!!ae4mqB!>fQ8EDg$C&TI@P0MZ"<P'lNJl\fAO$gg15]YBPBW6faY73ssgUn<YZ"fCA)NRU)!W6+nlO'<P]jSg9YerY.@F%0s)E=:6E6$mf/Akr!AqaGD4c&F]o'`Cfq__YA<D6eSQ,$>84#M292i[(3a'anol259mIo*DdHI<f0)6DO7ILK!eMu%Z((2HI*:u,%s)l)S(6)J@Mf0l45?^V0Q?F:Ls(7hkJ(b;,pJjg5icKTZC4U#nm%M_+5[ZM):f`FGpin9=g>\p"dimCRL=C;LJ#=KB#`]Wk32.,K%M&sbZ8*I*"=Fr;_VB9jaTRfSi*Ld-Z#@/o)-H`3KX],AtGc)\P/Fa(`)6IR@=]?qCFd!ZSV,Pi[GES_AcV\o4)H,HFmLqX;$)]p?%#DMWX04jPoB6LpaEKf3nb-!I>B"-hFS*lkTor_kMGA17fcuc2j!s@*D2baMg8a/Uq&S5oDW@_?qGq2.s.j'GB1<4dYl?KP>]B6/k%DZNA8;0mR9::Yh.->#3/&=`_GEK?ujUKM7&7(pS[4(9@Nh@`.:)`+l?RfBK[,sbG:8:`n+_lfFFflYV$UDCK#dn4oDE!R(6]B_SU%)Wl9K\=hD^4(W]:X?*\)q6V9(n@]TT:nsM`.7^'TFriLE[2[4iZ%nc7bKFW';VdCsV;:hj7!gGWM4VL;^5qRY[8j7"LYUDk[W"FP%`o*:HU?5s8ACqggM8afFX?oingRVE%No5UAN@;uc5N`QlcfVQn]>CEaZ@&@QGjlYICsYM/\/B@m563U;1T0W)VV6/'ghK3]*8d0@%-h82EYtd);eb#^A&BLObWM`%'jht>?6uuD+6\!OBYbSQPX%'gi;b2<P[i884Y,D"E+nJL@kW#E\p.8+'lE68h+:[1<N"f&u"#hnc%Jk.Hppf:L=`Ds)?U9HuWQ^-Do7Ai`n*/-`BWJ^MLSg3(7LBq8**$Y[/f&\_]<D,+OX@j_F.J&%T!KK%3!Ueq#X/jiX/Af%k$dd)R%Onc)Z(3fJuP!UPu#.Tn!&"U>J72Em%UA(L%V$5SdDRhD*n.<SZ7CS.&(@/+DU@hdFVpKK?hkS?H]08fDW(4C<i'B4'h$+eEZXa[t%\;u8"9XK@."kF80_P'PAV<tY0/lA+3CUdH5l6(d;7,,T1Jgl_q2?G"pO0k+<O@8"M[m^6W"pjm6;+I-,a1%8M;S[2Ps4+<&o[>1I%c=fbu&cg]j!<TgbK`[H$%Hp4%LQk'@.YK87(DRNT0uc[V25du]IEX[Fhj#5e,YD^a4b4u:2`F?RZI+L[7opE(Uko:s@3:e[]%51@%1i1p:MROb26KF"*Ol\9'Wgq%;9JB+i<3;TUmEI,#FA8SIe]>iJ&!_ADfK5Lc!8V8'X8UJha(,mhnq@!.#B;8g.f:^?9.)>[mmaS3%Eq<VsVq.%4.6")\MhSAqM:u*YH!&(4>7oa3-`'&1BcdYGVW'!\s/:HlgE#d_*L6#,o+ocW&5t#UQ\HA8UT.U8[sk_b_1UqoD0lc)%;o**f#5O75"<]s6^8S5!BKHC3Q!D(%YT.=h,:cGH\SNisVO"&OV!i7sHt\&]!#IT^qDTFieq^"9A\5NacT@?hV1&qT.j$HsI]3a4%lrFS'-]%>-+74\O5g\]9MPbc9W)K:JJX!!\6EoW"$@EBt$L`**7BO0[RHh%$[P,8"A\iJu7*X12GNhN5g-.+$WlsRXa>G,H/u9Y]%^*FK#^lW"k3;"&F\]=dnAV4_J8.Jj>;b/!]au;>3Bo<W"2+6!@$.Q(Z^5WN2_GMS3IFM/f)9=_&h<V]gR0%-#e8u&s;m%hXE,Gl^%en(!4p1^rp%Q%pa$i"?7/`do<OneWaK$atm=sd$M77?gu3.4:^K>a#>UPm^T1#7ftgU*OdJ%?F4;,VJjl'DsQ.tP0MqjnS_2N):j%)T0_]7s''=],E3e\mHUY\3nWNmm[iIctVh+;"I\`(\SakQ=af:bH@iqkIYT%WidD&!#)\O7TT[gi=39X.?9BF<Gs4-$a.:j7KpD<%Ws0DL_(+NGnX$g^pj//JHP#Bta-$mWKP7Tfm't4*l9Q#+cM'54GTBYZMq?B&D6GCk7gV1?HNUUL,L8Mh.Hs(JRq(dXo:BjEV;#G$%cN;cZF^elOS"@rd<FhYIbn(&Vh.>XOB-6-0cqUObBrh!'8I'EbC]c9,!1d/$QBPfe6lJMG#eQk]+4VI1B(/4a=%m:R2q/_KSdFb2%:JW'e/Qke;'N];cW2VB1D`bhDR7urZ6eTJI!mZL*ZMmHYWZD`e%@/VWX4]eS%@e+AjjSYS9_8&piWY*)<ltOrjpRrV8:)I&@aX$f%f]_u8(LdFtSil!X,c"2e.(U'M5,PbqW(qgokjZRVo\cgWh@TY'f.DH!LV15p#"/J@nOchfkoB+TO@k7d)Dsfo+Vi1Ia=Kdt,5<A(%1O`'46\'W;\jWm#n3W9CU1kOLF:QN0pF8am[Qk43gPT3jbJ(@]mrc?W:"FjubI&3n,KlL>K^>1W/_mbPeW:'-F=LKOH7]D("2n3p%UFDZAS.j$-U4k$R@CAM'&(D!:2pnEMd18YTI>Uk!]>[E:b`0Fre[R]7l7aU^LgNfN%8_FW";#H'#nDmb#J-LG/]08"V@U*0&^PL<%*[krol['V/`o-Zrl^)2(H;`rY@7f[@hLI"\93M\=KfXg#7c);VX`<E7$fT\S2V(jG:o^=PORICeeAf(Rqb%1SB`-=]Vqk*Ce'dHu%!6CVK*;(_<!=ZU9#rmH9GojIaFO]?DEpcmgDc#[2Vs2i(C7rZ_>gG?!/-!gR^6Mro(<ue=Rq=Z+hBm`<lfCu.Xhh=`<`kg8Y&aB1%"M3esgIIT>&d_<Y%7RcG6smru,J`-4.i"hC+?gN%7PQZY!_QVTn`0Rc$sB^@f1*F:N/oYfJ_`!9X_aH*6XWFp/5e"P8QY]`;l_E;%pYDflG=CaUJ?<5$'m+`*#8t@@PF_t*BQZ`C=daTo9;k)Y;GqeWWPc"F9r=%K.mf)*\!K.fP0ZtS[:Ht2=(1Fbqhke+p:Wb&+k;bj%!Ho=rdha2qjs'!\^p-!$L7=lRis9,\pq4t/=j_Dd'$1d..DjR8R#\QQ3"!ID,<riqWb@t:!JWHN`JubAjVoV7_,FO]:!7*DpRMHI%o"#3S$b#iD5#frR10K1bB@.&E4V]O[/r:514VNfh"^t'[AH"Y+lpqKY:s[bY,lXKZb=0A^1j"lN:-RboSN"%Z`3ur\YO#_QKasVI%D0G++ot)!XPu&.FCm??U`s*[p,At\5K];3]3d?ShNk)mE^7']F2IPQS-C<",>=gS/Z7>*.W0:<f$@T`>X/=nHi:9)"f+VcD'jD@O%C_'e`K#5s3?H\-FFo4$Ph(;#6mo%"2^I'/%or'?p&>-S_JS50lZ>R]q@%;Dq%-XNpD)Laf<PJmN69?Z."*uS3SX05BgSFTrJ#D^5%[:Bk@G<L8NX>==G?,L'$OcE_rXs&\?La3V:k=Y.:8WCH'$FU#%iZiTP:ZC#8lM_buJb;i,4)rE_bdV&mN!asBZXR+LCXi*]@n/M4%gf%LI`9%JO6'BLkMKhB0UHYMSZ;@kCPLG"W&":qh9_%J?pgP(5djc/C9R04UDoC2[T8[%W4tW%&'ATc]OpF!*q1?s2\S]J,)OKrh%q7LEh!c$YteCF#)WC04/(DF=(VD@EP]d\Qd5lcb@B<g//F"6K/g!Q%HC-BHdgIE],!jPG$<EJOo5Y4q"#Sq+2h$!,4D;q+14;USh%ZHTNJ>R,/^cfU;W4=IUX%=5KX_L%*2.riasBVbVCg0Dl-8!g4^6QKXS">,t909W2')6E2*H'V3G;9OXZ#!%>R)fYG8;[HSm?#L^S%W_Rs@J"$dq=-"[O`X9el*6*(NI#I!Blo@`:fX1).!^H=8!!Be2GR69lXq<_6OoX:J[4OW\01,>&o&p;P1o5]!T53QqYS(JEb=Lka%>7&-3Ih$1dCL'lE[],5:_A,=u1mlb2CoLTUE(>>FiAc<mq.R4ReV*>2L=*kV/fN,V=-Pn+B`f8PSc[0e3]MA]@J*.QAud-t]EQC;%`\SgiSn'4DL$T$T&VNk=KpGoOk2ut<k]62Yo1PT4Jh.ug=DG[o)a![TeiX;J;hh]b(_KH2?ngGC[`&U\E13*GdUQm4iN9T8Z7_#U%K=@mg^L#l/(@f/8f_j/,h:jZO<5<Xi7Z,IC[ON!*dPpIUf*=P=iq!l9jbgmp@L@Z[I_OP6V'#X7l[Fp8;G@+.J[Y)uWm1QJ<L]EJ%rNH;X442)mCE0G_c2mX.78&V/4f8]nLmq-&ggRJ_rgg?/,sAlmR!)%o.f8-CA9i"HIE#aN(0-l\57("cCu*_'Qa`h^e,lq?^=X>.%?c\oU87]'/4XrnYTfjRm'"[V9'hbptn'0ru\98[6#t7,,k\amnp-YS>6sn[:7RW9B21&-EROl-.S&;KS(#SAm<64XP%dc_7%qVFh%UhAO[\9jT<dR192Tdkgi]TV)l0O/KU[eSqW9^OlpF!+["#*6I;H_K9'`g0\pR$^MndbS,4VkbsVB1kCOV/./[_kg"8AoYMKAgnVI%mWn36$Y^63GnT"@GH`J?Ss)Ggh0TVcKA(R]')>d6fg;9Q8"F4]DB*=qW\_IG.ld[@9N!5=(Z!l"B7<;';s_.&k@YI<8CHi9+1-sk%Q1j>U_Bhc)/jcuKYI5nA3NOQ"$6WFZ5@H`;&GnfUF/U*+^sd%#J#N%:7?.IUFKd`blf?iPGdobI<27qE!1MA=rW6jH)bmBEl18&a%T_<Ms;R-9sk.)@7A1[ZLm,9od"-]<i9V"c,k[OOae2i7tVR96g)('@EWq;``ACbA#ntrGX4M4DCGr$+*6*-TILks>HYQNS=OQ+]S%O>!c-DKVP6cY\%Z,_d1&Kk1;]Ks49X.V?tSPKn_Xb^KP2*_FoTp@FJ!Ve>YVX=<(%rgG.sR0*F$<aXeV@LtY95,Afeb!h_W"Eem0%[T/4N*;)6,U4H?%n%`$;H@9#>4kCW2QU!CZgX,6P6$e`D12k.N%T#/1Dt@S[`U6#fp7/S"Z.oLD#a;di5cN#^5'%`a58aQESWpG/%ktL*N[)u"bQ.<5`Oc@m*o6_\Q#VOe*Mrhm]RUC.V3^LN0`o!87kc.<f]rGV@!jFV`?ZPd^(5V`l0:j`<+dX+/Y2,?`U4s4Y7g_ui%gZ*g(O>oE8:tHG)RY?\'a,:\!-3".eZVG7mMWY`cE".0@lVdjLQ3-+dp!=7G^K#K483JrV#IRW4!c;^9ap<u;Qakh]h2pa6FJ_lQ%+Spa-`Q`#TTjS14lc4DgRNF=dcTXZiM&;Hhb7-1XW"gQ=^q]Sk?0WAh<-;)d><1J)]Kq^ZE.X*@;lAlT3*kqCW<pQolL"[i-hDAX%PSKOlQ$m[t=Bc16Q^eH=,)=AY@*>#$221afd<p2X3L\A7S=6jHi0cX]VLXk@Agnd!=aK/%?G2j<PJCSLQo9<&<DoV%Ycn5k<;g/X%5dGEAQ]_M[:63ie&o!)m/!_"o1AT:*LRWAm-q.@gP,IT]NZa01e.\/:DL8@'TLHD*>@LBZ`X^XIddFmg3H?NmPpN"?8RAX',rFKO%$=)t-d14L+mDa(mVci"u?'YI9iC2qa+NZndTVO9TWuWLlGB5?fjLobSf<mU6"0@l-:Sl1\>qCBW+jNu87u_J%qX(hm@L3;S>%j_"%9poIBd6c#AF2lQfZo)KKmThe$!9R_u(G=I$;^>RSPC[#O`g/qe'MI%9Hs"Wi(dX;sa>h1sc!T10!\S*7LF+JADU'.Pn?td>&e[,I%G%g[BD04;t>W?7ZiZ,cig*:`]f)r64)N0UK@O?t83o7::,jf\>hD_:7]@:SW*>Q]BJJYOA?ql3#k`sY,b7G`'*+tTVquu9)KXpWn%[fL`)5M%[KPuPX7^d98rjZq5%*6.ZN<GT5D*lb>TTJA<0!BI38d"qi4bs"`$@B+!;*JL"Xcmd-"<]B%/r*"&q[eOC^2d?@$6&JA)%B&g>L)U>g`(Ta+l5=h!nd(M+@Usbm>2^hO&'BA\1jic*rJA^[uf-J^,"00]#/rs5mbE@)h5=[iu`<*6B$ad(NbY8Au2-$\o7mM!P%IVUTo(XkWI4N$h#3pFH.*p,XP/7K>E$:rd3k&QBPGZ$=EDb:AY96MpD8CURI)1Zg,`9\be38J+*GmLqnkDJ+F#W72d4%,(2Y2DtY%N\-G?4UArZdjE%1dhbq"m.O9,!I,R(,$<PH;bO&;RHcU7JNkm8dDAiP\QUSU\&OplH3?ZHThZ9Z;<Hn[LCoqd,$i3Gg:(AVH#;Vn%o@A#[md07<cm.>R^7hI8X@8JU!,k-?IB>':[Yi!O2$B`<IP/qY+3I$*[4[+&]UX-4B_H=sMi[,g?b2tZ79jf=U<-"3THC@'at`]+%>"G&3NL]$nRl5R(<L,3mfUcj&q=(ORV]/,\Bu0SD=jAn@>uDqM`I9f?mb?8;5Sq$J<KSR(oeCF9_e8B/?!$:WR\uWKSaeXO\nO]d%ln[(,8V<BF?+gZ3S"S*ORKHPFZ6f@F.q`IJZtFt?/2\8\250MYHMrT#HY\570S8k]5bT#%H!"gCW0gP0%^-Fq.Tml7IrAqg,6IdK%TAn^#VuTb7j!p@I3$bDfgAQ9WGoTlrM*pdJh6F!:.@?`R\2r4&9I7_+#+$c/ik;FikE5Iu`leP^WCQ$tQ2KFK*\Ji2Li-XXoiEm?%B(Yh`Y&@3@dln#:D<Kb*&$UA+K8Z<HaP,lrQ+hDV%R$STopU'8?=7D)\>gJ1GL453-b545Dnu#0C=*AQg>_<8Z4au/J#aJYOneVB%;uC5u"j>RImJ(E-(Qo%U=`;Ur4Xlk_;^ml_Rl'B,3YSO+O=YD^YE6;ajM%T/jDH&9L0@KGLRlpmjU>2Ah7/rS.>%nlNO(+2?%97-%S);<M::)+6Ab,JeZ@O>a#3$lHa0%EfhfIJiGNeKf\TX/m:Z"O9:fTIs/YB(,<!dGF1+"E`[`Ufj'XWJ!%%T12Ckp5N=S<8%]r8o`%G&"m*8a`6rMIb@W=(Z6]F5<gG#egXM`Fe]RlkaCGVV:N>W*peMbti^.#!h-\[Ot9T_UG^7@?obWpL-i>I^IVgY0VnGnkIQ3&pjBE%K]+\tCWd!Q0gLe,FF@Ll>LXo*21Bn_\s?LOqMdg\&_G"JBp!*;Z?J$<$i#LhY&ao;+[q7UJRVR?)Q(/$MQ_.rMd[iblV9I/Z)M="%X8?!e/U#\hhGk&cCU5o?HG7CYOK;;4$l9]a!-in<?p>sBH`5uX,$#u>Y+\KZ9c_-Y"g8IKRLh1k>!=5D#-*t]@W:/A]7Es!g?Gic%'eF)J>SrfsTt/^%J2Op2e[c-KkcG[?re0\e+Jac`_lRj]9UQsm<#]F(:\/-GX2UE-^#`'gCY!];YZ^N3;&-*Z%-9G^R]C$(6IP'`%Ao?)WN[/"@(JI._47J?.T'n3$B=X%5(f!,FQ:.=h@V-ssE]=bes7>GsWg0&e@KaUB&1K',h*e=qjpkF+#&u;i/&Y9*;cT##H+l-,%e2Z!j+/XuLJg)GIZm*(IpB``P<TN[Nb>070L;]*ib7+Xe=hnft7\cOBGL<=57Zbpi&QRo]/P;d=o_W`E!j!V&03C_,!<9SBZm2Df%ILDG`@[H7$M2/N8g[oG<3K'a=a4\_mUgUW!J3;rTerJWKD.lA.AfaLPQIq![*(.oW5rtjqpbfF=:j:(<Nu,0F"n&ON1IH_HaSree%,[;@7c@,M/Z0Y+L5FcQS?M<ad<d[hNXVnu:fD4$.#$)+Jd:<[4==cbg>a6nZ%tAui_0$]m#@H8ZEjB\.#AWHg!*nY[qq,W#Uk>L]%h!9$[Y@qjEl@e\!e0AUC_jZ)7mmN>QV&Dh_O]i;0)\bms@[C$dfN%_pVb)"ii8S!G3j5EGLR.j[LAk;3lo#`Fju69_)ZJ,Zgra3X%@$<-'-u_R4T:8ac]r(R*D+<,-4d#&?Ebu+B=kldo7S"/R"ADTL"oU%Dr4Ng*E$3DMnX3mKfOA%1Q!)UYDA"^!/,mYu]5GU@`N2I)%OSNWlESs7Fet/g\Y@u>NQdIa%W!=CPr`L<]W`G_[ad*<p.sL_;b$G.7NclKnlk`S4hVQ;M4Z2o4.oW[j,lInb3st/fKS`Hs3ZYfB%?QM2.Mb1kS>N-C/2hV/tX(goj'J*_H`#P/\I`uO'):e58Q2<\?ZDoq?`jq,ZTAIY*rh:n([Q6fj$(Dcc;J8t4]n,gMhboS1FL+nD%Ip'jWB0nlShWk`8TN6L=DU.e]R3\ag,'<^@J('I-s0Y(kHp`>H4c:BUIoOSj2_&taaQD,?WgtP%?A%HgGQZVWV.<4.#7^>\%IK`3%jRZ43':DNcJJC5ONE"RHQT^A@&rc1Jh@N8>[#P$%+qo9;)-(&"d=X"/5n7b?^qGcF_sB_&f`fMZWbDQ%G*VUG%#+%C.*\?h90UUu%&?FKknhCN)+aSiG9\40U'uGs5A=bR$Nj+[97dZF>;G2gGmT,9bA5fKI/NMW+faNoV5RhET.S";8@PXsu22+rMZ\:j&d[c-l)P(!\%E<MqSDu8lkabRo[3_q')qLf`_7I5'6,`99\%5-(P`D]-:=B[ed#?a5mMnHs#1qDna^!k]]/mF.>3<"l\G=D($n+iC]c"B?\(-of`%GoZ_'8qD`_NB3b\pkWK)M1u.0Zd7k@jg6tRACg1M\[p8#Wk0l]CJ.U#9%\5jZ]@U6#9dV;:>3bU]+!gfJ#&r/pu'T;X,3V].L3b?%KVTbAAHeT<Aa2r./oaIq8U>u9XLgSd#82GAr2gU#Bq4rlXX$.-BJ,O?WZVWb9+Zmp`0=s#SC-iZaP8bV7#JB%GKZRHd[cAn@)0>6%RAJuE+WrE'G0A0A`=1)AdqC_borOsT=^8q%J9oA%M4?deN"N9lJWG>Y7=_OQi2eVLRMjOYrT'#NbEg9L[.fpqObPTIQTl5mOUN\@%@;&*%Yf,VtU6N'\rQ]/T_#+\JCU<al2]@F>2*5Dm&2hMU,]DrQKD9*H/f_r's#np+;9![lJhS+L-mZR(W20!fb3"U$nekW.h-s#A%"=<ZiA]n!$f)uhnR.Z8#a!B:JggV!U$HsesGO@t]Y9c?RA[qiNLM+TJo=.ZG1qIPU,!)d0^M6&fiY"NWT-E-*3EgZ8d/(?5l"79:%!WRI6ik^GH0<Hnr.FU7./&FD[mGiBC"BhXiVU)g*M9o<34=LnOe^cl"b'37R6LI)U!]s#3X2kFSlp]\&`fb[IFbW8]\J[5Z5s:!'%9N/@A#%4c36;G`hX-J[n2_;"C"Hm%('Zq&/c:-9\(7k$<LBJQ(%f9ZpSJ?camCX6X&8iWt7l5'd(3SLqs/Kbk>H;M'dk3lH%nE<?%%%ld$BkO,>F)PSj1n5(V$_oGP"B6B4A):%n&W\MA8,%UO9cJ79_I0\C*.Hnp);2m4qRt=XAk@P#!U?Od?/]ii@;#H)dl?p_AQVn?%T[1;-FNH"A#eg<8E(r!cQ.+GN6/k*Wr^b<EV9:Md06-5d)0@kcXSc@Gda>ZedKhg(I=g<t@A<g4'H_$%8\j/$Wn/_nB5(9/;b&uI%+Ul0+2F@k[bd./1IE(tdcRl.u0s5??W5DT@e0u>1&k&_UYY`lk-#Soie.L>og&mn,*Y!rTR"t$L[LesqE,3Z]/)@St>Y)':NG*&m%d^H"d3FX*Y]K7-@>Y##p_$./kVKK^l:4dOM7t.%QYZ)BFUMFEiBNpZ!n2KTEicS98*kRjIHG%O40aPa2\/#(`>($jr)u7f2QsA$J%1sFPa$6"O:lH$)cVfeGs=Hu2kqjHk^g\jr+3'V@k4TSRMjH#HpfYX6^ElUs%CamK-kE4+5BEoGn.A:00UmVLAekVR_:3P.g<V4:L%,8Hu7A))CB'f=B]G'`7J$5?I?3'*Y\K#8jSlYEE6-W$S59c28sC)3f3M&UQP-4`HW?:q@do'1\4o<cP(5q6d??,J!3Ape8^0WSR.%hm/n,Q]]]'1>35_bU"LU^o=-[VcBtum@/Qs-F=2dF_\S9)=#FBT*a_,6Cq50bIV'N528GDW=28IA4*Y6=(kY)%Xg6-8_kM!DtZ)a%qeaPB5XT3k*c*6GK8A3:[gNm-,T[En\6'Olil-oFrYWJDVoK945T(%r>4(p>2LGn*%A,r*"^NOZk=fh6qDQeti2P7+OIf)?D@[,p%RcJX%+_ZZo7H^)k:snSD">,lO]O9shL24fUnp:A\QOPZ&X7r8O/c53\?fk.GRPX97+c?hgXhogoEl8:M1@MHH"%nnpngMA$Z4t!U%*DZP``"pi7PgcS/K7<Wtr<+Wh'Y,K%?3:*GmV3qO=kYiLU#47g,Xn^um;d.m2]ZQm;hP*Qlkr)31>JrAD_qe9lHe3NlH4q$'!6;'%=f[0W!#f]:l.0H"ba$L3f<!JMXC'd,d]U<1`<qJqHZUj?YjE)gS+8_=bLi=5]<FdaSI?qhZgPT8.(L<cg]Ad9go<c7^,q11h$/A=%+3_j@TNMM`qlUjZ*Qke<^jRt]\qeg`P?X*,cGDnUBUJCc(3-!"JZUd`gbcBWo*ct#GGp@g"lQ5R,IH#559<sJ].Td]=YmC(UgnsC%prpfuk:*!g9[>h7$$%="2Zp<gpjnPIBQVbTq&IUWgMp`c5t`>&]IVqY,f@VM1sTk-<"ZXnS0s#e-<.6(_"m&R^CTu+5QBkQT+5W.%o[j->X$;",LSstn&C3/f(0B]BP\4qUGn^!TnNH#$rpD#']sa\0Z+dmDiL)'$<g$nLp#2nTU`]EEhtum5$pO:)*k_17J,BX[T#_9V%pcndHj9gd]?E`NJoi^Z3p[_P]b8gIdkmRe/R.a7_+t9D6c'jc478(X)pfFM*ltQ.g+p^8!^XSp`<iBITF1>b#Vdhn6X)c\s-??RT%3)%5)Vu`'fA<,G!nX48JB,Sh:FZMr.PaiTE"rLn@Ve*fGg*5BK-G<^4`!uIp<qIh4MQK's]CKiW_8O*!<smjL0UJ%_'H!B'V!uD+%S!u!7X,"k]CYB>+rn+"#Q=?gaT2.+Q#A&X*q=q8Jn(up%8uE^a5'aKq:[6iPJ$YO-U`?M5]7jg5&V<i'\3i8m;U@sD?=YosMs*@)%SPsPS$BoLmah)N;phPqWo&m.5d]@6W9\8LdmA6^1Y?\D"gj0T+GT_nflJl*@^,AV"e$[GG&L.H%g>3YG[+FH'V98emB0e1:A\\86%lhDop17S;)Al4JJnp9?EE%it#S[B0>C*"n+L"6VXaCX2B3p^XA^,>$[3OBP_-O)65%U0'YHMZ%e!=1P>#%q*I?K0]1M#LG*9j/iJ%#pqY;(rJjb*-(>X`U_$DpPL4@*(s6<E&:g3UCk/o/.NC$!(O$F[7GUP"I4$SRG-&<,G7MR9@bXJ[[<Pkgo_O7MBqU?[!&m0F$pu.%dD9G(V^r>.WB=K]@R<)uMVYH`Jj*37oO[)E1^*>75I$Z9rbc*)n8%@"6h[O]Aqtj;^Y>81KA-+(/K7RO!OQ*T4Fg[8oJop^c?-$&%hB[KKT3XBH2^J?JHg!I&Ke?`khJC-2"@/PMZK4b'7OJ@$^,YXGSL4S0Iu$=OFsN`44,`/:NqV:L%'1MJ)8^]`c'dd@#@]dNS>Unh%1dS?&@ooEI.(6-b:e`aearCC+_0X3j7So!K?I[TD!gu"9KVYM=a.;0(,g8fdhH35h5/59=IAWe*eLi@TRJD/,oO4-AklTR>r:Vh1%`XmPOs!$[*\BTOiRG3U,V/C=H3V-l)IeM+A;6-30TW\s;Z*O]L]=SWWm^AfuPfMJU`ht1=U0>FIT4[aY[ibFhhBJ)2_k#o6c`0F)%;TAH<E>:^[D@3V7X#\!MO$8HK+jRb6]KEcn+'ngESgBY:_G#ifkgimLg.)+4#,RBT+UO-M3+,-A)C"-f[E1s(W.$Lo(b@j1LA:rj%&o!N$(dO3PSOgm?.E-,8NXk:X/(POaoBS$/'a-pl0TjV?E>ESnLMJ^u[L@^!3C6c8eG1sI_"@0EI=;3Z'.(2qhCTl@#Pl?qhsoN1%!i80tY:_o=/(Yda"lqRU+7o>oS5G,!AempXHVK6&A=gaS/bhq_3)-D!"AlL,%!f!N/:L084C7M1rg]h:704(u*n7=]:G+(#!&:E2%SofW"cIDO-:LDd]F#uZ=4c1<?kC;_LHTC'=45;7R`b4NJ)XWiQI-Di(JsE7(plgpf:TRl/B@r/Cq<e9Z,elSFfSZ&[KL"d[FLsn@%#DBEoKQL-Dj$o.]9:X5<9S-kM^3Ufj4\k"%:O8RtgH<ugNqt2`4?'>P3AY6o*I%/"bbdWcMc$Ls^\ZZb5M,7h6AuAsR%\>_HE)]m%[,a?G@APIT)":^Z>';*5?luS5]oLs&7*lbX&"&($A^s<cV;u&D/2o"F3FuMND3o_R/[u[82DR.$k_b(g"799MTF3"0b@Fi>g?Cpt%W26GG=\;q=?,:2QbA%gLF8YYgECUcdZUV:r8Fl8pdX00bmGDS*jQ0<B*(L]N`DGALnXCM:a7Q/J7ZWMp5*&H19f:dC[tH[W(n`\^%6ZsISC&g_e$k:slCmh'"QqK6uk^j\b']rY7MZ:sNObLVuAl8\0$UIfDFfj'C_huV%F\aOW6HFA3X5OFH+)P)"*k[P'`)LULe_59d%PVrSFNQTKmAn&4VC'eIH\ZJJEn.K`EkYo*"a[SN/Z&h=/SCN[U"6SX?r)jVh&"[PW'.(r'e7m`E#ES/g-PVb4U3cb([(C0>i<b0R%M$e^jc[+=jk*E4'>G$#8FhYgA?at][@"X+5O^72g_hO9qc.?prSgXb&;Xn2\OX+^&fH4ZA2=+Ak1']#78EnAX9*@;Fod5DD!$VCI%O`VMiGV=;d[MtDE2TZKh$Z$2ZckM@@/41RG\>jD7W5,lf'RM+cog/5)^:cXm)4mS@bRji4'F1SYor[>?RWi9Y[AVG>d.*eRs3a[o%*sdQqB[sX&[+n)P[)gBBm='mgm?%nq?d=c&<#$$Nb>6V">o7VDeG>d`Xe=8mq^AaqR$(<B?S62]?>rkaCZq.^.*'cEV?jE:]GK()%,NS?5F#V]`e^J*angMo#P.ccJ=nH#Z_-"1K/J[%e$7H_BK-ralLf7BBB'AUb6QZHg=!&07kIO5B/YDB7Rg%<2E4dOq%+5_Ji!Mct%$0`q.NLl.]VhnrV9]FAeM>(5EkmFWcX_/d<4C2[ZGCp-MImtT2eU.4"G`Sg-0*(pV/Ca6Ye@$RE4tL"?G_Wg.**rX?B=Xt;,Lei`%Q)h)5MN@ntT;B5kK,ka64F9M?Kf9S<B:5gEW4$:SLc@q''`%o_k81.4i!4gg5AJfq"2JthqZ28GpIPfiJ\Oj@\;(cKi:k7sr_oT\%"D7YX:Vc]s98Gtm+$P%JPgUlX/G/r:7mDX=^O5Mai;F%urY+YWcV5tTrH]Z3Wm?++T#`[qo_BNCq_K1Hd.84Gr[]S>ULb7Wqm54c%(4ET!q[/op,,uIKNjJ"i9D8h`DAO^"<<IJqQ@6F5@KLd%DceO'#2YW,]6WiFmsK#BN,jICB,<:omW%u6FT:/SG&[1gPg@f50c'8]%>M)Fa.$419*R?/Ql@lmo/iP'?N4`ZNdYB^TDUA8:`0>6]T`r-Q]k+*j#JInB^-3WoC&PJAY81]!WR9V:=XYMgbnR\"gq$(IDm2;I%)>:gi6/Ar'RMf1X]#.e^%J'SU+0OS#LYT4d93oSRaIQCIo>%h!4]>@epA>!QrqNBU&%USGp(POGbLc7tXC?L]bHY[h`*FD9.9bI/%\3lL('C!?f1$/a#UDr!K[:`j_KGN9JQaopG@!e0DCoe.Wm;.2g:-MK9I+R)).P@Y??QrEA?]]HH;k'Z>J9GTdG;-Wc`5g=WPb%U4%W)aaGLUkbU-Si]e-FVZELn4PA;-kF4oO$`^!'AQZlNIK9/&((m>Xed-M!Uf#,q+d,i;2hfGM%4!^$6YBGFX&9X<XA%;SrmH:3Bqc%STWoVjO!:-KaCe8!@RI!$`[N?fJ.rW,Lm@:;$PQZh;0^)"&lB7MLq$=6sZ$n1[,!<LJh\nfbZnZc'pje^r"R$<6Ln?cu_Skj7"^8%\sVKS;$NBt`QCo1#>7S8.\_h?PhsC*%bP#W3Y&4%gOl7cY)Uc&J=Vkk-[BL@L%?td*X\]Ik7<B/]nrjH?8-JDI\t3_"ek[%YF671%rUC\RC&jeO_3_44_p8YO<5<bVlkS(W<ZRf&cQE2RB>O2o7mFu<^Mj?@`MT#Ss7QMa2u9ZlQ6&GIfpri,*8"N!7fqdY:ijW-9l`Mj%eq:e^_p"V@hUhW/m`(kA*XiMHqLP!BPA8t4EllUrR<:m?OmH.0qZ`?FPb_6g_ocC1(3P#<5inr;gVDhlj](8\Y'3/,_isrp$@137%2.*JIB-.MRKSqL9#:=r?N$7P#""&Mp5<0`QUk$RZ+^D0t&!P$B=a-8W_7'3t?XWHZ`SFA]a34F\6#n<bJ+F>4]ZP.F^\Qh=&#6ZM%Uul_0q;^B2/40@,dFSBoQ`f8E80)+8VtIW3_@@:GiajTq/YCW(+D5*(-LV/#5JuiYVQ&AOnn0rT/ls-FS;E>iWHs-:$/AEdg,FhX%6'7sM+EF=-et*;+r)qH"oB@;>B5@b0*XMSJ3Phu22ht4mAIO.;5fg.HlT3_q.tmh'LLi[FJ0Aq;LDrbo7/j:1Hk)9@2jYa9DEZ/^%7/dU7^aK$f7/ea0ER@Ml7*a.-j/?%'4$5l*%Ho;rEa?dFp3jj")(b3^3>acc[_:K=N1?U"gV%"U4I87k#m<XKJAQV_#9me/%+PhU%c3rC1+EBr+*P5Z$EkUh7Zm:>&RGK-sC)hns8[@*,(b60gBDEFV\.T'-PHIO.k]S"\Y,4$^+ll>^/"Tje#W\)u'j!3o+b*ubHp0D$%-2Wn5]?@bXFej!r]A_f"3CDXGi,K\$_eA.dNb8FKFGP<2`t8krILQ=<5@29(M2h+fRD\<5)0b#KS0?BYpVr!O'j]Ngm7h^#m6CLq%4T<Gm5JbCTGS*0V%LI0fO7$Q:j&#d<EV3/\0@A`g`Z]FD#gdEt0As>IO88"j!mZ>+#0\"4\ASbIa92]&Ng-CEl<f']H-N63Q3])q%H0:s#-s.HQ^A0Q<W&Rd.kBI4Gk86:'83u67qPmT=$R1ThYqig.+H?o%m.P=A35dImB&?<OC$W60bCR=RPa6rU_l?drg'nB2Z6u$C%ORSrMQ&mL1&2(/n)9"_si)"A^3dQX;_<&)`C13dn[&9u<FA%2C4T/EDYXL`V5hYO22[CC7$pW*kJ-4F":E9F?qR16*h;dC=75FuG%_;@o/+];pGhsu'>HanXaC67`d2ZrqHE7TR0_7h#SkLVuV<tL1ET&NZo+nAYB8H..W.!PA.heFiC[V?9XWk%mm(M9"U.%@84=Tu5p%m7CfO.;=U6>k&E:r'A[4oZ9pT7N\6j2"AS\<M?!fWD["M\ng/NnOhpi>L_^"=n;+=7eCfr;WF(Tkcmt=7I"c4R[+RYW'hM&-&n/Y%\p84=_a]0gh9lXI#)ZB"0RIBMK=lJaM'?Tbp&)&W:*P]-oP&sl5gp.j7Ui!*g!QiB6FTlOd9_8ZJdZ`EX#lBN@O]J'd))o9;l[;6%Z>i+JSXb@<,.u@!Jt?*MFF#F#CRR7b*b,LE"[*PWNebq%5+l#pGkg4^-No.<?3ju8p*`%U<f&GodnJ`9U;/naMX>)R0[\pG<aGpY%RadjsTL'u2P>'J(Dhon1N4B%83!#(8=XZ8Y-=KlVL0[aB-0p="[-6>jP!Uc[<%(Jka`Hs8AbW(us%QAh2L#C&7+hBc82=7AqHgn9%Ie-Wjmg=[9X]snN1#uK[Ogcks5iF`r!843)qlp&`.q<VUY#"H2*SSl)kVY[@$4b7%/8DB$^FUDYdmdu3Dr:?Vgd"]<"d]!BJ+`[\%s/YELC\-C\j)7-1<[1Oo^?\jCeStP<pZn<e`m9,0`eJXGIe/kKIJ4[>[Hj=>\ukqtQf#BZrTom.\@#U,q2Lluc[P\lgY:&'q5kUk%c[P\,>MRPRq<a[,p"aQDk,p@eqaPdXq:iBilc\2"fl>>VCj/S?`sn*WDqso4p<2@n'UuqHD>r)Ss7,h;bBlW:l0855^pPR\?$\5,%hY7Z`jQlfW02%233RK5=a-<.mB=V3V:CKFF<f3E`QJQO'=b$Q$>qaT>AHW35%e5?eQ>o*+0"K-E0A6Xd8t24e9pfZ-]OFpoC32/e%^</GB>G)/ZdAU",(;9g8pSJ(V+oD"tgXft6(u=$>/=(mS8d;>&LR6^`0uJl*oX1a9P+_>jS^F6jB5kjAem7b2m7b!*<OVu([LLa&%Dqp)'3hH!%:pI=!"`%>J!(k1jYsu?*(9tQ]S3Ju&RI4:BAZW;LWUnO$=%kHD?[CJOH!C79fqpRTP,\s&PSt5bGh-J*.4r-DX\&qV%&ZeH(78$nqf6_62q]jMRX>Zjg%Q;#b4sa'>M.+)NCsB^OcB^XoR_gLk\k*$bq//\0eZTk@=$#nrBGG92bV"0FRZ;I5UPcXk(#A6P%-[EIYO9os*P)8/eWbI,YZC"&q.(EC&Q5M9+i#.cbKKMD(L1lb<=tq[;V3sY3phf@&Z:J],]GdiLcSQl"2YteCd6T:FU;us%k6=)Q%@LeN)?X8nkSrUV#)bM/9H^t[dA_MRZo-8bXq]Gj=9ua`IE/22%eFV6,GJsX@]ZG.iIe,IAIJMVV3_mh9hWjn,2fEl0Pi'(.?/PVC%%IXY;^3Ro6^AH0EhY#]ChY%3k^NnkO^AQ5[hp6cIm@3#+h/D3M\DtU=n-WU]fE)f?I`!N-dt^6L'?DOcrRLpE9Z6j)9I@%)5r#34%L;tJT.("gSZ-4_&CAJH+;7A7ldM^i[6*W(#Kt[tijU$ahMC;,^-c?@kGiC+p2T<kd#:d:/]?2"D4uT7eF8KHk6g$sJPhcPESksc[%q-ukY,4kdmc]H&.\@+2<G6d;l]lBql5,SVTIt.=;IeDHfs85+ZmWZGE+928.l`L-1msk5n++O6YoCD[s++F)?^\MXj0n92os7iYP%s8$rSq5=7?*I_otA$Wl$3dh$,\U;!glTbFFqs13Ybs20dVS2fF8,g\MJ+Fb2s6IGrrI=_#DgpbWJ,P.0rR2kV5"MfTV>TJrs5S$H%qqqD3&,tAWM=:K7+!3-&GQ7Hs^]3V<s#L)2"N]-Jq##R<h<jZ&6hJnVrmU=cqhO).l?E9cs8:ENs63V"O'ect16[[2of)p:Dh%_@%J,%GDT*9=\bQ#o+$i2NkqPR\Kr9(QhokrlRDeO^L-!Mgi-?@I^D0sj*SZB"Id*+L09;(.jJKNTGal5K+2;#6mjO`=Y1?kH^VaR+"%)U7X*;"EER_'.)0a%@L=2f*O#T0QVj^5sHF[FEPNL'BZUJYGE6q*DkH+XpP?1Fs_3,"j01&Q<FF:>+3"WQ8(n`6GM-;3bX#%iPDS%;b0"3W?Pf617Loc\;Bl%<Ygq^UH[?SEZjS-UFd9W_Ku(5G8X-)F]3iXrTo;TIFi.cP\:Vg#O"](GO3^M+aR<XI<#L)d&IL^8eKrA%%TMa'?"[tt#G<=MB^*4u]8ob&$AHckRN1$`+i3Wn]nS)5Cj^]*mYKS?#\[f1T7;sK8P.;S>S'BrfX2G!l+-u8a[jB62+2C;Zeq-9%$9-p`,#,mXP8S!GVd$P`G4pL@]B%0OKE;Lq,k$ocOOU)q!WA@nGX]\2P($P*(R]HiS;0$/Y*,d#\5chaJ8V</7DZ92nKX>\^MI-.%d1O@s!`UA#9J:<-=BQo`=NTfsgRC?0aYHQ_07_h_G6^7-6Q@\Z,s3.#M@Y%jk>o[R'Xac7@Zm1R\i,1TK@lO`qNDt,FNkCf8AN.P%A4_-AN*($m\X@Dj`#hq#-1<YbK;V]&0n27=JYnZs5&WfW;Dfe-.l)?#6Bg1[3DBH%']uMA-qcR$>*HEfLc2A?ge*'D!P,O*r)A2[%;&**(Pjh7mj&LHs>Tjl6>=&dV8&9[#I)6R<:n(Os<7BrK*I[jcFjrU]Nq@:2^-.u:51CgYrRDI?qYWSdrrE=nW>74eTj$c[6_?"/%^OQ!t?i9+R0?j<s2qt%?)G4d0>YJq.h#31df"$jrcl9UDgDBh.XaU$Ora*o(9LS`10WXr1n>o_hS0gpj(/!=j;OE/+s+?abF&?J/%+=@fAg#_SYN(^<L8k&"hXK!E/lqq8l\1/5U/Z?Q);0[)n7L6E./eq#C?O%fR-1:9@]h[o;C;hSfOa=.(+gMCG3rW/A8X#!.V'hFt%GeosqCK1*CW7=oMe_<G1*M;XFY^qAYr`i;tA55d_`tJ4T"#n['a(P/GZc_k;s$E(MqJC]<HjW7i)SGmTBGHW?6lK>\l44"%l7m[c%P3hWjS_86h8r<8$:JZ/ofl)iDYPZN#J&Pb1=hOSAhma<a+r*2K6\qqb4n[Q4Sd%:#WSFlnCP["c4Gn0W_D:fGAKQISnNEjGd.kF8%EP5Rr?M$85<_7qIg"<*Aak3sLq_cq>V^Smmo$l2c/E+hZHr/qGEnKf(,9PFm/R,KlO29p5.2_EBOq=2I[_(gfQq7K=8KELlLjD[K%pQgu>89kKFY5\(5F8@Gr2*?/':@<mr6_nk<Njn-\$WQ[D:cpb^P,@]YVX2m<>?=%s/@G(3IX5<4"bPS-E,r\X07X!:Ip"4*_Fa')%o#O!tbbUSn,I^N]BkQFACi[MYHC6_1E70HT9cMT=h/)[<C\A#u_Rhg\*ji:imjAR\D(>3iddZu?5FooH'@gj`eXQZbdIDI9#%10o%G7t0R=V\(,jpQ"/<pupo>40WnM(r3U+3e/5ZD8`/qrqWg)cYaA&"ao4aHICWcVKkI^\n%3r8kC7b>3Y;r6;/'-uasQj`,a[p-RVK%3=6='ph9'A4\O2=dA>[=cpfV9NV6)e'mEU%4sKm.b'O>'UppajX*1l2\%h+>VA_ET)phF98qjK-d6!FU3Ep^HGoK:Q]80/[.Ysl>%/(M&".&tiA',H)*2Gn0#51nUK0YQ^D$t@/9G2GE@_a[S%=Cl(?Cs@(Q^2_rBI4RT(hg^$?jn+q?#;[RY"R^D10%V>A@g3?d(Ole&%E7`#4b.9X1pfSjM.Q#B/O_\a8r4pKX1;3:'n+^sA;QX1;"oc,lX)^OUFhIjW>nXc/ALb7.@.Z@@'JpSN`%7MeI0q?lY#'Z7Q#D`e%9%e,<JnorGeWS-T\,uP(fYW/HB.#tK$U?,?&j_&5VB._i$4F_h+t7"-,fbbA>[:oh)U,9u_;GA7=3$p/NU_O%eE\"#8)OAHPq)<G%j]PtaNBdcY-<=;="&.]1UmO35Dbh.kl-!JIK'RDhoebI=.!9ub!Vq0CbI];]82$>$g(Tpern*VY'G+dnFIPZR;8"=9n3Y3l7"D<f%;r>I%IsEEM+8A-u=+HWt[&d0l.ehdo0/!p=fYa65K"KQ[]/@T%^:oAcOW:V3,s*=""91Y=Ypl;b;'*^Dd&/p5ZPk4sLtFQd,Q(aD%#bom,]YNTdH@>89jOG'j)BNEr&1V8:<%Y(S\FP[(n+@C+D;d[kPH9]1L,q>RD8IjokptsE\XMmb7)!S]Nq:EWYk%o.DnCkM399^5%`S0Hif56C/?es,+LRp&ersZb(@Gc)2W^4<j3VCPZ<s^p!V<tIc-$MrQA9tg1\'0W9V^T,o<<hnj;@+neNBZk;gjBRh0]>l97d<4U%@]AXN]r!lsl9i;s1WQ&0BK52r5U,FNe?0%*9t(7`)l\ss51_&m07QPD[AZ>&eZ[3WH3T)G'!?r"K5U9:qB`8DOV,[E.@rg?9l(O[%GuK=r<K7:TQ(;=*'O*'[((nm"`b?BSK-GQO#U+H759gtM3UdlS@ZX2JHMD<,r@Z\p?/=RnTu\`\fB:XY0-u26O\r2Q8qUg4(Ntbh%9uAR)ng]l#o-.GY&Z5DUK^n^?`TC;_+J;\/qJ&(s&lpR$jg%IdmcRqOqLdr=<V]dRUMR";Ltp>ZW!HXnd5i*':eLr<+%3lE152"I%k=d%=,Vcp2U`#\X.:(G5;?J`9/46J!+^@00TZa_.2,F.L;Bp*N*<.K/`af@44sKCBkW7]bY/G>I3)l?#FroXrce#$urc)WR2I>gC%.5g><9p1J.5q[S+nDFtfj*']'of#&u-!SRt&tML!q8^8MRQpeW;n`BEDl!.MhgG\9p_5E,";X1W9i>U2_gsGlnUV8O%Z/:217^jS%*_.?49_:Bf0J=(XK(Ti22G7PY77!J^0][oh2Fj5k`)2i<o("\0m3d"IifCpI2Y-S4P@/1?fQ1Ups-I$Z/mh:m<HDO8Elj$Fh`VD1%PVkeQ'3ist?Qgdi%^>a=3'kJf.UXpFa]jP_Rtp=i&c?TG^Xn[39f8VXQS9-%%qD4sYn0afSuIJ.#C-9oE2ua>1O/"_l5*J$Fo/Jg%1=j&:M2)Yh&FVu^pdRCA&9kF.4ePGd5YuAb<Bg]Pls*m1XXp*u2chu*8"]N33H17&SHV9&KVd_3;hiu%0%n8Uc]!l6\dYjT^Zl>Z%s5SU]kV'$W]9W?)`ibT?^`b;sJX%#?4udXGpa&T7KANri+c])fVrJ^j=W>t-.F-[&Kgg_Nn&qdE83^Zc1j)Q`O'V:_HHK:uTY7)K%:p<Z`o@6WG2K-tl`oqdtH&Aa\?iB#Z^-[F,V>nR7nFf':`d[Nh.6TlH+3E_nQ:(D5%Zpr1KiML@S[Y#Q67MjOL@UWLC<0=h/A=&-%4qeB-o_4,;`n11Vn%\"'5BF\8$8*tFm8'a8atTJ]J<YLB]$!<Qck8'=Bh*g&6gst/4.oL>&sH?cK,nNVV+)WN8O;D#!fa619LAii%L<.Pe+_kRidjae2!#N8:!F=:GL!5:7ajB5#M,!V5oI8c0-r7`)pmMPjR&:KQ/2coJGG_!1f>Q2.Xr8Ya"E@UOMIp-iCe&?%_h%4I%7aY3:NY6*5Wp-X1,9O.1?fPQZX-SH&Poq(Gno=J]Je@Ehp?Ob^,t6S_V'gH9r^hg$7aP">'sb"0I-(6fL;34,TgY`9<P?H/fFKB1%oQ%NCdA3Lie\.O]V"FRAj`]-[Q0WUN5P7q)PFbJZRC97dpT[1Ybl(X:Hn76@eg3O/,+3KHJK#e!:uU#H-Xg[=JF>85oDF[d-(#&+%IMGShp6>7B`m"ILCC.ZT5^[tR-;a4:SFK%tirpEJKMW_O(*:p6io$&qc6\96Yn)t;&KL9Q/"@c'.7im7]_Yk[q'u,gm;3Qs&Zp:C%1`eB4QN>l1IsC]7;Y#XA]SX85J^:u_ik1!=]R^DQ6:Yr;9Rj7P7Wcl\P-48&eDN/W=PUfgLeHkqMR[>$I$s%*_J[cT9*j]g9d3q2%*c>=rmDp%'jTgS[jhlMYNq\9ZB"e:hF=m:TNIZq3_S:>>5H'OTn[i8qkpad`^,AhZg[_CXK'\8<UqDb$/4Smk;`nH_'":*%WN0ZR%Ie*HLqn]eP+,i8'0'_OF*Zt79rcp&P:JVRKL3]Sm;D8Z2gN$!$SOa]K#\'.'X6JOlA1T=_EK7N0\d-CLC3\nU6n*k2P]^JY:Y,W"%BOmP*gPVI&jhpKAVh1G?H/#%t\f0'tWXF!fNN1?Mh:^cCDYTmRms@u4'j'Rlp+`+nh((S?@77#*Rh)E4f;/G16A;:STCp&'qP^*%%N`1.'2>e?gZ?J!Y0LR-G&@M<&N.1<b)7's>JN6KqU\_fZgT7:l:$EOB`212@6YNbN7^?T;n=ColENEY=N^E$H7)Hj86=4/RmGq>Z%X61WkmuE[pZ"Z8p@;jP,PC-kqj2DQ=l`[g+%(>ke$c^Q7LIEQU.&lamfO:Wf4k&Yt*:cQT;U:D.P7JOf:YBCY7U#AB[4\K'$bH^n%L*@#s)\;3=g38J:UMb0&'t*J/&:^_\,9;AWOKTdS^S548Pe=7S9VF^Bco.`Kc:)o6QE#+!@D/W$]O[KB#']G4j4sLi:ZfPOfCrV!%85S,HYK.ZdY5+$@I@j^m9WIL8rU!Nno[!N5_aS(Y=Ee86ZpUk(NP)u#Yt#l7R]cXLhgE)>\$"RM_(u;Kn)sbd0R7=hR.hg9oAKSb%4D=bEHfqtMfo]P&-g5cQ56St-8F='&g:t]I$(t-?)6sB90T639CscanaT4EOQuDHlXbbao:S"LtobgX]?u$mX(nE$uhD6o>CL+&p%r9QuP$S^/HBL(=c;#J;':@ttmhQRthIrBDQ-nsa4[-[elq9ZF6?c*sDV8@>6MGGS<^q^OTRP_IZ:C"cUbae=b\o<ku(QS7Y.r,%B%kA*5I`Y/#boh]oee.%%CT5176p2r!`l_i\>s*kBingX?CUt3R>085RSI(d,0)R$N4X0QkuYDHihL"1<OkncQgl#UY+fbarsosL@:%TKg4/mC#5griU+h&-'@%lh`VH$!D%?!Vstl?AA;B^_u2=SWSA\QapED1XPUE6%&^0U3Xmu1rK6A'b^'$''8k0XFA\B57X5E$C=&-%7Mrk9B1l_a@[hiiaR>Oc^N`2lcNO'W^iB3jH&642kbWSMNJ_b@\psi8*_TN/7<c85V:tNC\ph9)^CUIp-1mc$i?u>u2b*T.:paot%iXtE!2b*RHo-egs87ue_bLO@Rs*r:7Fp7O>;6_Ged2kR],G%/f7N6I)*1Qg9KD8Z-4p,V/P=+)'\U<Z0B?<pbF^<Z[Vu[iT(j%#I%C#so;_?UCRJ1^K"+_&=VqH\T:W.O(>[A:J7@hGF6i3h]83eS"V-F&/d\sU"Z8C.umrhn1MA8E8"ZJuK6Q-HbZ00b.$E\qCu^7@L.%%kX<Oo+MZso3bajLV9hu(Md_+%e20Harq1fU6\T)NdreuPiH_APiX#Ao?6'#?OWrNb&I9FW/gum6+GMrC&g>>%hN\g$-#_g<e`Vt%9C_f:'\ol*4,%A,`1IX@HO+'&c'n].B)RYOCr\$tp+Ebt?9PWb?DLKU4P/oj0>hu-ptbg3I.u[1?f1fIG1GFGn%N+,XGSupLDeJ@%%.`if7SV%L4Cetc.<lPp\/ckm`!T'&jQ0]=)JsnMZcIsNgc'V`#(H-BQq=f;!/E,rYtp5'P,lCO%bZJF6Yd/L+WupnQZ*OB#YGf%%r$&0aP>lWcGrNZ22[k-s=%.=,aZ[WR;nrn]Uc`&#XM4lE<tUijjbr25_M(Z"-A":EXrrQ.F?'R,,e)4V`?:9!Wi2g_(4]5IDg)]]%+uq"06Dj"17%m4o9!R&Q[-!m'Cf$-c^+9Id(kkh4a8f_TLb5$HpS7>E"=MdS(W.[(gj/qZ=VL%E)dtVEpSR##=eo!in-0\/'(GIV%&M'L.>5KL(g2P2H9@'&=Dlu%<0<s&X85+^S2S'a"C`OZXinLugpKIbS+O&8oR+RFgKofuc8lD&'_"O`]fHsb-R*UOH#&_^QL'rH3%8WfS*^lcqojKh%hrtT.RB\U"SEeNH[6ZB#C.<g78WdRupFOD["Oo%h'j6r8!+?_2()pdm67H(t^l2]%k&X".<6!2i*2X_-V&]!1>%jT(;\:Wd*jd$;">3")lr^1niD=3<S$N!SB2;o8q993!`$!CJP8J!455M+HRJ5-3kM#W0ZKqJ]-L>c1hU*G8$U]uq0,\(#Vf42-'t%5$ADZ[H6F9.brDZN%;Q6eU.]9Uf'uc3VmPOFDE$q!qBEVFjs*0el`9:lRkjtk.E+1B&hK(c]ZK'YM,u;Z7dSZ.R6iM8U_sLC9LRV%*Ub$<6chgjp_Ju4#?(_bEn(SS-M.'>*n?T3Tj3la^Hop.;O8,%5'YU3NOJBfGks`#5)9ilZBqd(<7>Bra(p(?V4'$C0:83(opmB4%k?CZ*e1"BcQO^OKJkWd)aAY>cB!(VP\UOIVR1C*KmuR>&G+lOBYV_7E+:bfQ(;T12!(B!j)(gr_j_h7#"M[:AYA\emJu2;j^dW@<%1pcuYnAW(t8C<i].`&$%PlV_:G//O!JSFG--_4KW\W`a]-sj>u-`BP8DGT%3L(Fr:Xh^%RbaiOD</oEFLpZFI)BJ*#Gcu1GDYJta%$_'nQ8<_%]#ij1UkiHeL;h.$nU:,l^!tmp>*%!#+,\tkQ!?^Z0;s#"t2\F1;"5X=YJ0=Ii^rVrX#lDJ&'*#=SoA!.4*m(rR9Qb9C%%<3RA2@rXbk(o_Jnm`B65^76)GL]NU0SWlV'rdfo=8A7bK6hD:q7qLh.[kYo.2o9CB`?Q[@mne_H"EH1OR9RY#>7S]06;@%"2\$n%4$XaED3<!G&3?[=Dpc<K>WPu^CDB;qc]*?.q#JIQR*dC8(&+PmChYB0jI+QpUA5ss"TV,kQVCj.OOUR:Nk^U(/%n^7K7qf.Y;N`p%gn-^JTpt-E"PIKHBK!B^RNcX%&X%28)/WDd]GplJYu+O%3j*r-C#2*+&<,V_@CoZT^3I<PRpWi!S'5h05#%H&[da]l--!"Qa&N(!%HcAS>8QTS!c^mV<piYa3n2NA!8:9N!B+hEd2kN]miOnS`!bCNWPA1'e/'fOrP[8Ppm3Q+b5(3"qee8BIW12*]3rPLGMK1YJ;p>6c%-e6Bo7DJ?[\j4*BqocbMmZ2klmd[pX^Y[:,<PjS/F;>'B#lTDbc^o[hJ,.o%HaE_Gro:WJgjf=b`5VcRJ,/O0p\%Af`lmOPJ+q:X%hL>IcGe81l^]*c$Isq(bCsKA#9;NW:prug&T`8G7KCpF%Cp@+NQWElhRUt:NE(,m-3P**QAHF;_X?k1q!g,Q_q+!68l#"Y/_D$OB%0o76NOBV_sC)C?cB]B`F#qRUh\*ep@"dK_aE`qh)7A+%8:Z.r]6\*u]3h=FpAh\tArDniGG_R>(pNMsS2+St\10uC%ejAAI+3X3u%'#-2p"_GG=>P\JIb4g^S]m=#P<p`)q&93O0>Z#S>X#UfCUA,HY-pbZSFsW+4BtJ]`@DO)%,C094+V0D3WX:ul;'Yo>SU!$4<([lo%Z)F04)[IrBD:FmC'W&K]qJ$Z84q1@/(@<E;;8B-QZ"GaHZ(?C+*KQ?4<TAh9r%Z]-.(CfU>,YA?Sj=6iFC^u4Ed.[eV3L2\`)gFl%gPe<a5t.3G5'_j!fEu_*Yf[=1<us_GDM;hm/Q@:\jMWa`$"2Sh,Hl'(%ib#_Z[5=\<aGn8GZ6n2't,CO\/IL&4V1j6aV?b_6X9a:%q<7OGCIaL&OPk-\e`8s^+9H=fJh@_r*Et@3(m<b#Ild?QrmPJ$4.-P=Lq+PtQUQ.+YpqB_^X*0`Y=*s#g"2X"0]%Q]\K%\P_DQ_*%o%mR>/H8F.9O?+=;.E-`'F?Iu#hlkK+RDs5*KdXE(JlgT+k:2i%W<H5g%oHfBIh*N6L&9UP6:2VJ=@/:`>6,X/2ql9[[B@O2X>$%%9AP@c!B%rs[:+pTr/_p$A9/f`J0,ni@:I0a3PW)MF(A?jh7MOU/qcokV%6G^6$KNG(:q`uImr*4XYc)ac;bgRHUb9KMPV-%%kU?g%InT!VL'(e<@^Lts/HV)e^<cq/21)bK^ir>0Z'TU*(3(2'T6q36bMq>*d_g>:h9kMQ>sdYA@9:o;itf\iCASdDkO)'f6WjBp7kc7t%?J?'I2EkK=d'6a_&Y7g:EFKO4'^R4m_85?HM0b/O5+L?HJH<T$Zo`N=],rm7V/1ljF9bZD+:^bF7W:oi8nYBgk@0#;,`'Y%Y(KC+%[jkH=6tC&\iBV66("&*iHqf%>h_KP27iL6qMTn^?D:RSa!K,+C]<?96P#Z0#5*uR15VOOsRaGu&Mm<7:&_q4koa\*(fs?se8A'ck%iY'U'-S,<f3Xm6<6H@$d;=m_J6Q*0H]&N4S5XZe9QVQ*`</EGR[<:S,U4eS:0ArcjdubuG7Gnk=n.G0RkX?n0[Z;P!&`TaBG0ORF%OB=N\kpbUgh+TXfW1:W@J&I26-f/6IG!m:SE_4Q]c)"WURtE_4">MHJ\jsqei9N'`EYEB2dYt?=%0Np#`M.9/M\\-gZXJf4_EDFN%@E_XcUh[e8a]DCRW='2h+uV#V[qdJ2>6b_O##i62FTK+aL,'Wi-@g&$[pm;7Drj5;,IN=eOM:NNR%q#npmQ"In\g1I5MZah;s]cS%;67*-4:`ZeFGd"&gPq$;Jkg\HlelCH`P"fY9XM$nA2gM:TnEOtOtNnM.D>J-LGZMe"kOAA%_QT$Y1Er;(6RAa<%f^?:gsW0Y3*2E%!A'&<1X5G+LZ>h2G,KJ^YXh^X2T$7A<'72X7RXFZU)^9g&XQ''r!F4G@-V,D^KJJ?J`V]6[B0U0,6:se;38aagH6+$E_W(+.]7W@%_s8jBKEPrI!tj4\8]17m20V8mZVBA.8W@VQCtAi@IDeY&q4pt+V;d6rK+p_/Ag+uQWs3!KRqjAh`l'![qX1W:@C+omQHbu$Wq_au%ZRU:p'jf6]?o6]$<M>!g)rt<JJZ5%mloI%-_Lrlc8[I:BnGSP]p0/^1:!8/>s+&CLVG*eg@RC?;6lkqfBQf/S:Fm`nBbBl)/!f-E%,K28\"[f'02lZ&9'$s-)f9ehl(a6foYIK'=I@E;8q5H2TVBn+c.7%gJ7rI"?+`"9u4A",X]"\o4.`OP8mVCNlfc`aN7YMWo'!D<d%(;-YbX<o3CXN*ZoeXr_6Ms_M<I*^MHcqssg%UF'8/7>T;3Wnt!F(ut=R-$XoKC9Br#qK83(1,\n98bCC6Q<`g6-F9Yi=+3ff&VMH%,m1iTmQ)e;Jma'(m!98Zof&KIY)a1'?dLY%'(+,.3)0mu$4[JrHJTl%pHI%?;8AXuRuXNP0K"<:U-#N8\q@nX\I$YlG5%7HjG2ZO%*L3[^l:Uf)ikZ'WJoJWiY<sW/OlkGAdT43hX71t7YQ9i=9h\m9>g*+?g$_`pZ5t[5#h"79.0dOd/<3`7(;gF,Q%LGp+^T[4!fZFL%pl/_f2PD^#?uY/Vki[FB=j!7ZY$%LZJJKGh$2";\qFA*j7+KAt<*597XU9MW8Zgr_'Umd(7^YKSntL5,@pC:^Q=m!Y#e13DqIWd$%DmK8G=XY6mY-%jn.3C-2^k%:tN$J-n^^Wc8$9",>AVm'!IN&eY_;i?G/8YIh5:_CrdXBOC[9$cf'H]7\YR4rY'H20Q"YPA^bS*g'%$:luV4@fIq\5Su(k/GP]D/VK[j!"i/kT&E7=$ngC#<&O`EHdp_6%BB,L_lO#+LIqXP.W4fJJ6"!Ydm^+JPtZ!dK6g8>EoGJ1c2Gn%]1&j]Ahmn@6>f5`c'$aJI4)0gg.0_JKr>K#1H(8W:TNJcr<'YIhge;6oV\SSC61n:k\35^Xg&1@">&ePLsVVFQ\mJpPF]QVfcX/a%aiW4da>XuGb!aVgXJL_""[s(-IMkiTMF(DNaoY9qs1'#V.IOjCjUJSS/g%g(N?T$mc7V(X%H^jf=h`!\+aQmo=X6'+S$:Y*eeMs)%R/SFZV641]gn0bnQjnD'bZA8.Q#)UG"a9@R^?iZ$P%"DX#Z#m4f(MU!oE6B[Va3ca\(q:0O(>LdDQYHhDcpOGX;&Ug:mhQM3cnmu%NlR&aeltQr_in1;\;uPI#RkZ'1cih>XGX8A/4[[UFF2m.C/"pD]p]7lbZ9_m4D5Rn!,/OUTT1E(M$bpP2#O:8"=?6EFBOY."DFi=%HU!Gg(eNL)\--J1_lJt)=;@uP"&RD.(m_>2-410[@+pq^'a'Hsb705W_7F'0,)BpkOfi6ZaaO5D&W4<lLk7(oA9VIb'l/B_'3ODA%QkW3FAgI&Zl(sBj@-icA[nnGWR;d#_(JZ=9-oJ?6(_VA]%dJ2MMh,$nKdpt//X7q-$!<Eg!(WNVC5F%,!jI"l9k/Z]6^:cb.hdnp%jm!2#)/?!qQj&.N_0oIkk9i4Z2YWgjWZT`'!TSYNc^*s[Pr=.7'Q<l;>/0k.=uilL(i_e+SbdDT:=&,;'&K?[k_D+\'_]@IZjJN7%gn\$<^V!FMpuLgZ]#FZ\)mtT"hVP8>I.Hu#%:fFsNB5',Df=/]E+%OuB>D<'S#3Ijnhsc`n)_gJL)Bo-eMm1Dhl^tgj-t0$IXIpA%!PRL;H3Z9c[qZs<,2T,Bm)R#'g'=^+\*5"(bhT(HBXcimKBsu/D-G$[_]/91r><1E'A7k\P:e&bSXZtu]?kHB7p^:[J&G@#3/I1L%%Us#Gl`q1E$3&n8r\7,O=<e.7/(lLY=P=LZ;'!Jt(f:k_%)Y3)bg5-!r&VZC<^GO_84o(gOI`]!^0?i+YIa?D$<a)GE@0>q"J9)i%dpZ,-MKI,i]3VQ"rL.66O5_52a9g(uA9M6>i/2^)PpCJ!rOe>TW-J%]VgOd^-eZ&'M#9bl-YR1=2$:BaME))_DB5uRP3`AR>JOV/%,U\uBC`$M<?E\eX)uuOsQ-c_(+-^+P+9G&*e#TnDkHiV$FAB&ekr6`NWOm'm>4?ndot&BVc:pMR(2/o9f^8DU7<3Q1d`?HB8S66u%>h?Mgji'$:5t@%f<!*+@:t%VHT,EB=&7MS/0<k3g%'uaGAC6=k\RS$_Ys:Y#1Kf8S$?o+j0Mgsf9K0eB=qj4ERC_)d7)N/o",^"2%o[&dlJsr!:WO,eH8S3>ihBH!12AOk5\o9.eaY%*@iW%dDY,RQ.NQ))IYFSemk8INtCtIe_a$[EK7Khmn9QZlN1/XMa,b'8s:^a!6%m!PT:<Sh%%GWqP;N2Hf]'q`_r06(XAgmsSs`'j-kAlJ&Zn^4'INU@cq&_Jo;0k7`&/'=VDr2,aRB?*XZ^Qc?:!fD_qAu8LJ_tbC.%20^L0gQp*$:N2+E>&d[LeZI5qRa"'8Lf;_OF0\9DZMBps/8UKrb4(e!+R1cPW/CJJ!eFF_U@H)))hNU^2%![.[Gi=XJ$n+1Z.te9%L!f!ma<auWXg(Mc)XbmA7_2$%c?-$Sd/o(XZ+Pl!K:3R/GM?UEVGR]Zc`sXG('c)Hk%s?A.&f)I1T:Tu/cJkGQcbMJ@ap\.*8'\j%LBCALfa3kSWF[8GroqZnU3t#`p]o'7W4<9qM=c2!]E+cuT&40DRgM;dL[6jGR)'_a]RYD5,%@n#)bL#VUL'1VN@%r(J)6fZ<Y5oV%@RT5^)'4@<nJL'e!CrA2:"3"$&F]lBA3TBk\aDg+"mT`<h4T1NZdZS*_\+3HY[+obL^Z[><-R/FUC=@s$rL6"^J*'7!`1,d5<oU+%HK2;QaI#%3mkrFCkYc(R@0G7Pqg44^#I[],ZQU@)V*n;)E(OQi<:W9OGL:E'-sLKm,ToRET7bZiZs!$qKW3/7?HhUi>'/rp?tnSJ%..be]j9n5_]YtaeYg8`8.jY;=fh>OXOW(n5U$kAjJ1Y!koNL!%.3Qa#l^<A>fSFqj=MQ4!V\1%nNba:5Ct1ZZ<C*(HEk?4oht+Lf%B4sj\(73h$g0>8Znqhr\/i+iN$,E&2#&eg#$3P2-k`%&lqLK8APBSA]nq*(P*ka+B_.O=dif\-4R3S[A%k(%4:[on"=Ql'a72TOA%=+MQ(PYO_&=E3M2'<?MgGUhlu-q`KZVOnOr;9W"aoG%n=P2DHNPnHYcRc8eqh!(66H(`i>5U`S$9cRHHauG7[`dqP5<M5Q:0HW)9%.gd2^TW10qQq<K,)R$98K%Fksl.f]eC+Y9DdJY#d&R?n4D<.Ks4'4<IJReHrV<8fh"?MG"XoNc#h*%!,g1An?l87]-G%]C$7_V"i%;%Y'VN1g.U&dB*Z63M?uBeK8m<iE.gD/:q4%Ta@352=u7qp<P&m[]P+P%Y)Iml$4,fBa6i6>8JnMpNp4E,E4+RV7DR_jH6<fC/G5%Lt8GSlS9,bXKr6aNuiS^e@Be0Rr/7#kYt2:9,+rKlNr#F*Z_2Y8i&inXiAIhKcZGk.n%D(=J72Z\75iD)Eba/5>++/=O3d"+)YS,%jT)nr-\NOl=[XRX_CU$kYePN_YHfm:$M0bFp+_1SJ[3)AM99`Hs!G<^[XrJ7/D,#_5rD9flNt&hhBN>#1#BOOlX29g!nr%q^gp2q%N\7>?.`VCE,T@U2lEo&doS,qS_QAX02B<B>`<Fuf"XAm=A][m`DbfW<Y^9Cfp/t1XB$ObfPG;!Nln(%o:;L$/NM./LVFcW`RpITA%5I_1E]8VH.Z::f-mi\:X/[C>(I#'<`RdY*Nj?qLU57IgiCQ_A=Zik<peMHQ'IkcdfAaB"jFr-d#4ace^PL$upDu]+WY91LTl.u*+%IVSo]`Og&;s/dPbJj1[NC!#Mm+1_g(hZX2J_`tp3c#;M<nG@.<IJ<Ej(I-aSp%Rq3rSdMNlTa/f]^XAJbCBHG_`rPEgUmK1GPpmr%(I,SrIeTJ9B1,>[`@aj6TC;g[O+04][JomGa="[Bp=es6oDZf1gdQ_H[AUXoh>Oh_^>44^a8SiTIL7j3_;e%9OUu&37gQ2H_#%]*%CaSG7eUkYTMaXL&6'4Dd-OXc)@Aldf6^SV\V'#$O:0:eTYK!uk)'/EtXikH'd?"e>iI6?hY]57"]d'h2@7pZNJ8-KU'.""fPctC2%?A1Q\;*@>ENcT5/=mi=Ic=Ep(^oM^&SX5V1/&S2O"Fs+_<@19IhYAYBUIke0k'u]EJe^PfC-\$%%^D4ubdqb,;4E0#&NKk2[u"r!%a9JiY#L1NEmC+VIn,^XM&Rg8<,"lo'$,?>@j^qH_FJ^-d,j.>BnG_%+^O;U2gCLAj+T`0Y0?([&?:'R_3eTef=)\HQL]BTWa=7df%WI'8;`I&dOCs.E]#]mMdA%U.5,T1A0<N'6sJMos=SeNplWbo[>4/TT*Ce._@?TJ4"_^3jK?T7.+8(Oq6Jg[h(gWaID[Ku@0"d>1N%3(:s#bP$.\iOWrQ9AUg@aXDk[a?UFZ1IWEB_dj3\nUkSW8kVG%=kc62[Y=k\iF^0.;*abRNX"<6#g9/1iN-[mXn_#jh160_n%*j"%;;SV'e!s2M4UQsSlWTup3JB:+(I;s@g?p<+E(%<U-InSFC8$E_&!d^LO/jh]l7LqU6KcG1C7%ZVajPL';Yk.YL(CIk0KQN^5llbY%HO3@;PA5RL1O4jp9/__L73Yj`CGV+0dmbfb'sicO$p`VLZta['KJP.DOkb<c/2Sl=E0IlZP<K;BEV-7TJbpeBd/nZsLL"@Ngk#o(%FTOhuqp*4?[QtVFCg!/3aMS>s!bh[[)+`!)Xk^RpCi]`6\E4e(d=u-J^'(15(jD"91^r*&JJ=!&c9g@p7SXf@4K(p&Q>K+>@E3ZG%lk@p]7B4&?`e^rI[Fl6]!C0b.T2XBZb_&I6WsF=;h)"[#&PHg7\V"ga^0P_pPS+s\Ge_V2$_%fT=a#Bb]FaFoBOMM+d:&C.=\P57%Z^BPiU/(AZNP%R;dFi&G5Zg&&3U_lFS.QKVE-)8Zfeb"[h<UuTD\Roj<])M`%4HuXXEd-\YH*JEMnLjBMfO.'WPS6`iQh^>#3[0R%3]RX2lRE_mc%ML8C=_:H&KunYQg#9e*Q/@*"V5e=2#G%[Ak<4temhoO;MX-\QW*MP=c_T1Zi1b*mX!o305`qCG#<2_SA__d*C?pl%\XUX0_F##_Bc>gNKs2iS]$.R8BGB\b9WsJ&JW/mecb(U:j91G)/4rM.MdkP4>rcCo+3\ShFb@MH2;0]p1=KrGB1!A)PjNEeR8o2b%k05cOPe*f\fO2\(2)c/4i1anMiG%Mt&%lRg6Vt9P4+pGiWL_\O?'"GEb[CIt$uS`\%r.ru1:@o"W(gVWF`7]@*i2Bq6-h:dSYBKm%jL,/g:b`W-94d,JP&]UYkS0GbOipuP<_e*r(m`;[ana1M388UWG4sjoV]RXTmDB1%0]9Mq!n,-uEF1/4ViVAA\)E5k-o6)["cMb%%-"@9B70V%\eqP(h'X.,/0!_h):=u>+T+5XBVeGng.6Q<BlT3aLe^'9n_YV*tjFuNhlY=RtWd/_=q8403,#%8TrnM-7pi'dY?eU7X%O1/lYr-$,d*TU*?o8SNZ#>koWDt,`MU'b4gkT]@.)((!SE*WUAgkDQ_;7_6ub#eo!?=dkRHV&t(-"b1G9(V,UQ=61ud@l?$aR*:F%0#&`"V`k"&.9tSJrqnc"4`'MBXAb0>l--bLC*kKMKhSo&(6S,QM/.)_Vo.)n^]7WCc_=c]Bo<Z$mp^$=s-eo2Kf/WEJJ7JOpF>gZ%fC,4?^0\@qQ$hA7HfMM]0:>r^-,Wdb?f)D@Ys]KK%"DlrR%d(qjtWG#/;FEHr!T'BEtuOHB5;W%0'gS\4J!:Y.mm`gZ+VR(!B.Ls%a[]FKL-^o=,ZF?qAiYA['AtQ>dA$oBVR]I8S:Y&EX!2N$;B2POUmm/8HAFdp]tEutqmG"u#F0b?(XVW/X/Zbckku0'(-OFIZFP//%G\0NhBPQ[(<6eH<Bb<ObF)3@rCN+o^%aekHPsDaCLCE7hg.d!:dA'6gAR8]#&br(:'g?1XjV>PinEQ:@HESsNjL'u3D$=@iDn[E2%=$d^(F'J:-nAM,W'ETg\O\oH]@QB<7HU@$+"lcF[Pg(4\lYHo^@uupDQ;YA#HI^7ulO*%M9!>(G;m34(D0"H>cJRrkoC12gi8[k5%Se+oUH?5A/0RWCi.6:n[*]0Yj:ooATJ1-H=B1tkP(5!ak:6BOO((j+hj^a&8b!\:2eW(I9&?glL,mEg?g77->g=21\gc*1Xk0"3[%+g_]9BM3X,TXa*:)SPQ8=?M;pYjP>.!R2m0lqie/idC^YhLkIQ?A-K;D$iR((ZgO:>:k2d+S([J[qI"r];3V5g77VGfqXY?g?WSC%^&=ETp2[]4)fXnC\gY$*hSlcj(X]c`(ZF/EGTD-:2dabrk?mt^1-JjS.*(+rFcTj)iCE7^QZV=.p1P,Jcc$Z2Wm&t:DUBfXW3U;<%-5eC\fm4'^?]F4a<K]Y[fZJ%Dn""gtBfeLfMnZ"Ys&rY!-2m7@MtZ_pW5nOfoOX.n@chMmi3;J"F*WX&41<=Dgr"4qS`RXF13FYE%6oL3&@Jra(n`1hCq%+0s0[*9E'WU\TCf.CIE.lYt_I*og-LB\F%tH@:7W2_k"n\p`I(<J,+ZP?"_o/m4,jq_Lr.r&Wb@ju2.j@,i%iQ7me_I@LCoR'<bO-h>9:_:=g,,!u<_df!1PNPthM33/t*IV:KM:hcO\(4"kN#(%CV@.2`c'BBHcLqonJt_MAT<B@*?UfHgok+,p%+mdj>j"lU>PJ^I8>H81M]_5.1qnUGMFIN^;SjHRJO)HRd^\!G)7/'Bu^XmXdm%]V[<gaAOl#*Us"=BHWFj]6=[;e^IZO99?:ODs7%M>Liu*ST2k]/cL)n($m`C:elR/]-Ug3Ih%0nG)fp]Ch=Nodd/b%pH5_>7EEPkh@]KT&%El^ql8,$jB`KgGG'7_Xs8X1!/+1[kpa8%a)2o(lHDCU&Y<>W)I(#1X)KLZWlk&-kD.E)A=h<HXDi@S,M_hhcL9_!_XR=d?gNXBYce$lhEpkVC;B\Y?Y'5J.3tQ735^Vb;D//J%kHdSC0^,$H3jsbCk6bpk@jqJIj.Yf$E$=1RQ[5pXUu8+3l4I>292?Vej^[';#o@TSXG)Ck!D0"bWhj4ATOmPXc=5(o9*0CJKW&Np%F.aSG)*B'\mt^i300$mJ^)U0OKo/7<Dpt@*SmJ^:m)V"+0#am1hU<[raS+?A>)H-?^MaijG7)WX4[d7?78#K@d+5dWbU&.>Rn[qV%fkMSEqej"5/dh3ak5ET+KM3GhM,I=h))uoRdT+oW*DI]<Cc@+ho8Lqf>a>GU^<WYO\<K8CV4d,^=W*t"WPZf(.LPQfB'r<F9VmiK%*fEB#4&DA8)G(u=m$+F(cq4lsP1m4"0^cm(hl@nN!h%h!$W-n_bV8==SBUR)/VLi;V%o;;.q&HNbC;b)m[WGHW?UO#<l8adSqY4q%>^6A&3DL^E5UXBA1%Hem,j'JM[4Nm2fuK0GRVn38m;RP4*OLX>1^Q#NI^$D:>h5pY)Xr!VJ/[QF+%pV3]Ebei=M.-,:0!M08E69H%bl0N_)4*9(ViC0uJa]tM806YF-@]oM.n)^CMp"]"8;_]2"]I3gqoH\g/MjWASSpaig+'p3gB;G9b':5-(.UF<8B[IA[ZT#"ap1Qf%Q*?PU;feO_"#[0BD,C1=^bI+EK9E/&.N-J59b6%jO>_tuc;L5dcV+o"dKGmBEZs$Mf2CNR=7;)G=;M8tA'-3+A1X-cd*S/\5O160%-5MH1:]'TUR3HkW?&iE4%b<YbF?AdC$UftmFh+%#J;`+46/dd5>#=C5eVKl;#MIa"NjZ<O$@r[]RCbuIbJ&PH"#o3`H%`i)L64)]%NFDoJZ_g`scfoXP2D!U#W<oB?>1W/QjRLLCW`eV#poN[nk8oVUA%rGiKbCW2i'`dbV%K7u?P"5:i,rlIa4LHZBmUVgm*7c@_\"5j%3,EU6_(]A_9KLl+0]]J[D9iX.,jR#-=dLCpOS@:5-gWBQ\=5'lY-GVHA-EY0h^PVg<d?rB+crM`m#Tc1NbS$&(6N#4XD051Obe38%O0oDoc#Wnu@`0&h6*7Fb/Mch\p:H$)"DMlBp#Tu0M9on`oN;N/b*Ej?BBe3FoIR:X-@#T.:F:IOq+YrS"6;<&PI@rO%-J6cVe/OB%Tm!fiPbScp89IMd=LqZUpO57Wc/&DO<9='.41)!Tfsmq@e\r^P(.DqU>8cI!S\d52/l\nn4?/SJe$]V/8NT=o,fI<k(/Y#(gMH\O%9/L4d7C1Lsl7-Pt]BfH&W`):OPH->4I[-$q.LMA.k%?JAo6oK%l7#<r.9qnR+PWsj[1lIDojVIb?rKrT+FT@m426u8eR&lY$gmlR%F#&aX0anLHF(^^q!$cj^itg3oZ?K0f:?t)pO8a1gN9lW/M@(^WG``OR,IEP$G-q6pnB^-3O<o1^f1aLrA?P*Ujrbg[CP2iC0&!t1%@jhb$Z2F]`HZ0n,`tQjol<Xg'YoU-ep8>4C0!sH^Z+Ab^C+L??WNYS?9d<qWQ-n5doD3&eeD7$PW4TDfj^XLA^.ZS:93dJp^/3YG%AlgtiDlKnK4F!>U/=O@0d]W+Hcc=O[)=]:SFiQ>q!BNM<Mi@22LlJD(/u(C+?CKbL3^qVp(8_U>3\R5P@`shdYM*rpoS*fCdu.L\%MN4#`]W"%`hfX77LCH_R^,uUm\fLH18I?Ct?nH.;K(#I!)5Qu/U>m9)$N5gab5?7)/CrjFbF3=gA[N9u%B`JI<er+n-]\Z$&=j@&%&6OTK^EbpckLDQ;=8M_'a!:Ns*OcA-*$,m^LEE7pjn4;&CB@"/c;@'-Drm]m-F@k9Rn]Z,MO#DLKrth;Q2*4`q;h'J?X%[f4595m%orF*[hCjHLs)E>!S?d:EM(@GS:;J*Do7p.Vq<K<$&r3^*GliP.IY44b#&&RTf!@+#Nf!?.Aa=7HSV+EXkB^HLo0pEAo[k(>HB3%t%,qUgPRr%>eDoV[4cCaFkC,h7X89!B%Ws*)WB`e21[[L.9D:cu-2HiOBO&+_>?;#-V&M@ERf;`ER[u593%q5=K[.'F]q$+Cr['(jH%nbM4UlBY5iNa312P;<aTCpXZ=)5cjKXF9kZTP@d>fhPjI[,"$/nduWL"!g.8pnZ\aSUtrWid[40Sim"$"QSp/b+kDKIm4khKor6f%?o[a5\8keu+r'po*04P(,=M)ETuTYpW3k$s5?GRLrOhXXEud:gEr?\i?DaGkEeXdm4Aj-V?nj;iNO4E-O<P.:*hjoPDM^mn]ROfg%>QMEFIfFA5kU6DlX)HknrV'[tra4Q2s5odm^A><_G@,dq/Z/,`J(Xe_m[N\&rU@kr^41A$_uKN":It2Obi57BnlL><f5LX![HFDB~>%AI9_PrivateDataEnd